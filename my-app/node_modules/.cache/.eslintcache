[{"/Users/nguyenthanhhuy/Desktop/BaiTap/my-app/src/index.js":"1","/Users/nguyenthanhhuy/Desktop/BaiTap/my-app/src/reportWebVitals.js":"2","/Users/nguyenthanhhuy/Desktop/BaiTap/my-app/src/App.js":"3","/Users/nguyenthanhhuy/Desktop/BaiTap/my-app/src/components/PopUpStudent/index.js":"4","/Users/nguyenthanhhuy/Desktop/BaiTap/my-app/src/Page/ManageStudent/index.js":"5","/Users/nguyenthanhhuy/Desktop/BaiTap/my-app/src/components/BatchStudent/index.js":"6","/Users/nguyenthanhhuy/Desktop/BaiTap/my-app/src/components/BatchStudent/CellsRender/CellName.js":"7","/Users/nguyenthanhhuy/Documents/GitHub/ThucTapReactJS/my-app/src/index.js":"8","/Users/nguyenthanhhuy/Documents/GitHub/ThucTapReactJS/my-app/src/App.js":"9","/Users/nguyenthanhhuy/Documents/GitHub/ThucTapReactJS/my-app/src/reportWebVitals.js":"10","/Users/nguyenthanhhuy/Documents/GitHub/ThucTapReactJS/my-app/src/Page/ManageStudent/index.js":"11","/Users/nguyenthanhhuy/Documents/GitHub/ThucTapReactJS/my-app/src/components/BatchStudent/index.js":"12","/Users/nguyenthanhhuy/Documents/GitHub/ThucTapReactJS/my-app/src/components/PopUpStudent/index.js":"13","/Users/nguyenthanhhuy/Documents/GitHub/ThucTapReactJS/my-app/src/components/BatchStudent/CellsRender/CellName.js":"14","/Users/nguyenthanhhuy/Documents/GitHub/ThucTapReactJS/my-app/src/components/FormStudent/index.js":"15","/Users/nguyenthanhhuy/Documents/GitHub/ThucTapReactJS/my-app/src/util/queryClient.js":"16","/Users/nguyenthanhhuy/Documents/GitHub/ThucTapReactJS/my-app/src/util/queryKeys.js":"17","/Users/nguyenthanhhuy/Documents/GitHub/ThucTapReactJS/my-app/src/services/fetchStudents.service.js":"18","/Users/nguyenthanhhuy/Documents/GitHub/ThucTapReactJS/my-app/src/components/CellStudent/index.js":"19","/Users/nguyenthanhhuy/Documents/GitHub/ThucTapReactJS/my-app/src/components/CellStudent/hooks/useGetData.js":"20"},{"size":500,"mtime":1637286740090,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1637286740091,"results":"23","hashOfConfig":"22"},{"size":223,"mtime":1637306447686,"results":"24","hashOfConfig":"22"},{"size":20708,"mtime":1637316019160,"results":"25","hashOfConfig":"22"},{"size":1175,"mtime":1637309504184,"results":"26","hashOfConfig":"22"},{"size":4262,"mtime":1637310696052,"results":"27","hashOfConfig":"22"},{"size":240,"mtime":1637309489041,"results":"28","hashOfConfig":"22"},{"size":500,"mtime":1637286740090,"results":"29","hashOfConfig":"30"},{"size":516,"mtime":1637649667120,"results":"31","hashOfConfig":"30"},{"size":362,"mtime":1637286740091,"results":"32","hashOfConfig":"30"},{"size":1303,"mtime":1637654692391,"results":"33","hashOfConfig":"30"},{"size":5281,"mtime":1637656255552,"results":"34","hashOfConfig":"30"},{"size":11650,"mtime":1637654101634,"results":"35","hashOfConfig":"30"},{"size":240,"mtime":1637309489041,"results":"36","hashOfConfig":"30"},{"size":5450,"mtime":1637570362229,"results":"37","hashOfConfig":"30"},{"size":572,"mtime":1637649712591,"results":"38","hashOfConfig":"30"},{"size":49,"mtime":1637650123569,"results":"39","hashOfConfig":"30"},{"size":159,"mtime":1637653928238,"results":"40","hashOfConfig":"30"},{"size":5408,"mtime":1637660667569,"results":"41","hashOfConfig":"30"},{"size":503,"mtime":1637660699163,"results":"42","hashOfConfig":"30"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1mdx1r0",{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"2yglhg",{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/nguyenthanhhuy/Desktop/BaiTap/my-app/src/index.js",[],"/Users/nguyenthanhhuy/Desktop/BaiTap/my-app/src/reportWebVitals.js",[],"/Users/nguyenthanhhuy/Desktop/BaiTap/my-app/src/App.js",["89"],"import logo from './logo.svg';\nimport './App.css';\nimport ManageStudent from \"./Page/ManageStudent/index\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <ManageStudent/>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/nguyenthanhhuy/Desktop/BaiTap/my-app/src/components/PopUpStudent/index.js",["90","91","92","93","94","95","96","97"],"/Users/nguyenthanhhuy/Desktop/BaiTap/my-app/src/Page/ManageStudent/index.js",[],"/Users/nguyenthanhhuy/Desktop/BaiTap/my-app/src/components/BatchStudent/index.js",["98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113"],"import \"devextreme/dist/css/dx.common.css\";\nimport \"devextreme/dist/css/dx.light.css\";\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\nimport ArrayStore from \"devextreme/data/array_store\";\nimport DataSource from \"devextreme/data/data_source\";\nimport \"./BatchStudent.css\";\nimport DataGrid, {\n  Column,\n  Paging,\n  Pager,\n  Editing,\n  Popup,\n  Toolbar,\n  Item,\n  ToolbarItem,\n} from \"devextreme-react/data-grid\";\nimport { TextField, Button } from \"@material-ui/core\";\n\nimport { useForm, Controller } from \"react-hook-form\";\nimport cellNameStudent from './CellsRender/CellName'\n// Toast\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nconst data = [\n  {\n    dateOfBirth: \"2000-01-02\",\n    nameStudent: \"Nguyễn Thanh Huy\",\n    phoneStudent: \"092365124\",\n\n    scoreStudent: 10,\n    id: \"1\",\n  },\n  {\n    dateOfBirth: \"2000-10-09\",\n    nameStudent: \"Nguyễn Thị Đào\",\n    phoneStudent: \"0902554175\",\n\n    scoreStudent: 1,\n    id: \"12\",\n  },\n  {\n    dateOfBirth: \"1960-12-29\",\n    nameStudent: \"Trần Văn Thời\",\n    phoneStudent: \"09025541541\",\n\n    scoreStudent: 10,\n    id: \"112\",\n  },\n];\n\nconst studentDataSource = new DataSource({\n  store: new ArrayStore({\n    key: \"id\",\n    data: data,\n\n    // Other ArrayStore properties go here\n  }),\n  // Other DataSource properties go here\n\n  reshapeOnPush: true,\n});\nconsole.log(\"Student Data Source: \" + studentDataSource);\n\n/////////\ntoast.configure();\nconst BatchStudent = () => {\n  //State\n  const [checkPopup, setCheckPopup] = useState(null);\n\n  const [isShowing, setIsShowing] = useState(false);\n\n  const [date, setDate] = React.useState(new Date());\n  // Save params\n  const gridRef = useRef(null);\n\n  const {\n    register,\n    handleSubmit,\n    control,\n    setValue,\n    formState: { errors, isSubmitSuccessful },\n  } = useForm({ defaultValues: { something: \"anything\" } });\n\n  useEffect(() => {\n    if (checkPopup) {\n      setValue(\"nameStudent\", checkPopup.nameStudent);\n      setValue(\"phoneStudent\", checkPopup.phoneStudent);\n      setValue(\"dateOfBirth\", checkPopup.dateOfBirth);\n      setValue(\"scoreStudent\", checkPopup.scoreStudent);\n    }\n  }, [checkPopup]);\n  const customizeColumns=(columns) => {\n      console.log(columns);\n     \n       \n  }\n  return (\n    <div>\n      <div className=\"main__title\">\n        <h1>Manage Data Student</h1>\n      </div>\n\n      <div className=\"main__Add\"></div>\n      <div className=\"main__body\">\n        <DataGrid\n          dataSource={studentDataSource}\n          remoteOperations={true}\n          ref={gridRef}\n          customizeColumns={customizeColumns}\n        >\n          <Editing mode=\"batch\" useIcons={true}\n          \n          >\n            <TextField label=\"Student\"></TextField>\n          </Editing>\n          {/* Create Column include Add Remove Update */}\n          {/* <Column cellRender={renderButton} dataField=\"\" /> */}\n\n          <Column dataField=\"nameStudent\" dataType=\"string\"  />\n          <Column dataField=\"phoneStudent\" dataType=\"string\" />\n          <Column dataField=\"dateOfBirth\" dataType=\"date\" format=\"dd/MM/yyyy\" />\n          <Column\n            dataField=\"createDate\"\n            dataType=\"date\"\n            visible={false}\n            defaultSortOrder=\"asc\"\n          />\n\n          <Column dataField=\"scoreStudent\" dataType=\"number\" />\n          <Toolbar>\n            <Item location=\"after\">\n              <Button\n                variant=\"contained\"\n                icon=\"refresh\"\n                // onClick={() => {window.location.reload(false)}}\n                // onClick={() => studentDataSource.reload()}\n                onClick={() => gridRef.current?.instance?.refresh()}\n              >\n                Refresh\n              </Button>\n            </Item>\n            <Item>\n              <Button\n                variant=\"contained\"\n                onClick={() => gridRef.current?.instance?.addRow()}\n              >\n                add\n              </Button>\n            </Item>\n          </Toolbar>\n          <Paging defaultPageSize={12} />\n          <Pager showPageSizeSelector={true} />\n        </DataGrid>\n      </div>\n\n      {/* ///React Hook Form + Material Setup */}\n    </div>\n  );\n};\n//Create content customize Form\n\nexport default BatchStudent;\n","/Users/nguyenthanhhuy/Desktop/BaiTap/my-app/src/components/BatchStudent/CellsRender/CellName.js",["114","115"],"import {Box,Tab,TextField} from '@mui/material';\n\nimport * as React from 'react';\n\n\n\nfunction CellName(cellData) {\n   \n  \n    return (\n      <>\n<TextField>{cellData.data.nameStudent}</TextField>\n      </>\n    );\n}\n\nexport default CellName;\n","/Users/nguyenthanhhuy/Documents/GitHub/ThucTapReactJS/my-app/src/index.js",[],["116","117"],"/Users/nguyenthanhhuy/Documents/GitHub/ThucTapReactJS/my-app/src/App.js",["118"],"/Users/nguyenthanhhuy/Documents/GitHub/ThucTapReactJS/my-app/src/reportWebVitals.js",[],"/Users/nguyenthanhhuy/Documents/GitHub/ThucTapReactJS/my-app/src/Page/ManageStudent/index.js",["119"],"/Users/nguyenthanhhuy/Documents/GitHub/ThucTapReactJS/my-app/src/components/BatchStudent/index.js",["120","121","122","123","124","125","126"],"/Users/nguyenthanhhuy/Documents/GitHub/ThucTapReactJS/my-app/src/components/PopUpStudent/index.js",["127","128","129","130","131","132","133","134","135","136","137"],"/Users/nguyenthanhhuy/Documents/GitHub/ThucTapReactJS/my-app/src/components/BatchStudent/CellsRender/CellName.js",["138","139"],"/Users/nguyenthanhhuy/Documents/GitHub/ThucTapReactJS/my-app/src/components/FormStudent/index.js",["140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155"],"import \"devextreme/dist/css/dx.common.css\";\nimport \"devextreme/dist/css/dx.light.css\";\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\nimport ArrayStore from \"devextreme/data/array_store\";\nimport DataSource from \"devextreme/data/data_source\";\nimport \"./FormStudent.css\";\nimport DataGrid, {\n  Column,\n  Paging,\n  Pager,\n  Editing,\n  Popup,\n  Toolbar,\n  Item,\n  ToolbarItem,\n} from \"devextreme-react/data-grid\";\nimport { TextField, Button } from \"@material-ui/core\";\n\nimport { useForm, Controller } from \"react-hook-form\";\n\n// Toast\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nconst data = [\n  {\n    dateOfBirth: \"2000-01-02\",\n    nameStudent: \"Nguyễn Thanh Huy\",\n    phoneStudent: \"092365124\",\n\n    scoreStudent: 10,\n    id: \"1\",\n  },\n  {\n    dateOfBirth: \"2000-10-09\",\n    nameStudent: \"Nguyễn Thị Đào\",\n    phoneStudent: \"0902554175\",\n\n    scoreStudent: 1,\n    id: \"12\",\n  },\n  {\n    dateOfBirth: \"1960-12-29\",\n    nameStudent: \"Trần Văn Thời\",\n    phoneStudent: \"09025541541\",\n\n    scoreStudent: 10,\n    id: \"112\",\n  },\n];\n\nconst studentDataSource = new DataSource({\n  store: new ArrayStore({\n    key: \"id\",\n    data: data,\n\n    // Other ArrayStore properties go here\n  }),\n  // Other DataSource properties go here\n\n  reshapeOnPush: true,\n});\n\n/////////\ntoast.configure();\nconst FormStudent = () => {\n  //State\n  const [changes, setChanges] = useState([]);\n  const [editRowKey, setEditRowKey] = useState(null);\n  const [isRemove, setIsRemove] = useState(true);\n \n  const [date, setDate] = React.useState(new Date());\n  // Save params\n  const gridRef = useRef(null);\n\n  \n  const {\n    register,\n    handleSubmit,\n    control,\n    setValue,\n    formState: { errors, isSubmitSuccessful },\n  } = useForm({ defaultValues: { something: \"anything\" } });\n\n  const customizeColumns = (columns) => {};\n  const renderButton = (cell) => {\n    return (\n      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n        {/* <Button\n          variant=\"contained\"\n          onClick={() => {\n            gridRef.current?.instance?.editCell(cell.rowIndex,cell.columnIndex);\n          }}\n        >\n          edit\n        </Button> */}\n        <Button\n        \n          variant=\"contained\"\n          onClick={() => {\n            gridRef.current?.instance?.deleteRow(cell.rowIndex);\n         \n          }}\n        >\n          remove\n        </Button>\n        <Button\n          variant=\"contained\"\n          // disabled={isAddButtonVisible}\n          onClick={() => {\n            gridRef.current?.instance?.undeleteRow(cell.rowIndex);\n          }}\n        >\n          unremove\n        </Button>\n      </div>\n    );\n  };\n\n  const onChangesChange = React.useCallback((changes) => {\n    setChanges(changes);\n  }, []);\n  \n  \n  \n  return (\n    <div>\n      <div className=\"main__title\">\n        <h1>Manage Data Student</h1>\n      </div>\n\n      <div className=\"main__Add\"></div>\n      <div className=\"main__body\">\n        <DataGrid\n          dataSource={studentDataSource}\n          remoteOperations={true}\n          ref={gridRef}\n          customizeColumns={customizeColumns}\n          repaintChangesOnly={true}\n          newRowPosition\n          \n        >\n          <Editing\n            mode=\"form\"\n            useIcons={true}\n            changes={changes}\n            onChangesChange={onChangesChange}\n            // editRowKey={editRowKey}\n            // onEditRowKeyChange={onEditRowKeyChange}\n            startEditAction\n            selectTextOnEditStart={true}\n          >\n            <TextField label=\"Student\"></TextField>\n          </Editing>\n          {/* Create Column include Add Remove Update */}\n          {/* <Column cellRender={renderButton} dataField=\"\" /> */}\n          {/* <Column dataField=\"id\" /> */}\n          <Column dataField=\"nameStudent\" dataType=\"string\" />\n          <Column dataField=\"phoneStudent\" dataType=\"string\" />\n          <Column dataField=\"dateOfBirth\" dataType=\"date\" format=\"dd/MM/yyyy\" />\n          <Column\n            dataField=\"createDate\"\n            dataType=\"date\"\n            visible={true}\n            defaultSortOrder=\"asc\"\n            value={date}\n          />\n\n          <Column dataField=\"scoreStudent\" dataType=\"number\" />\n          <Column dataField=\"\" cellRender={renderButton}></Column>\n\n          <Toolbar>\n            <Item location=\"after\">\n              <Button\n                variant=\"contained\"\n                icon=\"refresh\"\n                onClick={() => gridRef.current?.instance?.cancelEditData()}\n              >\n                Discard\n              </Button>\n            </Item>\n            <Item location=\"after\">\n              <Button\n                variant=\"contained\"\n                icon=\"refresh\"\n                onClick={() => gridRef.current?.instance?.saveEditData()}\n                viable={false}\n              >\n                Save\n              </Button>\n            </Item>\n            <Item>\n              <Button\n                variant=\"contained\"\n                onClick={() => gridRef.current?.instance?.addRow()}\n                \n              >\n                add\n              </Button>\n            </Item>\n          </Toolbar>\n          <Paging defaultPageSize={12} />\n          <Pager showPageSizeSelector={true} />\n        </DataGrid>\n      </div>\n\n      {/* ///React Hook Form + Material Setup */}\n    </div>\n  );\n};\n//Create content customize Form\n\nexport default FormStudent;\n","/Users/nguyenthanhhuy/Documents/GitHub/ThucTapReactJS/my-app/src/util/queryClient.js",[],"/Users/nguyenthanhhuy/Documents/GitHub/ThucTapReactJS/my-app/src/util/queryKeys.js",[],"/Users/nguyenthanhhuy/Documents/GitHub/ThucTapReactJS/my-app/src/services/fetchStudents.service.js",[],"/Users/nguyenthanhhuy/Documents/GitHub/ThucTapReactJS/my-app/src/components/CellStudent/index.js",["156","157","158","159","160","161","162","163"],"import \"devextreme/dist/css/dx.common.css\";\nimport \"devextreme/dist/css/dx.light.css\";\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\nimport ArrayStore from \"devextreme/data/array_store\";\nimport DataSource from \"devextreme/data/data_source\";\nimport \"./CellStudent.css\";\nimport DataGrid, {\n  Column,\n  Paging,\n  Pager,\n  Editing,\n  Popup,\n  Toolbar,\n  Item,\n  ToolbarItem,\n} from \"devextreme-react/data-grid\";\nimport { TextField, Button } from \"@material-ui/core\";\n\nimport { useQuery } from \"react-query\";\nimport { fetchStudents } from \"../../services/fetchStudents.service\";\nimport { fetchStudentsKey } from \"../../util/queryKeys\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport  useGetData  from \"./hooks/useGetData\";\n\n/////////\ntoast.configure();\n\nconst CellStudent = () => {\n  const { data, isLoading ,refetch} = useGetData();\n  //State\n\n  const [changes, setChanges] = useState([]);\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\n  // Save params\n  const gridRef = useRef(null);\n  const studentDataSource = new DataSource({\n    store: new ArrayStore({\n      key: \"id\",\n      data: data,\n\n      // Other ArrayStore properties go here\n    }),\n    // Other DataSource properties go here\n\n    reshapeOnPush: true,\n  });\n\n  const renderButton = (cell) => {\n    return (\n      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n        <Button\n          variant=\"contained\"\n          onClick={() => {\n            gridRef.current?.instance?.deleteRow(cell.rowIndex);\n          }}\n        >\n          remove\n        </Button>\n      </div>\n    );\n  };\n\n  const onChangesChange = React.useCallback((changes) => {\n    setChanges(changes);\n  }, []);\n\n  const onCellClick = (e) => {\n    if (gridRef.current?.instance.getVisibleColumnIndex(e.columnIndex)) {\n      gridRef.current?.instance?.editCell(e.rowIndex, e.columnIndex);\n      console.log(\"Cell is now visible\");\n    } else {\n      console.log(\"Cell not visible\");\n    }\n  };\n  const editingStart = (e) => {\n    debugger;\n\n    // gridRef.current?.instance?.saveEditData();\n  };\n  const selectionChanged = (data) => {\n    setSelectedRowKeys(data.selectedRowKeys);\n  };\n  return (\n    <div>\n      <div className=\"main__title\">\n        <h1>Manage Data Student</h1>\n      </div>\n\n      <div className=\"main__Add\"></div>\n      <div className=\"main__body\">\n        <DataGrid\n          dataSource={studentDataSource}\n          remoteOperations={true}\n          ref={gridRef}\n          repaintChangesOnly={true}\n          onCellClick={onCellClick}\n          editingStart={editingStart}\n          selectedRowKeys={selectedRowKeys}\n          onSelectionChanged={selectionChanged}\n        >\n          <Editing\n            mode=\"cell\"\n            useIcons={true}\n            changes={changes}\n            onChangesChange={onChangesChange}\n            // editRowKey={editRowKey}\n            // onEditRowKeyChange={onEditRowKeyChange}\n\n            startEditAction\n            selectTextOnEditStart={true}\n          >\n            <TextField label=\"Student\"></TextField>\n          </Editing>\n\n          <Column\n            dataField=\"nameStudent\"\n            dataType=\"string\"\n            showEditorAlways={false}\n          />\n          <Column\n            dataField=\"phoneStudent\"\n            dataType=\"string\"\n            showEditorAlways={false}\n          />\n          <Column\n            dataField=\"dateOfBirth\"\n            dataType=\"date\"\n            format=\"dd/MM/yyyy\"\n            showEditorAlways={false}\n          />\n          <Column\n            dataField=\"createDate\"\n            dataType=\"date\"\n            visible={false}\n            defaultSortOrder=\"asc\"\n          />\n\n          <Column\n            dataField=\"scoreStudent\"\n            dataType=\"number\"\n            showEditorAlways={false}\n          />\n          <Column dataField=\"\" cellRender={renderButton}></Column>\n\n          <Toolbar>\n            <Item location=\"after\">\n              <Button\n                variant=\"contained\"\n                icon=\"refresh\"\n                onClick={() => {\n                  refetch();\n                  toast(\"🦄 You are refetched\", {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                  });\n                }}\n              >\n                refetch\n              </Button>\n            </Item>\n            {/* <Item location=\"after\">\n              <Button\n                variant=\"contained\"\n                icon=\"refresh\"\n                onClick={() => gridRef.current?.instance?.saveEditData()}\n                viable={false}\n              >\n                Save\n              </Button>\n            </Item> */}\n            <Item>\n              <Button\n                variant=\"contained\"\n                onClick={() => gridRef.current?.instance?.addRow()}\n              >\n                add\n              </Button>\n            </Item>\n          </Toolbar>\n          <Paging defaultPageSize={12} />\n          <Pager showPageSizeSelector={true} />\n        </DataGrid>\n      </div>\n\n      {/* ///React Hook Form + Material Setup */}\n    </div>\n  );\n};\n//Create content customize Form\n\nexport default CellStudent;\n","/Users/nguyenthanhhuy/Documents/GitHub/ThucTapReactJS/my-app/src/components/CellStudent/hooks/useGetData.js",["164","165","166"],{"ruleId":"167","severity":1,"message":"168","line":1,"column":8,"nodeType":"169","messageId":"170","endLine":1,"endColumn":12},{"ruleId":"167","severity":1,"message":"171","line":3,"column":46,"nodeType":"169","messageId":"170","endLine":3,"endColumn":57},{"ruleId":"167","severity":1,"message":"172","line":6,"column":8,"nodeType":"169","messageId":"170","endLine":6,"endColumn":19},{"ruleId":"167","severity":1,"message":"173","line":21,"column":19,"nodeType":"169","messageId":"170","endLine":21,"endColumn":29},{"ruleId":"167","severity":1,"message":"174","line":567,"column":5,"nodeType":"169","messageId":"170","endLine":567,"endColumn":12},{"ruleId":"167","severity":1,"message":"175","line":569,"column":26,"nodeType":"169","messageId":"170","endLine":569,"endColumn":44},{"ruleId":"176","severity":1,"message":"177","line":584,"column":6,"nodeType":"178","endLine":584,"endColumn":18,"suggestions":"179"},{"ruleId":"167","severity":1,"message":"180","line":587,"column":9,"nodeType":"169","messageId":"170","endLine":587,"endColumn":24},{"ruleId":"167","severity":1,"message":"181","line":654,"column":9,"nodeType":"169","messageId":"170","endLine":654,"endColumn":29},{"ruleId":"167","severity":1,"message":"171","line":3,"column":46,"nodeType":"169","messageId":"170","endLine":3,"endColumn":57},{"ruleId":"167","severity":1,"message":"182","line":12,"column":3,"nodeType":"169","messageId":"170","endLine":12,"endColumn":8},{"ruleId":"167","severity":1,"message":"183","line":15,"column":3,"nodeType":"169","messageId":"170","endLine":15,"endColumn":14},{"ruleId":"167","severity":1,"message":"173","line":19,"column":19,"nodeType":"169","messageId":"170","endLine":19,"endColumn":29},{"ruleId":"167","severity":1,"message":"184","line":20,"column":8,"nodeType":"169","messageId":"170","endLine":20,"endColumn":23},{"ruleId":"167","severity":1,"message":"185","line":68,"column":22,"nodeType":"169","messageId":"170","endLine":68,"endColumn":35},{"ruleId":"167","severity":1,"message":"186","line":70,"column":10,"nodeType":"169","messageId":"170","endLine":70,"endColumn":19},{"ruleId":"167","severity":1,"message":"187","line":70,"column":21,"nodeType":"169","messageId":"170","endLine":70,"endColumn":33},{"ruleId":"167","severity":1,"message":"188","line":72,"column":10,"nodeType":"169","messageId":"170","endLine":72,"endColumn":14},{"ruleId":"167","severity":1,"message":"189","line":72,"column":16,"nodeType":"169","messageId":"170","endLine":72,"endColumn":23},{"ruleId":"167","severity":1,"message":"190","line":77,"column":5,"nodeType":"169","messageId":"170","endLine":77,"endColumn":13},{"ruleId":"167","severity":1,"message":"191","line":78,"column":5,"nodeType":"169","messageId":"170","endLine":78,"endColumn":17},{"ruleId":"167","severity":1,"message":"174","line":79,"column":5,"nodeType":"169","messageId":"170","endLine":79,"endColumn":12},{"ruleId":"167","severity":1,"message":"192","line":81,"column":18,"nodeType":"169","messageId":"170","endLine":81,"endColumn":24},{"ruleId":"167","severity":1,"message":"175","line":81,"column":26,"nodeType":"169","messageId":"170","endLine":81,"endColumn":44},{"ruleId":"176","severity":1,"message":"177","line":91,"column":6,"nodeType":"178","endLine":91,"endColumn":18,"suggestions":"193"},{"ruleId":"167","severity":1,"message":"194","line":1,"column":9,"nodeType":"169","messageId":"170","endLine":1,"endColumn":12},{"ruleId":"167","severity":1,"message":"195","line":1,"column":13,"nodeType":"169","messageId":"170","endLine":1,"endColumn":16},{"ruleId":"196","replacedBy":"197"},{"ruleId":"198","replacedBy":"199"},{"ruleId":"167","severity":1,"message":"168","line":1,"column":8,"nodeType":"169","messageId":"170","endLine":1,"endColumn":12},{"ruleId":"167","severity":1,"message":"200","line":8,"column":8,"nodeType":"169","messageId":"170","endLine":8,"endColumn":19},{"ruleId":"167","severity":1,"message":"201","line":3,"column":17,"nodeType":"169","messageId":"170","endLine":3,"endColumn":26},{"ruleId":"167","severity":1,"message":"171","line":3,"column":46,"nodeType":"169","messageId":"170","endLine":3,"endColumn":57},{"ruleId":"167","severity":1,"message":"182","line":12,"column":3,"nodeType":"169","messageId":"170","endLine":12,"endColumn":8},{"ruleId":"167","severity":1,"message":"183","line":15,"column":3,"nodeType":"169","messageId":"170","endLine":15,"endColumn":14},{"ruleId":"167","severity":1,"message":"202","line":19,"column":10,"nodeType":"169","messageId":"170","endLine":19,"endColumn":17},{"ruleId":"167","severity":1,"message":"173","line":19,"column":19,"nodeType":"169","messageId":"170","endLine":19,"endColumn":29},{"ruleId":"167","severity":1,"message":"184","line":20,"column":8,"nodeType":"169","messageId":"170","endLine":20,"endColumn":23},{"ruleId":"167","severity":1,"message":"171","line":3,"column":46,"nodeType":"169","messageId":"170","endLine":3,"endColumn":57},{"ruleId":"167","severity":1,"message":"172","line":6,"column":8,"nodeType":"169","messageId":"170","endLine":6,"endColumn":19},{"ruleId":"167","severity":1,"message":"173","line":21,"column":19,"nodeType":"169","messageId":"170","endLine":21,"endColumn":29},{"ruleId":"167","severity":1,"message":"203","line":36,"column":31,"nodeType":"169","messageId":"170","endLine":36,"endColumn":40},{"ruleId":"167","severity":1,"message":"204","line":36,"column":51,"nodeType":"169","messageId":"170","endLine":36,"endColumn":57},{"ruleId":"167","severity":1,"message":"205","line":36,"column":65,"nodeType":"169","messageId":"170","endLine":36,"endColumn":70},{"ruleId":"167","severity":1,"message":"174","line":62,"column":5,"nodeType":"169","messageId":"170","endLine":62,"endColumn":12},{"ruleId":"167","severity":1,"message":"175","line":64,"column":26,"nodeType":"169","messageId":"170","endLine":64,"endColumn":44},{"ruleId":"176","severity":1,"message":"177","line":78,"column":6,"nodeType":"178","endLine":78,"endColumn":18,"suggestions":"206"},{"ruleId":"167","severity":1,"message":"180","line":81,"column":9,"nodeType":"169","messageId":"170","endLine":81,"endColumn":24},{"ruleId":"167","severity":1,"message":"181","line":145,"column":9,"nodeType":"169","messageId":"170","endLine":145,"endColumn":29},{"ruleId":"167","severity":1,"message":"194","line":1,"column":9,"nodeType":"169","messageId":"170","endLine":1,"endColumn":12},{"ruleId":"167","severity":1,"message":"195","line":1,"column":13,"nodeType":"169","messageId":"170","endLine":1,"endColumn":16},{"ruleId":"167","severity":1,"message":"201","line":3,"column":17,"nodeType":"169","messageId":"170","endLine":3,"endColumn":26},{"ruleId":"167","severity":1,"message":"171","line":3,"column":46,"nodeType":"169","messageId":"170","endLine":3,"endColumn":57},{"ruleId":"167","severity":1,"message":"182","line":12,"column":3,"nodeType":"169","messageId":"170","endLine":12,"endColumn":8},{"ruleId":"167","severity":1,"message":"183","line":15,"column":3,"nodeType":"169","messageId":"170","endLine":15,"endColumn":14},{"ruleId":"167","severity":1,"message":"173","line":19,"column":19,"nodeType":"169","messageId":"170","endLine":19,"endColumn":29},{"ruleId":"167","severity":1,"message":"207","line":68,"column":10,"nodeType":"169","messageId":"170","endLine":68,"endColumn":20},{"ruleId":"167","severity":1,"message":"208","line":68,"column":22,"nodeType":"169","messageId":"170","endLine":68,"endColumn":35},{"ruleId":"167","severity":1,"message":"209","line":69,"column":10,"nodeType":"169","messageId":"170","endLine":69,"endColumn":18},{"ruleId":"167","severity":1,"message":"210","line":69,"column":20,"nodeType":"169","messageId":"170","endLine":69,"endColumn":31},{"ruleId":"167","severity":1,"message":"189","line":71,"column":16,"nodeType":"169","messageId":"170","endLine":71,"endColumn":23},{"ruleId":"167","severity":1,"message":"190","line":77,"column":5,"nodeType":"169","messageId":"170","endLine":77,"endColumn":13},{"ruleId":"167","severity":1,"message":"191","line":78,"column":5,"nodeType":"169","messageId":"170","endLine":78,"endColumn":17},{"ruleId":"167","severity":1,"message":"174","line":79,"column":5,"nodeType":"169","messageId":"170","endLine":79,"endColumn":12},{"ruleId":"167","severity":1,"message":"211","line":80,"column":5,"nodeType":"169","messageId":"170","endLine":80,"endColumn":13},{"ruleId":"167","severity":1,"message":"192","line":81,"column":18,"nodeType":"169","messageId":"170","endLine":81,"endColumn":24},{"ruleId":"167","severity":1,"message":"175","line":81,"column":26,"nodeType":"169","messageId":"170","endLine":81,"endColumn":44},{"ruleId":"167","severity":1,"message":"201","line":3,"column":17,"nodeType":"169","messageId":"170","endLine":3,"endColumn":26},{"ruleId":"167","severity":1,"message":"171","line":3,"column":46,"nodeType":"169","messageId":"170","endLine":3,"endColumn":57},{"ruleId":"167","severity":1,"message":"182","line":12,"column":3,"nodeType":"169","messageId":"170","endLine":12,"endColumn":8},{"ruleId":"167","severity":1,"message":"183","line":15,"column":3,"nodeType":"169","messageId":"170","endLine":15,"endColumn":14},{"ruleId":"167","severity":1,"message":"212","line":19,"column":10,"nodeType":"169","messageId":"170","endLine":19,"endColumn":18},{"ruleId":"167","severity":1,"message":"213","line":20,"column":10,"nodeType":"169","messageId":"170","endLine":20,"endColumn":23},{"ruleId":"167","severity":1,"message":"214","line":21,"column":10,"nodeType":"169","messageId":"170","endLine":21,"endColumn":26},{"ruleId":"167","severity":1,"message":"215","line":30,"column":17,"nodeType":"169","messageId":"170","endLine":30,"endColumn":26},{"ruleId":"167","severity":1,"message":"216","line":11,"column":25,"nodeType":"169","messageId":"170","endLine":11,"endColumn":32},{"ruleId":"167","severity":1,"message":"203","line":11,"column":34,"nodeType":"169","messageId":"170","endLine":11,"endColumn":43},{"ruleId":"217","severity":1,"message":"218","line":13,"column":41,"nodeType":"219","messageId":"220","endLine":13,"endColumn":45},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useCallback' is defined but never used.","'CustomStore' is defined but never used.","'Controller' is defined but never used.","'control' is assigned a value but never used.","'isSubmitSuccessful' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setValue'. Either include it or remove the dependency array.","ArrayExpression",["221"],"'randomIdStudent' is assigned a value but never used.","'handleChangeDatetime' is assigned a value but never used.","'Popup' is defined but never used.","'ToolbarItem' is defined but never used.","'cellNameStudent' is defined but never used.","'setCheckPopup' is assigned a value but never used.","'isShowing' is assigned a value but never used.","'setIsShowing' is assigned a value but never used.","'date' is assigned a value but never used.","'setDate' is assigned a value but never used.","'register' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'errors' is assigned a value but never used.",["222"],"'Box' is defined but never used.","'Tab' is defined but never used.","no-native-reassign",["223"],"no-negated-in-lhs",["224"],"'FormStudent' is defined but never used.","'useEffect' is defined but never used.","'useForm' is defined but never used.","'isSuccess' is assigned a value but never used.","'remove' is assigned a value but never used.","'error' is assigned a value but never used.",["225"],"'editRowKey' is assigned a value but never used.","'setEditRowKey' is assigned a value but never used.","'isRemove' is assigned a value but never used.","'setIsRemove' is assigned a value but never used.","'setValue' is assigned a value but never used.","'useQuery' is defined but never used.","'fetchStudents' is defined but never used.","'fetchStudentsKey' is defined but never used.","'isLoading' is assigned a value but never used.","'isError' is assigned a value but never used.","no-dupe-keys","Duplicate key 'data'.","ObjectExpression","unexpected",{"desc":"226","fix":"227"},{"desc":"226","fix":"228"},"no-global-assign","no-unsafe-negation",{"desc":"226","fix":"229"},"Update the dependencies array to be: [checkPopup, setValue]",{"range":"230","text":"231"},{"range":"232","text":"231"},{"range":"233","text":"231"},[11379,11391],"[checkPopup, setValue]",[2162,2174],[2225,2237]]