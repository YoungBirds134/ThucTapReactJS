[{"/Users/nguyenthanhhuy/Desktop/BaiTap/my-app/src/index.js":"1","/Users/nguyenthanhhuy/Desktop/BaiTap/my-app/src/reportWebVitals.js":"2","/Users/nguyenthanhhuy/Desktop/BaiTap/my-app/src/App.js":"3","/Users/nguyenthanhhuy/Desktop/BaiTap/my-app/src/components/PopUpStudent/index.js":"4","/Users/nguyenthanhhuy/Desktop/BaiTap/my-app/src/Page/ManageStudent/index.js":"5","/Users/nguyenthanhhuy/Desktop/BaiTap/my-app/src/components/BatchStudent/index.js":"6","/Users/nguyenthanhhuy/Desktop/BaiTap/my-app/src/components/BatchStudent/CellsRender/CellName.js":"7","/Users/nguyenthanhhuy/Documents/GitHub/ThucTapReactJS/my-app/src/index.js":"8","/Users/nguyenthanhhuy/Documents/GitHub/ThucTapReactJS/my-app/src/App.js":"9","/Users/nguyenthanhhuy/Documents/GitHub/ThucTapReactJS/my-app/src/reportWebVitals.js":"10","/Users/nguyenthanhhuy/Documents/GitHub/ThucTapReactJS/my-app/src/Page/ManageStudent/index.js":"11","/Users/nguyenthanhhuy/Documents/GitHub/ThucTapReactJS/my-app/src/components/BatchStudent/index.js":"12","/Users/nguyenthanhhuy/Documents/GitHub/ThucTapReactJS/my-app/src/components/PopUpStudent/index.js":"13","/Users/nguyenthanhhuy/Documents/GitHub/ThucTapReactJS/my-app/src/components/FormStudent/index.js":"14","/Users/nguyenthanhhuy/Documents/GitHub/ThucTapReactJS/my-app/src/util/queryClient.js":"15","/Users/nguyenthanhhuy/Documents/GitHub/ThucTapReactJS/my-app/src/util/queryKeys.js":"16","/Users/nguyenthanhhuy/Documents/GitHub/ThucTapReactJS/my-app/src/services/fetchStudents.service.js":"17","/Users/nguyenthanhhuy/Documents/GitHub/ThucTapReactJS/my-app/src/components/CellStudent/index.js":"18","/Users/nguyenthanhhuy/Documents/GitHub/ThucTapReactJS/my-app/src/components/CellStudent/hooks/useGetData.js":"19","/Users/nguyenthanhhuy/Documents/GitHub/ThucTapReactJS/my-app/src/components/PopUpStudent/hooks/useGetData.js":"20","/Users/nguyenthanhhuy/Documents/GitHub/ThucTapReactJS/my-app/src/components/PopUpStudent/hooks/useCreateData.js":"21","/Users/nguyenthanhhuy/Documents/GitHub/ThucTapReactJS/my-app/src/components/PopUpStudent/hooks/useDeleteData.js":"22","/Users/nguyenthanhhuy/Documents/GitHub/ThucTapReactJS/my-app/src/components/PopUpStudent/hooks/useUpdateData.js":"23","/Users/nguyenthanhhuy/Documents/GitHub/ThucTapReactJS/my-app/src/components/PopUpStudent/hooks/useGetDataByPaging.js":"24"},{"size":500,"mtime":1637286740090,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":1637286740091,"results":"27","hashOfConfig":"26"},{"size":223,"mtime":1637306447686,"results":"28","hashOfConfig":"26"},{"size":20708,"mtime":1637316019160,"results":"29","hashOfConfig":"26"},{"size":1175,"mtime":1637309504184,"results":"30","hashOfConfig":"26"},{"size":4262,"mtime":1637310696052,"results":"31","hashOfConfig":"26"},{"size":240,"mtime":1637309489041,"results":"32","hashOfConfig":"26"},{"size":500,"mtime":1637286740090,"results":"33","hashOfConfig":"34"},{"size":516,"mtime":1637649667120,"results":"35","hashOfConfig":"34"},{"size":362,"mtime":1637286740091,"results":"36","hashOfConfig":"34"},{"size":1303,"mtime":1637906965800,"results":"37","hashOfConfig":"34"},{"size":6741,"mtime":1637897567945,"results":"38","hashOfConfig":"34"},{"size":12066,"mtime":1637906334149,"results":"39","hashOfConfig":"34"},{"size":5450,"mtime":1637570362229,"results":"40","hashOfConfig":"34"},{"size":572,"mtime":1637649712591,"results":"41","hashOfConfig":"34"},{"size":222,"mtime":1637736582002,"results":"42","hashOfConfig":"34"},{"size":159,"mtime":1637653928238,"results":"43","hashOfConfig":"34"},{"size":7415,"mtime":1638148879810,"results":"44","hashOfConfig":"34"},{"size":503,"mtime":1637660699163,"results":"45","hashOfConfig":"34"},{"size":730,"mtime":1637833657201,"results":"46","hashOfConfig":"34"},{"size":1039,"mtime":1638147473628,"results":"47","hashOfConfig":"34"},{"size":1024,"mtime":1637727227532,"results":"48","hashOfConfig":"34"},{"size":1051,"mtime":1637728914179,"results":"49","hashOfConfig":"34"},{"size":1037,"mtime":1637737276604,"results":"50","hashOfConfig":"34"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1mdx1r0",{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"2yglhg",{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"70"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"70"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"70"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"70"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"70"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"70"},"/Users/nguyenthanhhuy/Desktop/BaiTap/my-app/src/index.js",[],"/Users/nguyenthanhhuy/Desktop/BaiTap/my-app/src/reportWebVitals.js",[],"/Users/nguyenthanhhuy/Desktop/BaiTap/my-app/src/App.js",["112"],"import logo from './logo.svg';\nimport './App.css';\nimport ManageStudent from \"./Page/ManageStudent/index\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <ManageStudent/>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/nguyenthanhhuy/Desktop/BaiTap/my-app/src/components/PopUpStudent/index.js",["113","114","115","116","117","118","119","120"],"/Users/nguyenthanhhuy/Desktop/BaiTap/my-app/src/Page/ManageStudent/index.js",[],"/Users/nguyenthanhhuy/Desktop/BaiTap/my-app/src/components/BatchStudent/index.js",["121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136"],"import \"devextreme/dist/css/dx.common.css\";\nimport \"devextreme/dist/css/dx.light.css\";\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\nimport ArrayStore from \"devextreme/data/array_store\";\nimport DataSource from \"devextreme/data/data_source\";\nimport \"./BatchStudent.css\";\nimport DataGrid, {\n  Column,\n  Paging,\n  Pager,\n  Editing,\n  Popup,\n  Toolbar,\n  Item,\n  ToolbarItem,\n} from \"devextreme-react/data-grid\";\nimport { TextField, Button } from \"@material-ui/core\";\n\nimport { useForm, Controller } from \"react-hook-form\";\nimport cellNameStudent from './CellsRender/CellName'\n// Toast\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nconst data = [\n  {\n    dateOfBirth: \"2000-01-02\",\n    nameStudent: \"Nguyễn Thanh Huy\",\n    phoneStudent: \"092365124\",\n\n    scoreStudent: 10,\n    id: \"1\",\n  },\n  {\n    dateOfBirth: \"2000-10-09\",\n    nameStudent: \"Nguyễn Thị Đào\",\n    phoneStudent: \"0902554175\",\n\n    scoreStudent: 1,\n    id: \"12\",\n  },\n  {\n    dateOfBirth: \"1960-12-29\",\n    nameStudent: \"Trần Văn Thời\",\n    phoneStudent: \"09025541541\",\n\n    scoreStudent: 10,\n    id: \"112\",\n  },\n];\n\nconst studentDataSource = new DataSource({\n  store: new ArrayStore({\n    key: \"id\",\n    data: data,\n\n    // Other ArrayStore properties go here\n  }),\n  // Other DataSource properties go here\n\n  reshapeOnPush: true,\n});\nconsole.log(\"Student Data Source: \" + studentDataSource);\n\n/////////\ntoast.configure();\nconst BatchStudent = () => {\n  //State\n  const [checkPopup, setCheckPopup] = useState(null);\n\n  const [isShowing, setIsShowing] = useState(false);\n\n  const [date, setDate] = React.useState(new Date());\n  // Save params\n  const gridRef = useRef(null);\n\n  const {\n    register,\n    handleSubmit,\n    control,\n    setValue,\n    formState: { errors, isSubmitSuccessful },\n  } = useForm({ defaultValues: { something: \"anything\" } });\n\n  useEffect(() => {\n    if (checkPopup) {\n      setValue(\"nameStudent\", checkPopup.nameStudent);\n      setValue(\"phoneStudent\", checkPopup.phoneStudent);\n      setValue(\"dateOfBirth\", checkPopup.dateOfBirth);\n      setValue(\"scoreStudent\", checkPopup.scoreStudent);\n    }\n  }, [checkPopup]);\n  const customizeColumns=(columns) => {\n      console.log(columns);\n     \n       \n  }\n  return (\n    <div>\n      <div className=\"main__title\">\n        <h1>Manage Data Student</h1>\n      </div>\n\n      <div className=\"main__Add\"></div>\n      <div className=\"main__body\">\n        <DataGrid\n          dataSource={studentDataSource}\n          remoteOperations={true}\n          ref={gridRef}\n          customizeColumns={customizeColumns}\n        >\n          <Editing mode=\"batch\" useIcons={true}\n          \n          >\n            <TextField label=\"Student\"></TextField>\n          </Editing>\n          {/* Create Column include Add Remove Update */}\n          {/* <Column cellRender={renderButton} dataField=\"\" /> */}\n\n          <Column dataField=\"nameStudent\" dataType=\"string\"  />\n          <Column dataField=\"phoneStudent\" dataType=\"string\" />\n          <Column dataField=\"dateOfBirth\" dataType=\"date\" format=\"dd/MM/yyyy\" />\n          <Column\n            dataField=\"createDate\"\n            dataType=\"date\"\n            visible={false}\n            defaultSortOrder=\"asc\"\n          />\n\n          <Column dataField=\"scoreStudent\" dataType=\"number\" />\n          <Toolbar>\n            <Item location=\"after\">\n              <Button\n                variant=\"contained\"\n                icon=\"refresh\"\n                // onClick={() => {window.location.reload(false)}}\n                // onClick={() => studentDataSource.reload()}\n                onClick={() => gridRef.current?.instance?.refresh()}\n              >\n                Refresh\n              </Button>\n            </Item>\n            <Item>\n              <Button\n                variant=\"contained\"\n                onClick={() => gridRef.current?.instance?.addRow()}\n              >\n                add\n              </Button>\n            </Item>\n          </Toolbar>\n          <Paging defaultPageSize={12} />\n          <Pager showPageSizeSelector={true} />\n        </DataGrid>\n      </div>\n\n      {/* ///React Hook Form + Material Setup */}\n    </div>\n  );\n};\n//Create content customize Form\n\nexport default BatchStudent;\n","/Users/nguyenthanhhuy/Desktop/BaiTap/my-app/src/components/BatchStudent/CellsRender/CellName.js",["137","138"],"import {Box,Tab,TextField} from '@mui/material';\n\nimport * as React from 'react';\n\n\n\nfunction CellName(cellData) {\n   \n  \n    return (\n      <>\n<TextField>{cellData.data.nameStudent}</TextField>\n      </>\n    );\n}\n\nexport default CellName;\n","/Users/nguyenthanhhuy/Documents/GitHub/ThucTapReactJS/my-app/src/index.js",[],["139","140"],"/Users/nguyenthanhhuy/Documents/GitHub/ThucTapReactJS/my-app/src/App.js",["141"],"import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport ManageStudent from \"./Page/ManageStudent/index\";\nimport { QueryClientProvider } from \"react-query\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport { queryClient } from \"./util/queryClient\";\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <div className=\"App\">\n        <ManageStudent />\n      </div>\n      <ReactQueryDevtools initialIsOpen={false} />\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","/Users/nguyenthanhhuy/Documents/GitHub/ThucTapReactJS/my-app/src/reportWebVitals.js",[],"/Users/nguyenthanhhuy/Documents/GitHub/ThucTapReactJS/my-app/src/Page/ManageStudent/index.js",["142"],"import {Box,Tab} from '@mui/material';\nimport TabContext from '@mui/lab/TabContext';\nimport TabList from '@mui/lab/TabList';\nimport TabPanel from '@mui/lab/TabPanel';\nimport * as React from 'react';\nimport PopupStudent from \"./../../components/PopUpStudent/index\";\nimport BatchStudent from \"./../../components/BatchStudent/index\";\nimport FormStudent from \"./../../components/FormStudent/index\";\nimport CellStudent from \"./../../components/CellStudent/index\";\n\nfunction ManageStudent() {\n    const [value, setValue] = React.useState('3');\n\n    const handleChange = (event, newValue) => {\n      setValue(newValue);\n    };\n  \n    return (\n      <Box sx={{ width: '100%', typography: 'body1' }}>\n        <TabContext value={value}>\n          <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n            <TabList onChange={handleChange} aria-label=\"lab API tabs example\">\n              <Tab label=\"Popup UI\" value=\"1\" />\n              <Tab label=\"Batch UI\" value=\"2\" />\n              <Tab label=\"Cell UI\" value=\"3\" />\n            </TabList>\n          </Box>\n          <TabPanel value=\"1\"><PopupStudent/></TabPanel>\n          <TabPanel value=\"2\"><BatchStudent/></TabPanel>\n          <TabPanel value=\"3\"><CellStudent/></TabPanel>\n        </TabContext>\n      </Box>\n    );\n}\n\nexport default ManageStudent;\n","/Users/nguyenthanhhuy/Documents/GitHub/ThucTapReactJS/my-app/src/components/BatchStudent/index.js",["143","144","145","146","147","148","149","150","151","152","153"],"import \"devextreme/dist/css/dx.common.css\";\nimport \"devextreme/dist/css/dx.light.css\";\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\nimport ArrayStore from \"devextreme/data/array_store\";\nimport DataSource from \"devextreme/data/data_source\";\nimport { LoadPanel } from \"devextreme-react/load-panel\";\n\nimport \"./BatchStudent.css\";\nimport DataGrid, {\n  Column,\n  Paging,\n  Pager,\n  Editing,\n  Popup,\n  Toolbar,\n  Item,\n  RequiredRule,\n} from \"devextreme-react/data-grid\";\nimport { TextField, Button } from \"@material-ui/core\";\n\nimport { useForm, Controller } from \"react-hook-form\";\n\n// Toast\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport useGetData from \"./../PopUpStudent/hooks/useGetData\";\nimport useDeleteData from \"./../PopUpStudent/hooks/useDeleteData\";\nimport useCreateData from \"./../PopUpStudent/hooks/useCreateData\";\nimport useUpdateData from \"./../PopUpStudent/hooks/useUpdateData\";\nconst allowedPageSizes = [5, 10, \"all\"];\n\n/////////\ntoast.configure();\nconst BatchStudent = () => {\n  const {\n    refetchStudent,\n\n    dataStudent,\n    isErrorStudent,\n    isLoadingStudent,\n  } = useGetData();\n  const studentDataSource = new DataSource({\n    store: new ArrayStore({\n      key: \"id\",\n      data: dataStudent,\n\n      // Other ArrayStore properties go here\n    }),\n    // Other DataSource properties go here\n\n    reshapeOnPush: true,\n  });\n  //State\n  const [isLoadingPanel, setIsLoadingPanel] = useState(false);\n\n  const [changes, setChanges] = useState([]);\n  const [editRowKey, setEditRowKey] = useState(null);\n  const createMutation = useCreateData();\n  const updateMutation = useUpdateData();\n  const deleteMutation = useDeleteData();\n  // Save params\n  const gridRef = useRef(null);\n\n  const renderButton = (cell) => {\n    return (\n      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n        <Button\n          variant=\"contained\"\n          onClick={() => {\n            gridRef.current?.instance?.deleteRow(cell.rowIndex);\n          }}\n        >\n          remove\n        </Button>\n        <Button\n          variant=\"contained\"\n          // disabled={isAddButtonVisible}\n          onClick={() => {\n            gridRef.current?.instance?.undeleteRow(cell.rowIndex);\n          }}\n        >\n          unremove\n        </Button>\n      </div>\n    );\n  };\n\n  const onChangesChange = React.useCallback((changes) => {\n    console.log(\"change: \" + changes);\n    setChanges(changes);\n  }, []);\n  const onCellClick = (e) => {\n    gridRef.current?.instance?.editCell(e.rowIndex, e.columnIndex);\n  };\n\n  // Note usually that Create Field default when add row\n  const onInitRow = (e) => {\n    e.data.createDate = new Date();\n    // e.data.id = Math.ceil(Math.random() * (10000 - 100) + 100);\n  };\n  const onEditRowKeyChange = React.useCallback((editRowKey) => {\n    console.log(editRowKey);\n    setEditRowKey(editRowKey);\n  }, []);\n  const onSaving = React.useCallback(\n    (e) => {\n      // e.cancel = true;\n      debugger;\n\n      const data = e.changes;\n      createMutation.mutate(data);\n\n      // for (let i = 0; i < data.length; i++) {\n      //   if (data[i].type === \"insert\") {\n      //     createMutation.mutate(data[i].data);\n\n      //     console.log(\"INSERT\");\n      //   } else if (data[i].type === \"update\") {\n      //     updateMutation.mutate(data[i].data);\n\n      //     console.log(\"UPDATE\");\n      //   } else {\n      //     deleteMutation.mutate(data[i].key.id);\n      //     console.log(\"REMOVE\");\n      //   }\n      // }\n    },\n    []\n  );\n\n  return isLoadingStudent ? (\n    <div>Loading...</div>\n  ) : isErrorStudent ? (\n    <div>An error while fetching posts</div>\n  ) : (\n    <div>\n      <div className=\"main__title\">\n        <h1>Manage Data Student</h1>\n      </div>\n\n      <div className=\"main__Add\"></div>\n      <div className=\"main__body\">\n        <DataGrid\n          // keyExpr=\"id\"\n          showBorders\n          dataSource={dataStudent}\n          remoteOperations={true}\n          ref={gridRef}\n          repaintChangesOnly={true}\n          onCellClick={onCellClick}\n          onInitNewRow={onInitRow}\n          onSaving={onSaving}\n          loadPanel\n        >\n          <LoadPanel\n            shadingColor=\"rgba(0,0,0,0.4)\"\n            visible={isLoadingPanel}\n            showIndicator={true}\n            shading={true}\n            showPane={true}\n          />\n          <Paging defaultPageSize={5} />\n          <Pager\n            visible={true}\n            allowedPageSizes={allowedPageSizes}\n            displayMode=\"compact\"\n          />\n          <Editing\n            mode=\"batch\"\n            useIcons={true}\n            changes={changes}\n            onChangesChange={onChangesChange}\n            editRowKey={editRowKey}\n            onEditRowKeyChange={onEditRowKeyChange}\n          >\n            <TextField label=\"Student\"></TextField>\n          </Editing>\n\n          <Column dataField=\"nameStudent\" dataType=\"string\">\n            {\" \"}\n            <RequiredRule />\n          </Column>\n          <Column dataField=\"phoneStudent\" dataType=\"string\">\n            {\" \"}\n            <RequiredRule />\n          </Column>\n          <Column dataField=\"dateOfBirth\" dataType=\"date\" format=\"dd/MM/yyyy\">\n            {\" \"}\n            <RequiredRule />\n          </Column>\n          <Column\n            dataField=\"createDate\"\n            dataType=\"date\"\n            visible={false}\n            defaultSortOrder=\"asc\"\n            // value={date}\n          />\n\n          <Column dataField=\"scoreStudent\" dataType=\"number\">\n            {\" \"}\n            <RequiredRule />\n          </Column>\n          <Column dataField=\"\" cellRender={renderButton}></Column>\n\n          <Toolbar>\n            <Item location=\"after\">\n              <Button\n                variant=\"contained\"\n                icon=\"refresh\"\n                onClick={() => gridRef.current?.instance?.cancelEditData()}\n              >\n                Discard\n              </Button>\n            </Item>\n            <Item location=\"after\">\n              <Button\n                variant=\"contained\"\n                icon=\"refresh\"\n                onClick={() => {\n                  gridRef.current?.instance?.saveEditData();\n                }}\n                viable={false}\n              >\n                Save\n              </Button>\n            </Item>\n            <Item>\n              <Button\n                variant=\"contained\"\n                onClick={() => gridRef.current?.instance?.addRow()}\n              >\n                add\n              </Button>\n            </Item>\n          </Toolbar>\n        </DataGrid>\n      </div>\n\n      {/* ///React Hook Form + Material Setup */}\n    </div>\n  );\n};\n//Create content customize Form\n\nexport default BatchStudent;\n","/Users/nguyenthanhhuy/Documents/GitHub/ThucTapReactJS/my-app/src/components/PopUpStudent/index.js",["154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169"],"import \"devextreme/dist/css/dx.common.css\";\nimport \"devextreme/dist/css/dx.light.css\";\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\nimport ArrayStore from \"devextreme/data/array_store\";\nimport DataSource from \"devextreme/data/data_source\";\nimport { LoadPanel } from \"devextreme-react/load-panel\";\nimport \"./PopUpStudent.css\";\n\nimport moment from \"moment\";\nimport DataGrid, {\n  Column,\n  Paging,\n  Pager,\n  Editing,\n  Popup,\n  Toolbar,\n  Item,\n  Scrolling,\n  ToolbarItem,\n} from \"devextreme-react/data-grid\";\nimport { TextField, Button } from \"@material-ui/core\";\n\nimport { useForm, Controller } from \"react-hook-form\";\n\n// Toast\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport useGetData from \"./hooks/useGetData\";\nimport useGetDataByPaing from \"./hooks/useGetDataByPaging\";\nimport useDeleteData from \"./hooks/useDeleteData\";\nimport useCreateData from \"./hooks/useCreateData\";\nimport useUpdateData from \"./hooks/useUpdateData\";\n\n///\n\n/////////\ntoast.configure();\nconst PopUpStudent = () => {\n  ///Use Query\n  const {\n    refetchStudent,\n\n    dataStudent,\n    isErrorStudent,\n    isLoadingStudent,\n  } = useGetData();\n\n  setTimeout(dataStudent, 5000000);\n  //State\n  const allowedPageSizes = [5, 10, \"all\"];\n  const [checkPopup, setCheckPopup] = useState(null);\n  const [page, setPage] = useState({ _pageIndex: 1, _pageSize: 5 });\n  const [isLoadingPanel, setIsLoadingPanel] = useState(false);\n  const [isShowing, setIsShowing] = useState(false);\n  const [TiTlePopup, setTiTlePopup] = useState(\"\");\n\n  // Save params\n  const gridRef = useRef(null);\n\n  const studentDataSource = new DataSource({\n    store: new ArrayStore({\n      key: \"id\",\n      data: dataStudent,\n\n      // Other ArrayStore properties go here\n    }),\n    // Other DataSource properties go here\n\n    reshapeOnPush: true,\n  });\n  const {\n    register,\n    handleSubmit,\n    control,\n    setValue,\n    formState: { errors, isSubmitSuccessful },\n  } = useForm({ defaultValues: { something: \"anything\" } });\n\n  useEffect(() => {\n    if (checkPopup) {\n      setValue(\"nameStudent\", checkPopup.nameStudent);\n      setValue(\"phoneStudent\", checkPopup.phoneStudent);\n      setValue(\"dateOfBirth\", checkPopup.dateOfBirth);\n      setValue(\"scoreStudent\", checkPopup.scoreStudent);\n    }\n  }, [checkPopup]);\n\n  const createMutation = useCreateData();\n  const updateMutation = useUpdateData();\n  const deleteMutation = useDeleteData();\n  // const {\n  //   dataStudentByPaging,\n  //   isLoadingStudentByPaging,\n  //   refetchStudentByPaging,\n  //   removeStudentByPaging,\n\n  //   errorStudentByPaging,\n  // } = useGetDataByPaging(page);\n\n  const { isLoading, isError, error, isSuccess } = createMutation;\n\n  const onSubmitAdjustStudent = async (student, e) => {\n    if (checkPopup !== null) {\n      let convertDate = moment(student.dateOfBirth).format(\"YYYY-MM-DD\");\n      let newStudent = {\n        id: checkPopup.id,\n        nameStudent: student.nameStudent,\n        phoneStudent: student.phoneStudent,\n        dateOfBirth: convertDate,\n        scoreStudent: student.scoreStudent,\n      };\n      updateMutation.mutate(newStudent);\n      studentDataSource\n        .store()\n        .push([{ type: \"update\", data: newStudent, key: checkPopup.id }]);\n    } else {\n      const newStudent = [{\n        nameStudent: student.nameStudent,\n        scoreStudent: student.scoreStudent,\n        phoneStudent: student.phoneStudent,\n        dateOfBirth: student.dateOfBirth,\n\n        // id: randomIdStudent,\n      }];\n      createMutation.mutate(newStudent);\n      studentDataSource.store().push([{ type: \"insert\", data: newStudent }]);\n    }\n    e.target.reset();\n    setCheckPopup(null);\n    setIsShowing(false);\n    setIsLoadingPanel(true);\n  };\n\n  const onHidePopup = (e) => {\n    setIsShowing(false);\n    setCheckPopup(null);\n  };\n  const onShown = () => {\n    setIsShowing(true);\n  };\n  const onShowing = () => {\n    if (checkPopup !== null) {\n      setTiTlePopup(\"Update Student\");\n    } else {\n      setTiTlePopup(\"Add Student\");\n    }\n  };\n\n  const renderContent = () => {\n    return (\n      <>\n        <form onSubmit={handleSubmit(onSubmitAdjustStudent)}>\n          <div style={{ marginBottom: \"10px\" }}>\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              label=\"Name Student\"\n              variant=\"outlined\"\n              {...register(\"nameStudent\", {\n                maxLength: 100,\n                minLength: 3,\n\n                required: true,\n              })}\n            />\n            {errors.nameStudent?.type === \"required\" && (\n              <p style={{ color: \"red\" }}>This field is required</p>\n            )}{\" \"}\n            {errors.nameStudent?.type === \"minLength\" && (\n              <p style={{ color: \"red\" }}>You are input name invalid</p>\n            )}{\" \"}\n          </div>\n\n          <div style={{ marginBottom: \"10px\" }}>\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              label=\"Phone Student\"\n              variant=\"outlined\"\n              {...register(\"phoneStudent\", {\n                required: true,\n                minLength: 6,\n                maxLength: 12,\n              })}\n            />\n\n            {errors.phoneStudent?.type === \"required\" && (\n              <p style={{ color: \"red\" }}>This field is required</p>\n            )}\n            {errors.phoneStudent?.type === \"maxLength\" && (\n              <p style={{ color: \"red\" }}>Phone Number 10 char</p>\n            )}\n            {errors.phoneStudent?.type === \"minLength\" && (\n              <p style={{ color: \"red\" }}>Phone Number 10 char</p>\n            )}\n          </div>\n\n          <div style={{ marginBottom: \"10px\" }}>\n            <TextField\n              type=\"date\"\n              fullWidth\n              id=\"outlined-basic\"\n              variant=\"outlined\"\n              {...register(\"dateOfBirth\", { required: true })}\n            />\n\n            {/* <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DesktopDatePicker\n                name=\"dateOfBirth\"\n                label=\"Date desktop\"\n                inputFormat=\"dd/MM/yyyy\"\n                value={date}\n                onChange={handleChangeDatetime}\n                renderInput={(params) => (\n                  <TextField {...register(\"dateOfBirth\")} {...params} />\n                )}\n              />\n            </LocalizationProvider> */}\n            {errors.dateOfBirth?.type === \"required\" && (\n              <p style={{ color: \"red\" }}>This field is required</p>\n            )}\n          </div>\n\n          <div style={{ marginBottom: \"10px\" }}>\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              label=\"Score Student\"\n              variant=\"outlined\"\n              {...register(\"scoreStudent\", {\n                required: true,\n                minLength: 1,\n                maxLength: 2,\n              })}\n            />\n            {errors.phoneStudent?.type === \"maxLength\" && (\n              <p style={{ color: \"red\" }}>Score between 0 and 10</p>\n            )}\n            {errors.scoreStudent?.type === \"required\" && (\n              <p style={{ color: \"red\" }}>This field is required</p>\n            )}\n          </div>\n\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              marginTop: \"100px\",\n            }}\n          >\n            <Button type=\"submit\" variant=\"contained\">\n              Save\n            </Button>\n            <Button type=\"reset\" onClick={onHidePopup} variant=\"contained\">\n              Cancel\n            </Button>\n          </div>\n        </form>\n      </>\n    );\n  };\n  // Process Button: Edit and Remove\n\n  // Render button and add Row\n\n  const onRowRemoving = (e) => {\n    setIsLoadingPanel(true);\n    console.log(\"Key: \" + e.data);\n    let data = e.data;\n    // deleteMutation.mutate(data.id);\n    setTimeout(deleteMutation.mutate(data.id), 50000);\n  };\n\n  const onSaving = React.useCallback((e) => {\n    setIsLoadingPanel(true);\n  }, []);\n  const onInitRow = (e) => {\n    e.data.createDate = new Date();\n    // e.data.id = Math.ceil(Math.random() * (10000 - 100) + 100);\n  };\n  const deleteLoading = () => {\n    setIsLoadingPanel(true);\n  };\n  const renderButton = (cell) => {\n    ///How to Debugger: Put Break point and add debugger\n\n    return (\n      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n        <Button\n          variant=\"contained\"\n          onClick={() => {\n            gridRef.current?.instance?.editRow(cell.rowIndex);\n            setCheckPopup(cell.data);\n          }}\n        >\n          edit\n        </Button>\n        <Button\n          variant=\"contained\"\n          onClick={() => {\n            gridRef.current?.instance?.deleteRow(cell.rowIndex);\n            deleteLoading();\n          }}\n        >\n          remove\n        </Button>\n      </div>\n    );\n  };\n\n  const renderTitle = () => {\n    return <p>{TiTlePopup}</p>;\n  };\nconsole.log(\"Get Data Loading: \"+isLoadingStudent)\n\nconsole.log(\"Create Loading: \"+createMutation.isLoading)\nconsole.log(\"Delete Loading: \"+deleteMutation.isLoading)\n\n  return (\n    <>\n      {/* {isLoadingStudent ? (\n        <div>Loading...</div>\n      ) : isErrorStudent ? (\n        <div>An error while fetching posts</div>\n      ) : ( */}\n      <div>\n        <div className=\"main__title\">\n          <h1>Manage Data Student</h1>\n        </div>\n\n        <div className=\"main__Add\"></div>\n        <div className=\"main__body\">\n          <DataGrid\n            id=\"dataGrid\"\n            dataSource={dataStudent || []}\n            remoteOperations={true}\n            ref={gridRef}\n            onRowRemoving={onRowRemoving}\n            // onSaving={onSaving}\n            onInitNewRow={onInitRow}\n          >\n            <LoadPanel\n            id=\"dataGrid\"\n              position=\"right\"\n              shadingColor=\"rgba(0,0,0,1)\"\n              visible={isLoadingStudent||createMutation.isLoading||deleteMutation.isLoading}\n              showIndicator={true}\n              shading={true}\n              showPane={true}\n             \n            />\n            <Scrolling rowRenderingMode=\"virtual\"></Scrolling>\n            <Paging defaultPageSize={5} />\n            <Pager\n              visible={true}\n              allowedPageSizes={allowedPageSizes}\n              displayMode=\"compact\"\n            />\n            <Editing mode=\"popup\" useIcons={true}>\n              <Popup\n                showTitle={true}\n                width={700}\n                height={725}\n                visible={isShowing}\n                titleRender={renderTitle}\n                onShown={onShown}\n                onShowing={onShowing}\n                // Customize Popup\n                contentRender={renderContent}\n              >\n                <ToolbarItem />\n              </Popup>\n              <TextField label=\"Student\"></TextField>\n            </Editing>\n            {/* Create Column include Add Remove Update */}\n            <Column cellRender={renderButton} dataField=\"\" />\n            <Column dataField=\"nameStudent\" dataType=\"string\" />\n            <Column dataField=\"phoneStudent\" dataType=\"string\" />\n            <Column\n              dataField=\"dateOfBirth\"\n              dataType=\"date\"\n              format=\"dd/MM/yyyy\"\n            />\n            <Column\n              dataField=\"createDate\"\n              dataType=\"date\"\n              visible={false}\n              defaultSortOrder=\"asc\"\n            />\n            <Column dataField=\"scoreStudent\" dataType=\"number\" />\n            <Toolbar>\n              <Item>\n                <Button\n                  variant=\"contained\"\n                  onClick={() => gridRef.current?.instance?.addRow()}\n                >\n                  add\n                </Button>\n              </Item>\n            </Toolbar>\n          </DataGrid>\n        </div>\n\n        {/* ///React Hook Form + Material Setup */}\n      </div>\n      {/* )} */}\n    </>\n  );\n};\n//Create content customize Form\n\nexport default PopUpStudent;\n","/Users/nguyenthanhhuy/Documents/GitHub/ThucTapReactJS/my-app/src/components/FormStudent/index.js",["170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185"],"import \"devextreme/dist/css/dx.common.css\";\nimport \"devextreme/dist/css/dx.light.css\";\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\nimport ArrayStore from \"devextreme/data/array_store\";\nimport DataSource from \"devextreme/data/data_source\";\nimport \"./FormStudent.css\";\nimport DataGrid, {\n  Column,\n  Paging,\n  Pager,\n  Editing,\n  Popup,\n  Toolbar,\n  Item,\n  ToolbarItem,\n} from \"devextreme-react/data-grid\";\nimport { TextField, Button } from \"@material-ui/core\";\n\nimport { useForm, Controller } from \"react-hook-form\";\n\n// Toast\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nconst data = [\n  {\n    dateOfBirth: \"2000-01-02\",\n    nameStudent: \"Nguyễn Thanh Huy\",\n    phoneStudent: \"092365124\",\n\n    scoreStudent: 10,\n    id: \"1\",\n  },\n  {\n    dateOfBirth: \"2000-10-09\",\n    nameStudent: \"Nguyễn Thị Đào\",\n    phoneStudent: \"0902554175\",\n\n    scoreStudent: 1,\n    id: \"12\",\n  },\n  {\n    dateOfBirth: \"1960-12-29\",\n    nameStudent: \"Trần Văn Thời\",\n    phoneStudent: \"09025541541\",\n\n    scoreStudent: 10,\n    id: \"112\",\n  },\n];\n\nconst studentDataSource = new DataSource({\n  store: new ArrayStore({\n    key: \"id\",\n    data: data,\n\n    // Other ArrayStore properties go here\n  }),\n  // Other DataSource properties go here\n\n  reshapeOnPush: true,\n});\n\n/////////\ntoast.configure();\nconst FormStudent = () => {\n  //State\n  const [changes, setChanges] = useState([]);\n  const [editRowKey, setEditRowKey] = useState(null);\n  const [isRemove, setIsRemove] = useState(true);\n \n  const [date, setDate] = React.useState(new Date());\n  // Save params\n  const gridRef = useRef(null);\n\n  \n  const {\n    register,\n    handleSubmit,\n    control,\n    setValue,\n    formState: { errors, isSubmitSuccessful },\n  } = useForm({ defaultValues: { something: \"anything\" } });\n\n  const customizeColumns = (columns) => {};\n  const renderButton = (cell) => {\n    return (\n      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n        {/* <Button\n          variant=\"contained\"\n          onClick={() => {\n            gridRef.current?.instance?.editCell(cell.rowIndex,cell.columnIndex);\n          }}\n        >\n          edit\n        </Button> */}\n        <Button\n        \n          variant=\"contained\"\n          onClick={() => {\n            gridRef.current?.instance?.deleteRow(cell.rowIndex);\n         \n          }}\n        >\n          remove\n        </Button>\n        <Button\n          variant=\"contained\"\n          // disabled={isAddButtonVisible}\n          onClick={() => {\n            gridRef.current?.instance?.undeleteRow(cell.rowIndex);\n          }}\n        >\n          unremove\n        </Button>\n      </div>\n    );\n  };\n\n  const onChangesChange = React.useCallback((changes) => {\n    setChanges(changes);\n  }, []);\n  \n  \n  \n  return (\n    <div>\n      <div className=\"main__title\">\n        <h1>Manage Data Student</h1>\n      </div>\n\n      <div className=\"main__Add\"></div>\n      <div className=\"main__body\">\n        <DataGrid\n          dataSource={studentDataSource}\n          remoteOperations={true}\n          ref={gridRef}\n          customizeColumns={customizeColumns}\n          repaintChangesOnly={true}\n          newRowPosition\n          \n        >\n          <Editing\n            mode=\"form\"\n            useIcons={true}\n            changes={changes}\n            onChangesChange={onChangesChange}\n            // editRowKey={editRowKey}\n            // onEditRowKeyChange={onEditRowKeyChange}\n            startEditAction\n            selectTextOnEditStart={true}\n          >\n            <TextField label=\"Student\"></TextField>\n          </Editing>\n          {/* Create Column include Add Remove Update */}\n          {/* <Column cellRender={renderButton} dataField=\"\" /> */}\n          {/* <Column dataField=\"id\" /> */}\n          <Column dataField=\"nameStudent\" dataType=\"string\" />\n          <Column dataField=\"phoneStudent\" dataType=\"string\" />\n          <Column dataField=\"dateOfBirth\" dataType=\"date\" format=\"dd/MM/yyyy\" />\n          <Column\n            dataField=\"createDate\"\n            dataType=\"date\"\n            visible={true}\n            defaultSortOrder=\"asc\"\n            value={date}\n          />\n\n          <Column dataField=\"scoreStudent\" dataType=\"number\" />\n          <Column dataField=\"\" cellRender={renderButton}></Column>\n\n          <Toolbar>\n            <Item location=\"after\">\n              <Button\n                variant=\"contained\"\n                icon=\"refresh\"\n                onClick={() => gridRef.current?.instance?.cancelEditData()}\n              >\n                Discard\n              </Button>\n            </Item>\n            <Item location=\"after\">\n              <Button\n                variant=\"contained\"\n                icon=\"refresh\"\n                onClick={() => gridRef.current?.instance?.saveEditData()}\n                viable={false}\n              >\n                Save\n              </Button>\n            </Item>\n            <Item>\n              <Button\n                variant=\"contained\"\n                onClick={() => gridRef.current?.instance?.addRow()}\n                \n              >\n                add\n              </Button>\n            </Item>\n          </Toolbar>\n          <Paging defaultPageSize={12} />\n          <Pager showPageSizeSelector={true} />\n        </DataGrid>\n      </div>\n\n      {/* ///React Hook Form + Material Setup */}\n    </div>\n  );\n};\n//Create content customize Form\n\nexport default FormStudent;\n","/Users/nguyenthanhhuy/Documents/GitHub/ThucTapReactJS/my-app/src/util/queryClient.js",[],"/Users/nguyenthanhhuy/Documents/GitHub/ThucTapReactJS/my-app/src/util/queryKeys.js",[],"/Users/nguyenthanhhuy/Documents/GitHub/ThucTapReactJS/my-app/src/services/fetchStudents.service.js",[],["186","187"],"/Users/nguyenthanhhuy/Documents/GitHub/ThucTapReactJS/my-app/src/components/CellStudent/index.js",["188","189","190","191","192","193","194","195"],"/Users/nguyenthanhhuy/Documents/GitHub/ThucTapReactJS/my-app/src/components/CellStudent/hooks/useGetData.js",["196","197","198"],"////Applications\nimport axios from \"axios\";\nimport { useQuery } from \"react-query\";\n\nimport { fetchStudentsKey } from \"../../../util/queryKeys\";\nconst fetchStudents = async () => {\n  const res = await axios.get(`http://127.0.0.1:8000/students`);\n  return res?.data;\n};\nconst useGetData = () => {\n    const  { isLoading, isError, isSuccess, refetch, remove, data, error } =\n    useQuery(fetchStudentsKey, fetchStudents);\n  return {data,isLoading,refetch,remove,data,error};\n};\nexport default useGetData;\n","/Users/nguyenthanhhuy/Documents/GitHub/ThucTapReactJS/my-app/src/components/PopUpStudent/hooks/useGetData.js",["199","200","201"],"////Applications\nimport axios from \"axios\";\nimport { useQuery } from \"react-query\";\n\nimport { fetchStudentsKey } from \"../../../util/queryKeys\";\nconst fetchStudents = async () => {\n  \n  const res = await axios.get(`http://127.0.0.1:8000/students`);\n  return res?.data;\n};\n///creat function\nconst useGetData = () => {\n  const query = useQuery(fetchStudentsKey, fetchStudents);\n  const {\n    isLoading: isLoadingStudent,\n    isError: isErrorStudent,\n    isSuccess: isSuccessStudent,\n    refetch: refetchStudent,\n    remove: removeStudent,\n    data: dataStudent,\n    error: errorStudent,\n  } = query;\n  return { dataStudent, isLoadingStudent, refetchStudent, removeStudent, dataStudent, errorStudent };\n};\nexport default useGetData;\n","/Users/nguyenthanhhuy/Documents/GitHub/ThucTapReactJS/my-app/src/components/PopUpStudent/hooks/useCreateData.js",[],"/Users/nguyenthanhhuy/Documents/GitHub/ThucTapReactJS/my-app/src/components/PopUpStudent/hooks/useDeleteData.js",[],"/Users/nguyenthanhhuy/Documents/GitHub/ThucTapReactJS/my-app/src/components/PopUpStudent/hooks/useUpdateData.js",[],"/Users/nguyenthanhhuy/Documents/GitHub/ThucTapReactJS/my-app/src/components/PopUpStudent/hooks/useGetDataByPaging.js",["202","203","204"],"////Applications\nimport axios from \"axios\";\nimport { useQuery } from \"react-query\";\n\nimport { fetchStudentsKeyByPage } from \"../../../util/queryKeys\";\nconst fetchStudentsByPage = async (_pageSize, _pageIndex) => {\n  const res = await axios.get(\n    `http://127.0.0.1:8000/students-paging/${_pageSize}/${_pageIndex}`\n  );\n  return res?.data;\n};\n///creat function\nconst useGetDataByPaging = (pageSize, pageIndex) => {\n  const query = useQuery(\n    [fetchStudentsKeyByPage, pageSize, pageIndex],\n    fetchStudentsByPage(pageSize, pageIndex)\n  );\n\n  const {\n    isLoading: isLoadingStudentByPaging,\n    isError: isErrorStudentByPaging,\n    isSuccess: isSuccessStudentByPaging,\n    refetch: refetchStudentByPaging,\n    remove: removeStudentByPaging,\n    data: dataStudentByPaging,\n    error: errorStudentByPaging,\n  } = query;\n  return {\n    dataStudentByPaging,\n    isLoadingStudentByPaging,\n    refetchStudentByPaging,\n    removeStudentByPaging,\n    dataStudentByPaging,\n    errorStudentByPaging,\n  };\n};\nexport default useGetDataByPaging;\n",{"ruleId":"205","severity":1,"message":"206","line":1,"column":8,"nodeType":"207","messageId":"208","endLine":1,"endColumn":12},{"ruleId":"205","severity":1,"message":"209","line":3,"column":46,"nodeType":"207","messageId":"208","endLine":3,"endColumn":57},{"ruleId":"205","severity":1,"message":"210","line":6,"column":8,"nodeType":"207","messageId":"208","endLine":6,"endColumn":19},{"ruleId":"205","severity":1,"message":"211","line":21,"column":19,"nodeType":"207","messageId":"208","endLine":21,"endColumn":29},{"ruleId":"205","severity":1,"message":"212","line":567,"column":5,"nodeType":"207","messageId":"208","endLine":567,"endColumn":12},{"ruleId":"205","severity":1,"message":"213","line":569,"column":26,"nodeType":"207","messageId":"208","endLine":569,"endColumn":44},{"ruleId":"214","severity":1,"message":"215","line":584,"column":6,"nodeType":"216","endLine":584,"endColumn":18,"suggestions":"217"},{"ruleId":"205","severity":1,"message":"218","line":587,"column":9,"nodeType":"207","messageId":"208","endLine":587,"endColumn":24},{"ruleId":"205","severity":1,"message":"219","line":654,"column":9,"nodeType":"207","messageId":"208","endLine":654,"endColumn":29},{"ruleId":"205","severity":1,"message":"209","line":3,"column":46,"nodeType":"207","messageId":"208","endLine":3,"endColumn":57},{"ruleId":"205","severity":1,"message":"220","line":12,"column":3,"nodeType":"207","messageId":"208","endLine":12,"endColumn":8},{"ruleId":"205","severity":1,"message":"221","line":15,"column":3,"nodeType":"207","messageId":"208","endLine":15,"endColumn":14},{"ruleId":"205","severity":1,"message":"211","line":19,"column":19,"nodeType":"207","messageId":"208","endLine":19,"endColumn":29},{"ruleId":"205","severity":1,"message":"222","line":20,"column":8,"nodeType":"207","messageId":"208","endLine":20,"endColumn":23},{"ruleId":"205","severity":1,"message":"223","line":68,"column":22,"nodeType":"207","messageId":"208","endLine":68,"endColumn":35},{"ruleId":"205","severity":1,"message":"224","line":70,"column":10,"nodeType":"207","messageId":"208","endLine":70,"endColumn":19},{"ruleId":"205","severity":1,"message":"225","line":70,"column":21,"nodeType":"207","messageId":"208","endLine":70,"endColumn":33},{"ruleId":"205","severity":1,"message":"226","line":72,"column":10,"nodeType":"207","messageId":"208","endLine":72,"endColumn":14},{"ruleId":"205","severity":1,"message":"227","line":72,"column":16,"nodeType":"207","messageId":"208","endLine":72,"endColumn":23},{"ruleId":"205","severity":1,"message":"228","line":77,"column":5,"nodeType":"207","messageId":"208","endLine":77,"endColumn":13},{"ruleId":"205","severity":1,"message":"229","line":78,"column":5,"nodeType":"207","messageId":"208","endLine":78,"endColumn":17},{"ruleId":"205","severity":1,"message":"212","line":79,"column":5,"nodeType":"207","messageId":"208","endLine":79,"endColumn":12},{"ruleId":"205","severity":1,"message":"230","line":81,"column":18,"nodeType":"207","messageId":"208","endLine":81,"endColumn":24},{"ruleId":"205","severity":1,"message":"213","line":81,"column":26,"nodeType":"207","messageId":"208","endLine":81,"endColumn":44},{"ruleId":"214","severity":1,"message":"215","line":91,"column":6,"nodeType":"216","endLine":91,"endColumn":18,"suggestions":"231"},{"ruleId":"205","severity":1,"message":"232","line":1,"column":9,"nodeType":"207","messageId":"208","endLine":1,"endColumn":12},{"ruleId":"205","severity":1,"message":"233","line":1,"column":13,"nodeType":"207","messageId":"208","endLine":1,"endColumn":16},{"ruleId":"234","replacedBy":"235"},{"ruleId":"236","replacedBy":"237"},{"ruleId":"205","severity":1,"message":"206","line":1,"column":8,"nodeType":"207","messageId":"208","endLine":1,"endColumn":12},{"ruleId":"205","severity":1,"message":"238","line":8,"column":8,"nodeType":"207","messageId":"208","endLine":8,"endColumn":19},{"ruleId":"205","severity":1,"message":"239","line":3,"column":17,"nodeType":"207","messageId":"208","endLine":3,"endColumn":26},{"ruleId":"205","severity":1,"message":"209","line":3,"column":46,"nodeType":"207","messageId":"208","endLine":3,"endColumn":57},{"ruleId":"205","severity":1,"message":"220","line":14,"column":3,"nodeType":"207","messageId":"208","endLine":14,"endColumn":8},{"ruleId":"205","severity":1,"message":"240","line":21,"column":10,"nodeType":"207","messageId":"208","endLine":21,"endColumn":17},{"ruleId":"205","severity":1,"message":"211","line":21,"column":19,"nodeType":"207","messageId":"208","endLine":21,"endColumn":29},{"ruleId":"205","severity":1,"message":"241","line":36,"column":5,"nodeType":"207","messageId":"208","endLine":36,"endColumn":19},{"ruleId":"205","severity":1,"message":"242","line":42,"column":9,"nodeType":"207","messageId":"208","endLine":42,"endColumn":26},{"ruleId":"205","severity":1,"message":"243","line":54,"column":26,"nodeType":"207","messageId":"208","endLine":54,"endColumn":43},{"ruleId":"205","severity":1,"message":"244","line":59,"column":9,"nodeType":"207","messageId":"208","endLine":59,"endColumn":23},{"ruleId":"205","severity":1,"message":"245","line":60,"column":9,"nodeType":"207","messageId":"208","endLine":60,"endColumn":23},{"ruleId":"214","severity":1,"message":"246","line":128,"column":5,"nodeType":"216","endLine":128,"endColumn":7,"suggestions":"247"},{"ruleId":"205","severity":1,"message":"209","line":3,"column":46,"nodeType":"207","messageId":"208","endLine":3,"endColumn":57},{"ruleId":"205","severity":1,"message":"211","line":23,"column":19,"nodeType":"207","messageId":"208","endLine":23,"endColumn":29},{"ruleId":"205","severity":1,"message":"248","line":30,"column":8,"nodeType":"207","messageId":"208","endLine":30,"endColumn":25},{"ruleId":"205","severity":1,"message":"241","line":42,"column":5,"nodeType":"207","messageId":"208","endLine":42,"endColumn":19},{"ruleId":"205","severity":1,"message":"249","line":45,"column":5,"nodeType":"207","messageId":"208","endLine":45,"endColumn":19},{"ruleId":"205","severity":1,"message":"250","line":53,"column":10,"nodeType":"207","messageId":"208","endLine":53,"endColumn":14},{"ruleId":"205","severity":1,"message":"251","line":53,"column":16,"nodeType":"207","messageId":"208","endLine":53,"endColumn":23},{"ruleId":"205","severity":1,"message":"252","line":54,"column":10,"nodeType":"207","messageId":"208","endLine":54,"endColumn":24},{"ruleId":"205","severity":1,"message":"212","line":75,"column":5,"nodeType":"207","messageId":"208","endLine":75,"endColumn":12},{"ruleId":"205","severity":1,"message":"213","line":77,"column":26,"nodeType":"207","messageId":"208","endLine":77,"endColumn":44},{"ruleId":"214","severity":1,"message":"215","line":87,"column":6,"nodeType":"216","endLine":87,"endColumn":18,"suggestions":"253"},{"ruleId":"205","severity":1,"message":"254","line":101,"column":11,"nodeType":"207","messageId":"208","endLine":101,"endColumn":20},{"ruleId":"205","severity":1,"message":"255","line":101,"column":22,"nodeType":"207","messageId":"208","endLine":101,"endColumn":29},{"ruleId":"205","severity":1,"message":"256","line":101,"column":31,"nodeType":"207","messageId":"208","endLine":101,"endColumn":36},{"ruleId":"205","severity":1,"message":"257","line":101,"column":38,"nodeType":"207","messageId":"208","endLine":101,"endColumn":47},{"ruleId":"205","severity":1,"message":"258","line":275,"column":9,"nodeType":"207","messageId":"208","endLine":275,"endColumn":17},{"ruleId":"205","severity":1,"message":"239","line":3,"column":17,"nodeType":"207","messageId":"208","endLine":3,"endColumn":26},{"ruleId":"205","severity":1,"message":"209","line":3,"column":46,"nodeType":"207","messageId":"208","endLine":3,"endColumn":57},{"ruleId":"205","severity":1,"message":"220","line":12,"column":3,"nodeType":"207","messageId":"208","endLine":12,"endColumn":8},{"ruleId":"205","severity":1,"message":"221","line":15,"column":3,"nodeType":"207","messageId":"208","endLine":15,"endColumn":14},{"ruleId":"205","severity":1,"message":"211","line":19,"column":19,"nodeType":"207","messageId":"208","endLine":19,"endColumn":29},{"ruleId":"205","severity":1,"message":"259","line":68,"column":10,"nodeType":"207","messageId":"208","endLine":68,"endColumn":20},{"ruleId":"205","severity":1,"message":"260","line":68,"column":22,"nodeType":"207","messageId":"208","endLine":68,"endColumn":35},{"ruleId":"205","severity":1,"message":"261","line":69,"column":10,"nodeType":"207","messageId":"208","endLine":69,"endColumn":18},{"ruleId":"205","severity":1,"message":"262","line":69,"column":20,"nodeType":"207","messageId":"208","endLine":69,"endColumn":31},{"ruleId":"205","severity":1,"message":"227","line":71,"column":16,"nodeType":"207","messageId":"208","endLine":71,"endColumn":23},{"ruleId":"205","severity":1,"message":"228","line":77,"column":5,"nodeType":"207","messageId":"208","endLine":77,"endColumn":13},{"ruleId":"205","severity":1,"message":"229","line":78,"column":5,"nodeType":"207","messageId":"208","endLine":78,"endColumn":17},{"ruleId":"205","severity":1,"message":"212","line":79,"column":5,"nodeType":"207","messageId":"208","endLine":79,"endColumn":12},{"ruleId":"205","severity":1,"message":"263","line":80,"column":5,"nodeType":"207","messageId":"208","endLine":80,"endColumn":13},{"ruleId":"205","severity":1,"message":"230","line":81,"column":18,"nodeType":"207","messageId":"208","endLine":81,"endColumn":24},{"ruleId":"205","severity":1,"message":"213","line":81,"column":26,"nodeType":"207","messageId":"208","endLine":81,"endColumn":44},{"ruleId":"234","replacedBy":"264"},{"ruleId":"236","replacedBy":"265"},{"ruleId":"205","severity":1,"message":"239","line":3,"column":17,"nodeType":"207","messageId":"208","endLine":3,"endColumn":26},{"ruleId":"205","severity":1,"message":"209","line":3,"column":46,"nodeType":"207","messageId":"208","endLine":3,"endColumn":57},{"ruleId":"205","severity":1,"message":"266","line":6,"column":16,"nodeType":"207","messageId":"208","endLine":6,"endColumn":22},{"ruleId":"205","severity":1,"message":"220","line":15,"column":3,"nodeType":"207","messageId":"208","endLine":15,"endColumn":8},{"ruleId":"205","severity":1,"message":"221","line":18,"column":3,"nodeType":"207","messageId":"208","endLine":18,"endColumn":14},{"ruleId":"205","severity":1,"message":"267","line":28,"column":8,"nodeType":"207","messageId":"208","endLine":28,"endColumn":21},{"ruleId":"205","severity":1,"message":"242","line":41,"column":9,"nodeType":"207","messageId":"208","endLine":41,"endColumn":26},{"ruleId":"205","severity":1,"message":"268","line":53,"column":9,"nodeType":"207","messageId":"208","endLine":53,"endColumn":16},{"ruleId":"205","severity":1,"message":"255","line":11,"column":25,"nodeType":"207","messageId":"208","endLine":11,"endColumn":32},{"ruleId":"205","severity":1,"message":"257","line":11,"column":34,"nodeType":"207","messageId":"208","endLine":11,"endColumn":43},{"ruleId":"269","severity":1,"message":"270","line":13,"column":41,"nodeType":"271","messageId":"272","endLine":13,"endColumn":45},{"ruleId":"205","severity":1,"message":"249","line":16,"column":14,"nodeType":"207","messageId":"208","endLine":16,"endColumn":28},{"ruleId":"205","severity":1,"message":"273","line":17,"column":16,"nodeType":"207","messageId":"208","endLine":17,"endColumn":32},{"ruleId":"269","severity":1,"message":"274","line":23,"column":74,"nodeType":"271","messageId":"272","endLine":23,"endColumn":85},{"ruleId":"205","severity":1,"message":"275","line":21,"column":14,"nodeType":"207","messageId":"208","endLine":21,"endColumn":36},{"ruleId":"205","severity":1,"message":"276","line":22,"column":16,"nodeType":"207","messageId":"208","endLine":22,"endColumn":40},{"ruleId":"269","severity":1,"message":"277","line":33,"column":5,"nodeType":"271","messageId":"272","endLine":33,"endColumn":24},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useCallback' is defined but never used.","'CustomStore' is defined but never used.","'Controller' is defined but never used.","'control' is assigned a value but never used.","'isSubmitSuccessful' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setValue'. Either include it or remove the dependency array.","ArrayExpression",["278"],"'randomIdStudent' is assigned a value but never used.","'handleChangeDatetime' is assigned a value but never used.","'Popup' is defined but never used.","'ToolbarItem' is defined but never used.","'cellNameStudent' is defined but never used.","'setCheckPopup' is assigned a value but never used.","'isShowing' is assigned a value but never used.","'setIsShowing' is assigned a value but never used.","'date' is assigned a value but never used.","'setDate' is assigned a value but never used.","'register' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'errors' is assigned a value but never used.",["279"],"'Box' is defined but never used.","'Tab' is defined but never used.","no-native-reassign",["280"],"no-negated-in-lhs",["281"],"'FormStudent' is defined but never used.","'useEffect' is defined but never used.","'useForm' is defined but never used.","'refetchStudent' is assigned a value but never used.","'studentDataSource' is assigned a value but never used.","'setIsLoadingPanel' is assigned a value but never used.","'updateMutation' is assigned a value but never used.","'deleteMutation' is assigned a value but never used.","React Hook React.useCallback has a missing dependency: 'createMutation'. Either include it or remove the dependency array.",["282"],"'useGetDataByPaing' is defined but never used.","'isErrorStudent' is assigned a value but never used.","'page' is assigned a value but never used.","'setPage' is assigned a value but never used.","'isLoadingPanel' is assigned a value but never used.",["283"],"'isLoading' is assigned a value but never used.","'isError' is assigned a value but never used.","'error' is assigned a value but never used.","'isSuccess' is assigned a value but never used.","'onSaving' is assigned a value but never used.","'editRowKey' is assigned a value but never used.","'setEditRowKey' is assigned a value but never used.","'isRemove' is assigned a value but never used.","'setIsRemove' is assigned a value but never used.","'setValue' is assigned a value but never used.",["280"],["281"],"'uuidv4' is defined but never used.","'useUpdateData' is defined but never used.","'arrTemp' is assigned a value but never used.","no-dupe-keys","Duplicate key 'data'.","ObjectExpression","unexpected","'isSuccessStudent' is assigned a value but never used.","Duplicate key 'dataStudent'.","'isErrorStudentByPaging' is assigned a value but never used.","'isSuccessStudentByPaging' is assigned a value but never used.","Duplicate key 'dataStudentByPaging'.",{"desc":"284","fix":"285"},{"desc":"284","fix":"286"},"no-global-assign","no-unsafe-negation",{"desc":"287","fix":"288"},{"desc":"284","fix":"289"},"Update the dependencies array to be: [checkPopup, setValue]",{"range":"290","text":"291"},{"range":"292","text":"291"},"Update the dependencies array to be: [createMutation]",{"range":"293","text":"294"},{"range":"295","text":"291"},[11379,11391],"[checkPopup, setValue]",[2162,2174],[3544,3546],"[createMutation]",[2324,2336]]