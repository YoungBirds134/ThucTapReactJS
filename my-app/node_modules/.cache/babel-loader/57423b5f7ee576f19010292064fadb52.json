{"ast":null,"code":"var _jsxFileName = \"/Users/nguyenthanhhuy/Documents/GitHub/ThucTapReactJS/my-app/src/components/CellStudent/index.js\",\n    _s = $RefreshSig$();\n\nimport \"devextreme/dist/css/dx.common.css\";\nimport \"devextreme/dist/css/dx.light.css\";\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\nimport ArrayStore from \"devextreme/data/array_store\";\nimport DataSource from \"devextreme/data/data_source\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { LoadPanel } from \"devextreme-react/load-panel\";\nimport \"./CellStudent.css\";\nimport DataGrid, { Column, Paging, Pager, Editing, Popup, Toolbar, Item, ToolbarItem, RequiredRule } from \"devextreme-react/data-grid\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport useGetData from \"./hooks/useGetData\";\nimport useDeleteData from \"./../PopUpStudent/hooks/useDeleteData\";\nimport useCreateData from \"./../PopUpStudent/hooks/useCreateData\";\nimport useUpdateData from \"./../PopUpStudent/hooks/useUpdateData\"; /////////\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\ntoast.configure();\n\nconst CellStudent = () => {\n  _s();\n\n  const {\n    data,\n    isLoading,\n    refetch\n  } = useGetData(); //State\n\n  const [changes, setChanges] = useState([]);\n  const [changesTempUpdate, setChangesTempUpdate] = useState([]); // Save params\n\n  const gridRef = useRef(null);\n  const studentDataSource = new DataSource({\n    store: new ArrayStore({\n      key: \"id\",\n      data: data // Other ArrayStore properties go here\n\n    }),\n    // Other DataSource properties go here\n    reshapeOnPush: true\n  });\n  const arrTemp = [];\n  const createMutation = useCreateData();\n  const deleteMutation = useDeleteData();\n\n  const renderButton = cell => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: () => {\n          var _gridRef$current, _gridRef$current$inst;\n\n          (_gridRef$current = gridRef.current) === null || _gridRef$current === void 0 ? void 0 : (_gridRef$current$inst = _gridRef$current.instance) === null || _gridRef$current$inst === void 0 ? void 0 : _gridRef$current$inst.deleteRow(cell.rowIndex);\n        },\n        children: \"remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  };\n\n  const onChangesChange = React.useCallback(changes => {\n    setChanges(changes);\n  }, []);\n\n  const onCellClick = e => {\n    var _gridRef$current2, _gridRef$current2$ins;\n\n    (_gridRef$current2 = gridRef.current) === null || _gridRef$current2 === void 0 ? void 0 : (_gridRef$current2$ins = _gridRef$current2.instance) === null || _gridRef$current2$ins === void 0 ? void 0 : _gridRef$current2$ins.editCell(e.rowIndex, e.columnIndex);\n  };\n\n  const onInitRow = e => {\n    e.data.createDate = new Date();\n  };\n\n  const onRowRemoved = e => {\n    let data = e.data;\n    let state = changesTempUpdate;\n\n    if (state.length > 0) {\n      const removeItemDuplicate = state.filter(item => item.key.__KEY__ !== data.__KEY__);\n      setChangesTempUpdate(removeItemDuplicate);\n    }\n\n    deleteMutation.mutate(data.id);\n  };\n\n  const onSaved = React.useCallback(e => {\n    let data = e.changes;\n\n    if (data[0].type === \"update\") {\n      let state = changesTempUpdate;\n\n      if (state.length > 0) {\n        let removeItemDuplicate = state.filter(item => item.key.id !== data[0].key.id);\n\n        if (removeItemDuplicate === undefined) {\n          let removeItemDuplicate = state.filter(item => item.key.id !== data[1].key.id);\n        } else {}\n\n        removeItemDuplicate.push(data[0]);\n        setChangesTempUpdate(removeItemDuplicate);\n      } else if (state.length === 0) {\n        state.push(data[0]);\n        setChangesTempUpdate(state);\n      }\n    } else if (data[0].type === \"insert\") {\n      let state = changesTempUpdate;\n      state.push(data[0].data);\n      setChangesTempUpdate(state);\n    }\n  }, [changesTempUpdate]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main__title\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Manage Data Student\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main__Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main__body\",\n        children: /*#__PURE__*/_jsxDEV(DataGrid, {\n          dataSource: data,\n          ref: gridRef,\n          onCellClick: onCellClick,\n          onInitNewRow: onInitRow,\n          onRowRemoved: onRowRemoved,\n          onSaved: onSaved,\n          children: [/*#__PURE__*/_jsxDEV(LoadPanel, {\n            id: \"dataGrid\",\n            position: \"right\",\n            shadingColor: \"rgba(0,0,0,1)\",\n            visible: isLoading || createMutation.isLoading,\n            showIndicator: true,\n            shading: true,\n            showPane: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Editing, {\n            mode: \"cell\",\n            useIcons: true,\n            changes: changes,\n            onChangesChange: onChangesChange // startEditAction\n            // selectTextOnEditStart={true}\n            ,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Student\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            dataField: \"nameStudent\",\n            dataType: \"string\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(RequiredRule, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            dataField: \"phoneStudent\",\n            dataType: \"string\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(RequiredRule, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            dataField: \"dateOfBirth\",\n            dataType: \"date\",\n            format: \"dd/MM/yyyy\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(RequiredRule, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            dataField: \"createDate\",\n            dataType: \"date\",\n            visible: false,\n            defaultSortOrder: \"asc\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            dataField: \"scoreStudent\",\n            dataType: \"number\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(RequiredRule, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            dataField: \"\",\n            cellRender: renderButton\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Toolbar, {\n            children: [/*#__PURE__*/_jsxDEV(Item, {\n              location: \"after\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                icon: \"refresh\",\n                onClick: () => {\n                  refetch();\n                  setChangesTempUpdate([]);\n                  toast(\"ðŸ¦„ You are refetched\", {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined\n                  });\n                },\n                children: \"refetch\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Item, {\n              location: \"after\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                icon: \"refresh\" // onClick={() => gridRef.current?.instance?.saveEditData()}\n                ,\n                onClick: () => {\n                  if (changesTempUpdate.length > 0) {\n                    createMutation.mutate(changesTempUpdate);\n                  }\n\n                  setChangesTempUpdate([]);\n                  console.log(\"Changes Temp onSaving Outsite \" + JSON.stringify(changesTempUpdate));\n                },\n                viable: false,\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Item, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                onClick: () => {\n                  var _gridRef$current3, _gridRef$current3$ins;\n\n                  return (_gridRef$current3 = gridRef.current) === null || _gridRef$current3 === void 0 ? void 0 : (_gridRef$current3$ins = _gridRef$current3.instance) === null || _gridRef$current3$ins === void 0 ? void 0 : _gridRef$current3$ins.addRow();\n                },\n                children: \"add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Paging, {\n            defaultPageSize: 12\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Pager, {\n            showPageSizeSelector: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}; //Create content customize Form\n\n\n_s(CellStudent, \"XI3B33dXwFJhQtf3OdcUqB3ndvM=\", false, function () {\n  return [useGetData, useCreateData, useDeleteData];\n});\n\n_c = CellStudent;\nexport default CellStudent;\n\nvar _c;\n\n$RefreshReg$(_c, \"CellStudent\");","map":{"version":3,"sources":["/Users/nguyenthanhhuy/Documents/GitHub/ThucTapReactJS/my-app/src/components/CellStudent/index.js"],"names":["React","useEffect","useState","useRef","useCallback","ArrayStore","DataSource","v4","uuidv4","LoadPanel","DataGrid","Column","Paging","Pager","Editing","Popup","Toolbar","Item","ToolbarItem","RequiredRule","TextField","Button","toast","useGetData","useDeleteData","useCreateData","useUpdateData","configure","CellStudent","data","isLoading","refetch","changes","setChanges","changesTempUpdate","setChangesTempUpdate","gridRef","studentDataSource","store","key","reshapeOnPush","arrTemp","createMutation","deleteMutation","renderButton","cell","display","justifyContent","current","instance","deleteRow","rowIndex","onChangesChange","onCellClick","e","editCell","columnIndex","onInitRow","createDate","Date","onRowRemoved","state","length","removeItemDuplicate","filter","item","__KEY__","mutate","id","onSaved","type","undefined","push","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","console","log","JSON","stringify","addRow"],"mappings":"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","sourcesContent":["import \"devextreme/dist/css/dx.common.css\";\nimport \"devextreme/dist/css/dx.light.css\";\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\nimport ArrayStore from \"devextreme/data/array_store\";\nimport DataSource from \"devextreme/data/data_source\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { LoadPanel } from \"devextreme-react/load-panel\";\n\nimport \"./CellStudent.css\";\nimport DataGrid, {\n  Column,\n  Paging,\n  Pager,\n  Editing,\n  Popup,\n  Toolbar,\n  Item,\n  ToolbarItem,\n  RequiredRule,\n} from \"devextreme-react/data-grid\";\nimport { TextField, Button } from \"@material-ui/core\";\n\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport useGetData from \"./hooks/useGetData\";\nimport useDeleteData from \"./../PopUpStudent/hooks/useDeleteData\";\nimport useCreateData from \"./../PopUpStudent/hooks/useCreateData\";\nimport useUpdateData from \"./../PopUpStudent/hooks/useUpdateData\";\n/////////\ntoast.configure();\n\nconst CellStudent = () => {\n  const { data, isLoading, refetch } = useGetData();\n  //State\n\n  const [changes, setChanges] = useState([]);\n  const [changesTempUpdate, setChangesTempUpdate] = useState([]);\n\n  // Save params\n  const gridRef = useRef(null);\n  const studentDataSource = new DataSource({\n    store: new ArrayStore({\n      key: \"id\",\n      data: data,\n\n      // Other ArrayStore properties go here\n    }),\n    // Other DataSource properties go here\n\n    reshapeOnPush: true,\n  });\n\n  const arrTemp = [];\n\n  const createMutation = useCreateData();\n\n  const deleteMutation = useDeleteData();\n  const renderButton = (cell) => {\n    return (\n      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n        <Button\n          variant=\"contained\"\n          onClick={() => {\n            gridRef.current?.instance?.deleteRow(cell.rowIndex);\n          }}\n        >\n          remove\n        </Button>\n      </div>\n    );\n  };\n\n  const onChangesChange = React.useCallback((changes) => {\n    setChanges(changes);\n  }, []);\n\n  const onCellClick = (e) => {\n    gridRef.current?.instance?.editCell(e.rowIndex, e.columnIndex);\n  };\n\n  const onInitRow = (e) => {\n    e.data.createDate = new Date();\n  };\n  const onRowRemoved = (e) => {\n    let data = e.data;\n    let state = changesTempUpdate;\n    if (state.length > 0) {\n      const removeItemDuplicate = state.filter(\n        (item) => item.key.__KEY__ !== data.__KEY__\n      );\n\n      setChangesTempUpdate(removeItemDuplicate);\n    }\n    deleteMutation.mutate(data.id);\n  };\n  const onSaved = React.useCallback(\n    (e) => {\n      let data = e.changes;\n\n      if (data[0].type === \"update\") {\n        let state = changesTempUpdate;\n        if (state.length > 0) {\n         let removeItemDuplicate = state.filter(\n            (item) => item.key.id !== data[0].key.id\n          );\n          if(removeItemDuplicate===undefined){\n            let removeItemDuplicate = state.filter(\n              (item) => item.key.id !== data[1].key.id\n            );\n          }else{\n            \n          }\n          removeItemDuplicate.push(data[0]);\n          setChangesTempUpdate(removeItemDuplicate);\n        } else if (state.length === 0) {\n          state.push(data[0]);\n          setChangesTempUpdate(state);\n        }\n      } else if (data[0].type === \"insert\") {\n        let state = changesTempUpdate;\n        state.push(data[0].data);\n        setChangesTempUpdate(state);\n      }\n    },\n    [changesTempUpdate]\n  );\n\n  return (\n    <>\n      <div>\n        <div className=\"main__title\">\n          <h1>Manage Data Student</h1>\n        </div>\n\n        <div className=\"main__Add\"></div>\n        <div className=\"main__body\">\n          <DataGrid\n            dataSource={data}\n            ref={gridRef}\n            onCellClick={onCellClick}\n            onInitNewRow={onInitRow}\n            onRowRemoved={onRowRemoved}\n            onSaved={onSaved}\n          >\n            <LoadPanel\n              id=\"dataGrid\"\n              position=\"right\"\n              shadingColor=\"rgba(0,0,0,1)\"\n              visible={isLoading || createMutation.isLoading}\n              showIndicator={true}\n              shading={true}\n              showPane={true}\n            />\n            <Editing\n              mode=\"cell\"\n              useIcons={true}\n              changes={changes}\n              onChangesChange={onChangesChange}\n              // startEditAction\n              // selectTextOnEditStart={true}\n            >\n              <TextField label=\"Student\"></TextField>\n            </Editing>\n            <Column dataField=\"nameStudent\" dataType=\"string\">\n              {\" \"}\n              <RequiredRule />\n            </Column>\n            <Column dataField=\"phoneStudent\" dataType=\"string\">\n              {\" \"}\n              <RequiredRule />\n            </Column>\n            <Column dataField=\"dateOfBirth\" dataType=\"date\" format=\"dd/MM/yyyy\">\n              {\" \"}\n              <RequiredRule />\n            </Column>\n            <Column\n              dataField=\"createDate\"\n              dataType=\"date\"\n              visible={false}\n              defaultSortOrder=\"asc\"\n            />\n\n            <Column dataField=\"scoreStudent\" dataType=\"number\">\n              {\" \"}\n              <RequiredRule />\n            </Column>\n            <Column dataField=\"\" cellRender={renderButton}></Column>\n\n            <Toolbar>\n              <Item location=\"after\">\n                <Button\n                  variant=\"contained\"\n                  icon=\"refresh\"\n                  onClick={() => {\n                    refetch();\n                    setChangesTempUpdate([]);\n                    toast(\"ðŸ¦„ You are refetched\", {\n                      position: \"top-right\",\n                      autoClose: 5000,\n                      hideProgressBar: false,\n                      closeOnClick: true,\n                      pauseOnHover: true,\n                      draggable: true,\n                      progress: undefined,\n                    });\n                  }}\n                >\n                  refetch\n                </Button>\n              </Item>\n\n              <Item location=\"after\">\n                <Button\n                  variant=\"contained\"\n                  icon=\"refresh\"\n                  // onClick={() => gridRef.current?.instance?.saveEditData()}\n                  onClick={() => {\n                    if (changesTempUpdate.length > 0) {\n                      createMutation.mutate(changesTempUpdate);\n                    }\n                    setChangesTempUpdate([]);\n                    console.log(\n                      \"Changes Temp onSaving Outsite \" +\n                        JSON.stringify(changesTempUpdate)\n                    );\n                  }}\n                  viable={false}\n                >\n                  Save\n                </Button>\n              </Item>\n              <Item>\n                <Button\n                  variant=\"contained\"\n                  onClick={() => gridRef.current?.instance?.addRow()}\n                >\n                  add\n                </Button>\n              </Item>\n            </Toolbar>\n            <Paging defaultPageSize={12} />\n            <Pager showPageSizeSelector={true} />\n          </DataGrid>\n        </div>\n\n        {/* ///React Hook Form + Material Setup */}\n      </div>\n    </>\n  );\n};\n//Create content customize Form\n\nexport default CellStudent;\n"]},"metadata":{},"sourceType":"module"}