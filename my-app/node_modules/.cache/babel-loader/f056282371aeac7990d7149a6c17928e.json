{"ast":null,"code":"var _jsxFileName = \"/Users/nguyenthanhhuy/Documents/GitHub/ThucTapReactJS/my-app/src/components/BatchStudent/index.js\",\n    _s = $RefreshSig$();\n\nimport \"devextreme/dist/css/dx.common.css\";\nimport \"devextreme/dist/css/dx.light.css\";\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\nimport ArrayStore from \"devextreme/data/array_store\";\nimport DataSource from \"devextreme/data/data_source\";\nimport \"./BatchStudent.css\";\nimport DataGrid, { Column, Paging, Pager, Editing, Popup, Toolbar, Item, ToolbarItem } from \"devextreme-react/data-grid\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport cellNameStudent from \"./CellsRender/CellName\"; // Toast\n\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = [{\n  dateOfBirth: \"2000-01-02\",\n  nameStudent: \"Nguyễn Thanh Huy\",\n  phoneStudent: \"092365124\",\n  scoreStudent: 10,\n  id: \"1\"\n}, {\n  dateOfBirth: \"2000-10-09\",\n  nameStudent: \"Nguyễn Thị Đào\",\n  phoneStudent: \"0902554175\",\n  scoreStudent: 1,\n  id: \"12\"\n}, {\n  dateOfBirth: \"1960-12-29\",\n  nameStudent: \"Trần Văn Thời\",\n  phoneStudent: \"09025541541\",\n  scoreStudent: 10,\n  id: \"112\"\n}];\nconst studentDataSource = new DataSource({\n  store: new ArrayStore({\n    key: \"id\",\n    data: data // Other ArrayStore properties go here\n\n  }),\n  // Other DataSource properties go here\n  reshapeOnPush: true\n}); /////////\n\ntoast.configure();\n\nconst BatchStudent = () => {\n  _s();\n\n  //State\n  const [changes, setChanges] = useState([]);\n  const [editRowKey, setEditRowKey] = useState(null);\n  const [date, setDate] = React.useState(new Date()); // Save params\n\n  const gridRef = useRef(null);\n  const {\n    register,\n    handleSubmit,\n    control,\n    setValue,\n    formState: {\n      errors,\n      isSubmitSuccessful\n    }\n  } = useForm({\n    defaultValues: {\n      something: \"anything\"\n    }\n  });\n\n  const customizeColumns = columns => {};\n\n  const renderButton = cell => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: () => {\n          var _gridRef$current, _gridRef$current$inst;\n\n          (_gridRef$current = gridRef.current) === null || _gridRef$current === void 0 ? void 0 : (_gridRef$current$inst = _gridRef$current.instance) === null || _gridRef$current$inst === void 0 ? void 0 : _gridRef$current$inst.editRow(cell.rowIndex);\n        },\n        children: \"edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: () => {\n          var _gridRef$current2, _gridRef$current2$ins;\n\n          (_gridRef$current2 = gridRef.current) === null || _gridRef$current2 === void 0 ? void 0 : (_gridRef$current2$ins = _gridRef$current2.instance) === null || _gridRef$current2$ins === void 0 ? void 0 : _gridRef$current2$ins.deleteRow(cell.rowIndex);\n        },\n        children: \"remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this);\n  };\n\n  const onChangesChange = React.useCallback(changes => {\n    setChanges(changes);\n  }, []);\n  const onRowInserted = React.useCallback(e => {\n    console.log(\"Key: \" + e);\n    e.component.navigateToRow(e.key);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main__title\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Manage Data Student\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main__Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main__body\",\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        dataSource: studentDataSource,\n        remoteOperations: true,\n        ref: gridRef,\n        customizeColumns: customizeColumns,\n        repaintChangesOnly: true,\n        onRowInserted: onRowInserted,\n        newRowPosition: true,\n        children: [/*#__PURE__*/_jsxDEV(Editing, {\n          mode: \"batch\",\n          useIcons: true,\n          changes: changes,\n          onChangesChange: onChangesChange,\n          useIcons: true,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Student\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          dataField: \"nameStudent\",\n          dataType: \"string\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          dataField: \"phoneStudent\",\n          dataType: \"string\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          dataField: \"dateOfBirth\",\n          dataType: \"date\",\n          format: \"dd/MM/yyyy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          dataField: \"createDate\",\n          dataType: \"date\",\n          visible: true,\n          defaultSortOrder: \"asc\",\n          value: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          dataField: \"scoreStudent\",\n          dataType: \"number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          dataField: \"\",\n          cellRender: renderButton\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Toolbar, {\n          children: [/*#__PURE__*/_jsxDEV(Item, {\n            location: \"after\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              icon: \"refresh\",\n              onClick: () => {\n                var _gridRef$current3, _gridRef$current3$ins;\n\n                return (_gridRef$current3 = gridRef.current) === null || _gridRef$current3 === void 0 ? void 0 : (_gridRef$current3$ins = _gridRef$current3.instance) === null || _gridRef$current3$ins === void 0 ? void 0 : _gridRef$current3$ins.cancelEditData();\n              },\n              children: \"Refresh\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Item, {\n            location: \"after\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              icon: \"refresh\",\n              onClick: () => {\n                var _gridRef$current4, _gridRef$current4$ins;\n\n                return (_gridRef$current4 = gridRef.current) === null || _gridRef$current4 === void 0 ? void 0 : (_gridRef$current4$ins = _gridRef$current4.instance) === null || _gridRef$current4$ins === void 0 ? void 0 : _gridRef$current4$ins.saveEditData();\n              },\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Item, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: () => {\n                var _gridRef$current5, _gridRef$current5$ins;\n\n                return (_gridRef$current5 = gridRef.current) === null || _gridRef$current5 === void 0 ? void 0 : (_gridRef$current5$ins = _gridRef$current5.instance) === null || _gridRef$current5$ins === void 0 ? void 0 : _gridRef$current5$ins.addRow();\n              },\n              children: \"add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Paging, {\n          defaultPageSize: 12\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Pager, {\n          showPageSizeSelector: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n}; //Create content customize Form\n\n\n_s(BatchStudent, \"Af0oQpISBXB90C9Rw6BArF+SgL4=\", false, function () {\n  return [useForm];\n});\n\n_c = BatchStudent;\nexport default BatchStudent;\n\nvar _c;\n\n$RefreshReg$(_c, \"BatchStudent\");","map":{"version":3,"sources":["/Users/nguyenthanhhuy/Documents/GitHub/ThucTapReactJS/my-app/src/components/BatchStudent/index.js"],"names":["React","useEffect","useState","useRef","useCallback","ArrayStore","DataSource","DataGrid","Column","Paging","Pager","Editing","Popup","Toolbar","Item","ToolbarItem","TextField","Button","useForm","Controller","cellNameStudent","toast","data","dateOfBirth","nameStudent","phoneStudent","scoreStudent","id","studentDataSource","store","key","reshapeOnPush","configure","BatchStudent","changes","setChanges","editRowKey","setEditRowKey","date","setDate","Date","gridRef","register","handleSubmit","control","setValue","formState","errors","isSubmitSuccessful","defaultValues","something","customizeColumns","columns","renderButton","cell","display","justifyContent","current","instance","editRow","rowIndex","deleteRow","onChangesChange","onRowInserted","e","console","log","component","navigateToRow","cancelEditData","saveEditData","addRow"],"mappings":"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","sourcesContent":["import \"devextreme/dist/css/dx.common.css\";\nimport \"devextreme/dist/css/dx.light.css\";\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\nimport ArrayStore from \"devextreme/data/array_store\";\nimport DataSource from \"devextreme/data/data_source\";\nimport \"./BatchStudent.css\";\nimport DataGrid, {\n  Column,\n  Paging,\n  Pager,\n  Editing,\n  Popup,\n  Toolbar,\n  Item,\n  ToolbarItem,\n} from \"devextreme-react/data-grid\";\nimport { TextField, Button } from \"@material-ui/core\";\n\nimport { useForm, Controller } from \"react-hook-form\";\nimport cellNameStudent from \"./CellsRender/CellName\";\n// Toast\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nconst data = [\n  {\n    dateOfBirth: \"2000-01-02\",\n    nameStudent: \"Nguyễn Thanh Huy\",\n    phoneStudent: \"092365124\",\n\n    scoreStudent: 10,\n    id: \"1\",\n  },\n  {\n    dateOfBirth: \"2000-10-09\",\n    nameStudent: \"Nguyễn Thị Đào\",\n    phoneStudent: \"0902554175\",\n\n    scoreStudent: 1,\n    id: \"12\",\n  },\n  {\n    dateOfBirth: \"1960-12-29\",\n    nameStudent: \"Trần Văn Thời\",\n    phoneStudent: \"09025541541\",\n\n    scoreStudent: 10,\n    id: \"112\",\n  },\n];\n\nconst studentDataSource = new DataSource({\n  store: new ArrayStore({\n    key: \"id\",\n    data: data,\n\n    // Other ArrayStore properties go here\n  }),\n  // Other DataSource properties go here\n\n  reshapeOnPush: true,\n});\n\n\n/////////\ntoast.configure();\nconst BatchStudent = () => {\n  //State\n  const [changes, setChanges] = useState([]);\n  const [editRowKey, setEditRowKey] = useState(null);\n  const [date, setDate] = React.useState(new Date());\n  // Save params\n  const gridRef = useRef(null);\n\n  const {\n    register,\n    handleSubmit,\n    control,\n    setValue,\n    formState: { errors, isSubmitSuccessful },\n  } = useForm({ defaultValues: { something: \"anything\" } });\n\n\n  \n\n  const customizeColumns = (columns) => {\n  \n  };\n  const renderButton = (cell) => {\n \n    return (\n      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n        <Button\n          variant=\"contained\"\n          onClick={() => {\n            gridRef.current?.instance?.editRow(cell.rowIndex);\n          }}\n        >\n          edit\n        </Button>\n        <Button\n          variant=\"contained\"\n          onClick={() => {\n            gridRef.current?.instance?.deleteRow(cell.rowIndex);\n          }}\n        >\n          remove\n        </Button>\n      </div>\n    );\n  };\n\n  const onChangesChange = React.useCallback((changes) => {\n  \n   \n    setChanges(changes);\n  }, []);\n  const onRowInserted = React.useCallback((e) => {\n   \n    console.log(\"Key: \"+ e);\n    e.component.navigateToRow(e.key);\n  }, []);\n  return (\n    <div>\n      <div className=\"main__title\">\n        <h1>Manage Data Student</h1>\n      </div>\n\n      <div className=\"main__Add\"></div>\n      <div className=\"main__body\">\n        <DataGrid\n          dataSource={studentDataSource}\n          remoteOperations={true}\n          ref={gridRef}\n          customizeColumns={customizeColumns}\n          repaintChangesOnly\n          onRowInserted={onRowInserted}\n          newRowPosition\n        >\n          <Editing mode=\"batch\" useIcons={true}\n         changes={changes}\n         onChangesChange={onChangesChange}\n         useIcons={true}\n          >\n            <TextField label=\"Student\"></TextField>\n          </Editing>\n          {/* Create Column include Add Remove Update */}\n          {/* <Column cellRender={renderButton} dataField=\"\" /> */}\n\n          <Column dataField=\"nameStudent\" dataType=\"string\" />\n          <Column dataField=\"phoneStudent\" dataType=\"string\" />\n          <Column dataField=\"dateOfBirth\" dataType=\"date\" format=\"dd/MM/yyyy\" />\n          <Column\n            dataField=\"createDate\"\n            dataType=\"date\"\n            visible={true}\n            defaultSortOrder=\"asc\"\n            value={date}\n          />\n\n          <Column dataField=\"scoreStudent\" dataType=\"number\" />\n          <Column dataField=\"\" cellRender={renderButton}></Column>\n\n          <Toolbar>\n            <Item location=\"after\">\n              <Button\n                variant=\"contained\"\n                icon=\"refresh\"\n                onClick={() => gridRef.current?.instance?.cancelEditData()}\n              >\n                Refresh\n              </Button>\n            </Item>\n            <Item location=\"after\">\n              <Button\n                variant=\"contained\"\n                icon=\"refresh\"\n                onClick={() => gridRef.current?.instance?.saveEditData()}\n              >\n                Save\n              </Button>\n            </Item>\n            <Item>\n              <Button\n                variant=\"contained\"\n                onClick={() => gridRef.current?.instance?.addRow()}\n              >\n                add\n              </Button>\n            </Item>\n          </Toolbar>\n          <Paging defaultPageSize={12} />\n          <Pager showPageSizeSelector={true} />\n        </DataGrid>\n      </div>\n\n      {/* ///React Hook Form + Material Setup */}\n\n    \n    </div>\n  );\n};\n//Create content customize Form\n\nexport default BatchStudent;"]},"metadata":{},"sourceType":"module"}