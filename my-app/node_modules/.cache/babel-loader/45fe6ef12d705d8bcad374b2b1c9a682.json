{"ast":null,"code":"/*!\r\n * devextreme-react\r\n * Version: 21.2.3\r\n * Build date: Thu Oct 28 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-react\r\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OptionsManager = void 0;\n\nvar comparer_1 = require(\"./configuration/comparer\");\n\nvar tree_1 = require(\"./configuration/tree\");\n\nvar utils_1 = require(\"./configuration/utils\");\n\nvar helpers_1 = require(\"./helpers\");\n\nvar OptionsManager =\n/** @class */\nfunction () {\n  function OptionsManager(templatesManager) {\n    this.guards = {};\n    this.isUpdating = false;\n    this.templatesManager = templatesManager;\n    this.onOptionChanged = this.onOptionChanged.bind(this);\n    this.wrapOptionValue = this.wrapOptionValue.bind(this);\n  }\n\n  OptionsManager.prototype.setInstance = function (instance, config, subscribableOptions, independentEvents) {\n    this.instance = instance;\n    this.currentConfig = config;\n    this.subscribableOptions = new Set(subscribableOptions);\n    this.independentEvents = new Set(independentEvents);\n  };\n\n  OptionsManager.prototype.getInitialOptions = function (rootNode) {\n    var _this = this;\n\n    var config = tree_1.buildConfig(rootNode, false);\n    Object.keys(config.templates).forEach(function (key) {\n      _this.templatesManager.add(key, config.templates[key]);\n    });\n    var options = {};\n    Object.keys(config.options).forEach(function (key) {\n      options[key] = _this.wrapOptionValue(key, config.options[key]);\n    });\n\n    if (this.templatesManager.templatesCount > 0) {\n      options.integrationOptions = {\n        templates: this.templatesManager.templates\n      };\n    }\n\n    return options;\n  };\n\n  OptionsManager.prototype.update = function (config) {\n    var _this = this;\n\n    var changes = comparer_1.getChanges(config, this.currentConfig);\n\n    if (!changes.options && !changes.templates && !changes.removedOptions.length) {\n      return;\n    }\n\n    this.instance.beginUpdate();\n    this.isUpdating = true;\n    changes.removedOptions.forEach(function (optionName) {\n      _this.resetOption(optionName);\n    });\n    Object.keys(changes.templates).forEach(function (key) {\n      _this.templatesManager.add(key, changes.templates[key]);\n    });\n\n    if (this.templatesManager.templatesCount > 0) {\n      this.setValue('integrationOptions', {\n        templates: this.templatesManager.templates\n      });\n    }\n\n    Object.keys(changes.options).forEach(function (key) {\n      _this.setValue(key, changes.options[key]);\n    });\n    this.currentConfig = config;\n    this.instance.endUpdate();\n    this.isUpdating = false;\n  };\n\n  OptionsManager.prototype.onOptionChanged = function (e) {\n    var _this = this;\n\n    var _a;\n\n    if (this.isUpdating) {\n      return;\n    }\n\n    var valueDescriptor = tree_1.findValue(this.currentConfig, e.fullName.split('.'));\n\n    if (!valueDescriptor || valueDescriptor.value !== e.value) {\n      this.callOptionChangeHandler(e.fullName, e.value);\n    }\n\n    valueDescriptor = tree_1.findValue(this.currentConfig, e.fullName.split('.'));\n\n    if (!valueDescriptor) {\n      return;\n    }\n\n    var value = valueDescriptor.value,\n        type = valueDescriptor.type;\n\n    if (value instanceof Array && type === tree_1.ValueType.Array) {\n      for (var i = 0; i < value.length; i += 1) {\n        if (value[i] !== ((_a = e.value) === null || _a === void 0 ? void 0 : _a[i])) {\n          this.setGuard(e.fullName, value);\n          return;\n        }\n      }\n    } else if (type === tree_1.ValueType.Complex && value instanceof Object) {\n      Object.keys(value).forEach(function (key) {\n        var _a;\n\n        if (value[key] === ((_a = e.value) === null || _a === void 0 ? void 0 : _a[key])) {\n          return;\n        }\n\n        _this.setGuard(utils_1.mergeNameParts(e.fullName, key), value[key]);\n      });\n    } else {\n      var valuesAreEqual = value === e.value;\n      var valuesAreEqualObjects = !valuesAreEqual && value instanceof Object && e.value instanceof Object && utils_1.shallowEquals(value, e.value);\n\n      if (valuesAreEqual || valuesAreEqualObjects) {\n        return;\n      }\n\n      this.setGuard(e.fullName, value);\n    }\n  };\n\n  OptionsManager.prototype.dispose = function () {\n    var _this = this;\n\n    Object.keys(this.guards).forEach(function (optionName) {\n      window.clearTimeout(_this.guards[optionName]);\n      delete _this.guards[optionName];\n    });\n  };\n\n  OptionsManager.prototype.isOptionSubscribable = function (optionName) {\n    return this.subscribableOptions.has(optionName);\n  };\n\n  OptionsManager.prototype.isIndependentEvent = function (optionName) {\n    return this.independentEvents.has(optionName);\n  };\n\n  OptionsManager.prototype.callOptionChangeHandler = function (optionName, optionValue) {\n    if (!this.isOptionSubscribable(optionName)) {\n      return;\n    }\n\n    var parts = optionName.split('.');\n    var propName = parts[parts.length - 1];\n\n    if (propName.startsWith('on')) {\n      return;\n    }\n\n    var eventName = \"on\" + helpers_1.capitalizeFirstLetter(propName) + \"Change\";\n    parts[parts.length - 1] = eventName;\n    var changeEvent = tree_1.findValue(this.currentConfig, parts);\n\n    if (!changeEvent) {\n      return;\n    }\n\n    if (typeof changeEvent.value !== 'function') {\n      throw new Error(\"Invalid value for the \" + eventName + \" property.\\n                \" + eventName + \" must be a function.\");\n    }\n\n    changeEvent.value(optionValue);\n  };\n\n  OptionsManager.prototype.wrapOptionValue = function (name, value) {\n    var _this = this;\n\n    if (name.substr(0, 2) === 'on' && typeof value === 'function') {\n      return function () {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        if (!_this.isUpdating || _this.isIndependentEvent(name)) {\n          value.apply(void 0, args);\n        }\n      };\n    }\n\n    return value;\n  };\n\n  OptionsManager.prototype.setGuard = function (optionName, optionValue) {\n    var _this = this;\n\n    if (this.guards[optionName] !== undefined) {\n      return;\n    }\n\n    var guardId = window.setTimeout(function () {\n      _this.setValue(optionName, optionValue);\n\n      window.clearTimeout(guardId);\n      delete _this.guards[optionName];\n    });\n    this.guards[optionName] = guardId;\n  };\n\n  OptionsManager.prototype.resetOption = function (name) {\n    this.instance.resetOption(name);\n  };\n\n  OptionsManager.prototype.setValue = function (name, value) {\n    if (this.guards[name]) {\n      window.clearTimeout(this.guards[name]);\n      delete this.guards[name];\n    }\n\n    this.instance.option(name, this.wrapOptionValue(name, value));\n  };\n\n  return OptionsManager;\n}();\n\nexports.OptionsManager = OptionsManager;","map":{"version":3,"sources":["F:/ThucTapReactJS/my-app/node_modules/devextreme-react/core/options-manager.js"],"names":["Object","defineProperty","exports","value","OptionsManager","comparer_1","require","tree_1","utils_1","helpers_1","templatesManager","guards","isUpdating","onOptionChanged","bind","wrapOptionValue","prototype","setInstance","instance","config","subscribableOptions","independentEvents","currentConfig","Set","getInitialOptions","rootNode","_this","buildConfig","keys","templates","forEach","key","add","options","templatesCount","integrationOptions","update","changes","getChanges","removedOptions","length","beginUpdate","optionName","resetOption","setValue","endUpdate","e","_a","valueDescriptor","findValue","fullName","split","callOptionChangeHandler","type","Array","ValueType","i","setGuard","Complex","mergeNameParts","valuesAreEqual","valuesAreEqualObjects","shallowEquals","dispose","window","clearTimeout","isOptionSubscribable","has","isIndependentEvent","optionValue","parts","propName","startsWith","eventName","capitalizeFirstLetter","changeEvent","Error","name","substr","args","_i","arguments","apply","undefined","guardId","setTimeout","option"],"mappings":"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","sourcesContent":["/*!\r\n * devextreme-react\r\n * Version: 21.2.3\r\n * Build date: Thu Oct 28 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-react\r\n */\r\n\r\n\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.OptionsManager = void 0;\r\nvar comparer_1 = require(\"./configuration/comparer\");\r\nvar tree_1 = require(\"./configuration/tree\");\r\nvar utils_1 = require(\"./configuration/utils\");\r\nvar helpers_1 = require(\"./helpers\");\r\nvar OptionsManager = /** @class */ (function () {\r\n    function OptionsManager(templatesManager) {\r\n        this.guards = {};\r\n        this.isUpdating = false;\r\n        this.templatesManager = templatesManager;\r\n        this.onOptionChanged = this.onOptionChanged.bind(this);\r\n        this.wrapOptionValue = this.wrapOptionValue.bind(this);\r\n    }\r\n    OptionsManager.prototype.setInstance = function (instance, config, subscribableOptions, independentEvents) {\r\n        this.instance = instance;\r\n        this.currentConfig = config;\r\n        this.subscribableOptions = new Set(subscribableOptions);\r\n        this.independentEvents = new Set(independentEvents);\r\n    };\r\n    OptionsManager.prototype.getInitialOptions = function (rootNode) {\r\n        var _this = this;\r\n        var config = tree_1.buildConfig(rootNode, false);\r\n        Object.keys(config.templates).forEach(function (key) {\r\n            _this.templatesManager.add(key, config.templates[key]);\r\n        });\r\n        var options = {};\r\n        Object.keys(config.options).forEach(function (key) {\r\n            options[key] = _this.wrapOptionValue(key, config.options[key]);\r\n        });\r\n        if (this.templatesManager.templatesCount > 0) {\r\n            options.integrationOptions = {\r\n                templates: this.templatesManager.templates,\r\n            };\r\n        }\r\n        return options;\r\n    };\r\n    OptionsManager.prototype.update = function (config) {\r\n        var _this = this;\r\n        var changes = comparer_1.getChanges(config, this.currentConfig);\r\n        if (!changes.options && !changes.templates && !changes.removedOptions.length) {\r\n            return;\r\n        }\r\n        this.instance.beginUpdate();\r\n        this.isUpdating = true;\r\n        changes.removedOptions.forEach(function (optionName) {\r\n            _this.resetOption(optionName);\r\n        });\r\n        Object.keys(changes.templates).forEach(function (key) {\r\n            _this.templatesManager.add(key, changes.templates[key]);\r\n        });\r\n        if (this.templatesManager.templatesCount > 0) {\r\n            this.setValue('integrationOptions', {\r\n                templates: this.templatesManager.templates,\r\n            });\r\n        }\r\n        Object.keys(changes.options).forEach(function (key) {\r\n            _this.setValue(key, changes.options[key]);\r\n        });\r\n        this.currentConfig = config;\r\n        this.instance.endUpdate();\r\n        this.isUpdating = false;\r\n    };\r\n    OptionsManager.prototype.onOptionChanged = function (e) {\r\n        var _this = this;\r\n        var _a;\r\n        if (this.isUpdating) {\r\n            return;\r\n        }\r\n        var valueDescriptor = tree_1.findValue(this.currentConfig, e.fullName.split('.'));\r\n        if (!valueDescriptor || valueDescriptor.value !== e.value) {\r\n            this.callOptionChangeHandler(e.fullName, e.value);\r\n        }\r\n        valueDescriptor = tree_1.findValue(this.currentConfig, e.fullName.split('.'));\r\n        if (!valueDescriptor) {\r\n            return;\r\n        }\r\n        var value = valueDescriptor.value, type = valueDescriptor.type;\r\n        if (value instanceof Array && type === tree_1.ValueType.Array) {\r\n            for (var i = 0; i < value.length; i += 1) {\r\n                if (value[i] !== ((_a = e.value) === null || _a === void 0 ? void 0 : _a[i])) {\r\n                    this.setGuard(e.fullName, value);\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        else if (type === tree_1.ValueType.Complex && value instanceof Object) {\r\n            Object.keys(value).forEach(function (key) {\r\n                var _a;\r\n                if (value[key] === ((_a = e.value) === null || _a === void 0 ? void 0 : _a[key])) {\r\n                    return;\r\n                }\r\n                _this.setGuard(utils_1.mergeNameParts(e.fullName, key), value[key]);\r\n            });\r\n        }\r\n        else {\r\n            var valuesAreEqual = value === e.value;\r\n            var valuesAreEqualObjects = !valuesAreEqual\r\n                && value instanceof Object\r\n                && e.value instanceof Object\r\n                && utils_1.shallowEquals(value, e.value);\r\n            if (valuesAreEqual || valuesAreEqualObjects) {\r\n                return;\r\n            }\r\n            this.setGuard(e.fullName, value);\r\n        }\r\n    };\r\n    OptionsManager.prototype.dispose = function () {\r\n        var _this = this;\r\n        Object.keys(this.guards).forEach(function (optionName) {\r\n            window.clearTimeout(_this.guards[optionName]);\r\n            delete _this.guards[optionName];\r\n        });\r\n    };\r\n    OptionsManager.prototype.isOptionSubscribable = function (optionName) {\r\n        return this.subscribableOptions.has(optionName);\r\n    };\r\n    OptionsManager.prototype.isIndependentEvent = function (optionName) {\r\n        return this.independentEvents.has(optionName);\r\n    };\r\n    OptionsManager.prototype.callOptionChangeHandler = function (optionName, optionValue) {\r\n        if (!this.isOptionSubscribable(optionName)) {\r\n            return;\r\n        }\r\n        var parts = optionName.split('.');\r\n        var propName = parts[parts.length - 1];\r\n        if (propName.startsWith('on')) {\r\n            return;\r\n        }\r\n        var eventName = \"on\" + helpers_1.capitalizeFirstLetter(propName) + \"Change\";\r\n        parts[parts.length - 1] = eventName;\r\n        var changeEvent = tree_1.findValue(this.currentConfig, parts);\r\n        if (!changeEvent) {\r\n            return;\r\n        }\r\n        if (typeof changeEvent.value !== 'function') {\r\n            throw new Error(\"Invalid value for the \" + eventName + \" property.\\n                \" + eventName + \" must be a function.\");\r\n        }\r\n        changeEvent.value(optionValue);\r\n    };\r\n    OptionsManager.prototype.wrapOptionValue = function (name, value) {\r\n        var _this = this;\r\n        if (name.substr(0, 2) === 'on' && typeof value === 'function') {\r\n            return function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                if (!_this.isUpdating || _this.isIndependentEvent(name)) {\r\n                    value.apply(void 0, args);\r\n                }\r\n            };\r\n        }\r\n        return value;\r\n    };\r\n    OptionsManager.prototype.setGuard = function (optionName, optionValue) {\r\n        var _this = this;\r\n        if (this.guards[optionName] !== undefined) {\r\n            return;\r\n        }\r\n        var guardId = window.setTimeout(function () {\r\n            _this.setValue(optionName, optionValue);\r\n            window.clearTimeout(guardId);\r\n            delete _this.guards[optionName];\r\n        });\r\n        this.guards[optionName] = guardId;\r\n    };\r\n    OptionsManager.prototype.resetOption = function (name) {\r\n        this.instance.resetOption(name);\r\n    };\r\n    OptionsManager.prototype.setValue = function (name, value) {\r\n        if (this.guards[name]) {\r\n            window.clearTimeout(this.guards[name]);\r\n            delete this.guards[name];\r\n        }\r\n        this.instance.option(name, this.wrapOptionValue(name, value));\r\n    };\r\n    return OptionsManager;\r\n}());\r\nexports.OptionsManager = OptionsManager;\r\n"]},"metadata":{},"sourceType":"script"}