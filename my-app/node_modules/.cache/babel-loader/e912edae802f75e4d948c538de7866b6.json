{"ast":null,"code":"var _s = $RefreshSig$();\n\n////Applications\nimport axios from \"axios\";\nimport { useQuery } from \"react-query\";\nimport { fetchStudentsKey } from \"../../../util/queryKeys\";\n\nconst fetchStudents = async () => {\n  const res = await axios.get(`http://127.0.0.1:8000/students`);\n  return res === null || res === void 0 ? void 0 : res.data;\n}; ///creat function\n\n\nconst useGetData = () => {\n  _s();\n\n  const query = useQuery(fetchStudentsKey, fetchStudents);\n  const {\n    isLoading,\n    isError,\n    isSuccess,\n    refetch,\n    remove,\n    data,\n    error\n  } = query;\n  return {\n    data,\n    isLoading,\n    refetch,\n    remove,\n    data,\n    error\n  };\n};\n\n_s(useGetData, \"c7fxJWDO4uMGjIdKMJSj1aiS9wg=\", false, function () {\n  return [useQuery];\n});\n\nexport default useGetData;","map":{"version":3,"sources":["/Users/nguyenthanhhuy/Documents/GitHub/ThucTapReactJS/my-app/src/components/PopUpStudent/hooks/useGetData.js"],"names":["axios","useQuery","fetchStudentsKey","fetchStudents","res","get","data","useGetData","query","isLoading","isError","isSuccess","refetch","remove","error"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AAEA,SAASC,gBAAT,QAAiC,yBAAjC;;AACA,MAAMC,aAAa,GAAG,YAAY;AAChC,QAAMC,GAAG,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAW,gCAAX,CAAlB;AACA,SAAOD,GAAP,aAAOA,GAAP,uBAAOA,GAAG,CAAEE,IAAZ;AACD,CAHD,C,CAIA;;;AACA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAMC,KAAK,GAAGP,QAAQ,CAACC,gBAAD,EAAmBC,aAAnB,CAAtB;AACA,QAAM;AAAEM,IAAAA,SAAF;AAAaC,IAAAA,OAAb;AAAsBC,IAAAA,SAAtB;AAAiCC,IAAAA,OAAjC;AAA0CC,IAAAA,MAA1C;AAAkDP,IAAAA,IAAlD;AAAwDQ,IAAAA;AAAxD,MAAkEN,KAAxE;AACA,SAAO;AAAEF,IAAAA,IAAF;AAAQG,IAAAA,SAAR;AAAmBG,IAAAA,OAAnB;AAA4BC,IAAAA,MAA5B;AAAoCP,IAAAA,IAApC;AAA0CQ,IAAAA;AAA1C,GAAP;AACD,CAJD;;GAAMP,U;UACUN,Q;;;AAIhB,eAAeM,UAAf","sourcesContent":["////Applications\nimport axios from \"axios\";\nimport { useQuery } from \"react-query\";\n\nimport { fetchStudentsKey } from \"../../../util/queryKeys\";\nconst fetchStudents = async () => {\n  const res = await axios.get(`http://127.0.0.1:8000/students`);\n  return res?.data;\n};\n///creat function\nconst useGetData = () => {\n  const query = useQuery(fetchStudentsKey, fetchStudents);\n  const { isLoading, isError, isSuccess, refetch, remove, data, error } = query;\n  return { data, isLoading, refetch, remove, data, error };\n};\nexport default useGetData;\n"]},"metadata":{},"sourceType":"module"}