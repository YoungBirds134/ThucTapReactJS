{"ast":null,"code":"var _jsxFileName = \"/Users/nguyenthanhhuy/Desktop/BaiTap/my-app/src/components/PopUpStudent/index.js\",\n    _s = $RefreshSig$();\n\nimport \"devextreme/dist/css/dx.common.css\";\nimport \"devextreme/dist/css/dx.light.css\";\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\nimport ArrayStore from \"devextreme/data/array_store\";\nimport DataSource from \"devextreme/data/data_source\";\nimport \"./PopUpStudent.css\";\nimport axios from \"axios\";\nimport DataGrid, { Column, Paging, Pager, Editing, Popup, Toolbar, Item, ToolbarItem } from \"devextreme-react/data-grid\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport { useForm, Controller } from \"react-hook-form\"; // Toast\n\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst data = [{\n  dateOfBirth: \"2000-01-02\",\n  nameStudent: \"Nguyễn Thanh Huy\",\n  phoneStudent: \"092365124\",\n  scoreStudent: 10,\n  id: \"1\"\n}, {\n  dateOfBirth: \"2000-10-09\",\n  nameStudent: \"Nguyễn Thị Đào\",\n  phoneStudent: \"0902554175\",\n  scoreStudent: 1,\n  id: \"12\"\n}, {\n  dateOfBirth: \"1960-12-29\",\n  nameStudent: \"Trần Văn Thời\",\n  phoneStudent: \"09025541541\",\n  scoreStudent: 10,\n  id: \"112\"\n}];\nconst studentDataSource = new DataSource({\n  store: new ArrayStore({\n    key: \"id\",\n    data: data // Other ArrayStore properties go here\n\n  }),\n  // Other DataSource properties go here\n  reshapeOnPush: true\n});\nconsole.log(\"Student Data Source: \" + studentDataSource); /////////\n\ntoast.configure();\n\nconst PopUpStudent = () => {\n  _s();\n\n  //State\n  const [checkPopup, setCheckPopup] = useState(null);\n  const [isShowing, setIsShowing] = useState(false);\n  const [TiTlePopup, setTiTlePopup] = useState(\"\");\n  const [date, setDate] = React.useState(new Date()); // Save params\n\n  const gridRef = useRef(null);\n  const popupRef = useRef(null);\n  const {\n    register,\n    handleSubmit,\n    control,\n    setValue,\n    formState: {\n      errors,\n      isSubmitSuccessful\n    }\n  } = useForm({\n    defaultValues: {\n      something: \"anything\"\n    }\n  });\n  useEffect(() => {\n    axios.get('/users').then(res => {\n      console.log(res.data);\n    });\n  }, []);\n  useEffect(() => {\n    if (checkPopup) {\n      setValue(\"nameStudent\", checkPopup.nameStudent);\n      setValue(\"phoneStudent\", checkPopup.phoneStudent);\n      setValue(\"dateOfBirth\", checkPopup.dateOfBirth);\n      setValue(\"scoreStudent\", checkPopup.scoreStudent);\n    }\n  }, [checkPopup]);\n\n  const onSubmitAdjustStudent = (student, e) => {\n    let randomIdStudent = Math.floor(Math.random() * (2000 - 100 + 1) + 100);\n\n    if (checkPopup !== null) {\n      let studentIndex = data.find(item => item.id === checkPopup.id);\n      console.log(studentIndex);\n      let newStudent = {\n        nameStudent: student.nameStudent,\n        phoneStudent: student.phoneStudent,\n        dateOfBirth: student.dateOfBirth,\n        scoreStudent: student.scoreStudent\n      };\n      studentDataSource.store().push([{\n        type: \"update\",\n        data: newStudent,\n        key: checkPopup.id\n      }]);\n      toast(\"🦄 You are update item\", {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n    } else {\n      const newStudent = {\n        nameStudent: student.nameStudent,\n        scoreStudent: student.scoreStudent,\n        phoneStudent: student.phoneStudent,\n        dateOfBirth: student.dateOfBirth,\n        createDate: date // id: randomIdStudent,\n\n      };\n      studentDataSource.store().push([{\n        type: \"insert\",\n        data: newStudent\n      }]);\n      console.log(data); // gridRef.instance.addRow();\n\n      toast(\"🦄 You are add item\", {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n    }\n\n    e.target.reset();\n    setCheckPopup(null);\n    setIsShowing(false);\n  };\n\n  const onHidePopup = e => {\n    setIsShowing(false);\n    setCheckPopup(null);\n  };\n\n  const onShown = () => {\n    setIsShowing(true);\n  };\n\n  const onShowing = () => {\n    if (checkPopup !== null) {\n      setTiTlePopup(\"Update Student\");\n    } else {\n      setTiTlePopup(\"Add Student\");\n    }\n  };\n\n  const handleChangeDatetime = newValue => {\n    setDate(newValue);\n  };\n\n  const renderContent = () => {\n    var _errors$nameStudent, _errors$nameStudent2, _errors$phoneStudent, _errors$phoneStudent2, _errors$phoneStudent3, _errors$dateOfBirth, _errors$phoneStudent4, _errors$scoreStudent;\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmitAdjustStudent),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"10px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            id: \"outlined-basic\",\n            label: \"Name Student\",\n            variant: \"outlined\",\n            ...register(\"nameStudent\", {\n              maxLength: 100,\n              minLength: 3,\n              required: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this), ((_errors$nameStudent = errors.nameStudent) === null || _errors$nameStudent === void 0 ? void 0 : _errors$nameStudent.type) === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"red\"\n            },\n            children: \"This field is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this), \" \", ((_errors$nameStudent2 = errors.nameStudent) === null || _errors$nameStudent2 === void 0 ? void 0 : _errors$nameStudent2.type) === \"minLength\" && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"red\"\n            },\n            children: \"You are input name invalid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"10px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            id: \"outlined-basic\",\n            label: \"Phone Student\",\n            variant: \"outlined\",\n            ...register(\"phoneStudent\", {\n              required: true,\n              minLength: 6,\n              maxLength: 12\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this), ((_errors$phoneStudent = errors.phoneStudent) === null || _errors$phoneStudent === void 0 ? void 0 : _errors$phoneStudent.type) === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"red\"\n            },\n            children: \"This field is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this), ((_errors$phoneStudent2 = errors.phoneStudent) === null || _errors$phoneStudent2 === void 0 ? void 0 : _errors$phoneStudent2.type) === \"maxLength\" && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"red\"\n            },\n            children: \"Phone Number 10 char\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this), ((_errors$phoneStudent3 = errors.phoneStudent) === null || _errors$phoneStudent3 === void 0 ? void 0 : _errors$phoneStudent3.type) === \"minLength\" && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"red\"\n            },\n            children: \"Phone Number 10 char\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"10px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            type: \"date\",\n            fullWidth: true,\n            id: \"outlined-basic\",\n            variant: \"outlined\",\n            ...register(\"dateOfBirth\", {\n              required: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this), ((_errors$dateOfBirth = errors.dateOfBirth) === null || _errors$dateOfBirth === void 0 ? void 0 : _errors$dateOfBirth.type) === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"red\"\n            },\n            children: \"This field is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"10px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            id: \"outlined-basic\",\n            label: \"Score Student\",\n            variant: \"outlined\",\n            ...register(\"scoreStudent\", {\n              required: true,\n              minLength: 1,\n              maxLength: 2\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this), ((_errors$phoneStudent4 = errors.phoneStudent) === null || _errors$phoneStudent4 === void 0 ? void 0 : _errors$phoneStudent4.type) === \"maxLength\" && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"red\"\n            },\n            children: \"Score between 0 and 10\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 15\n          }, this), ((_errors$scoreStudent = errors.scoreStudent) === null || _errors$scoreStudent === void 0 ? void 0 : _errors$scoreStudent.type) === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"red\"\n            },\n            children: \"This field is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            marginTop: \"100px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"reset\",\n            onClick: onHidePopup,\n            variant: \"contained\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }; // Process Button: Edit and Remove\n  // Render button and add Row\n\n\n  const onSaving = () => {};\n\n  const onRowRemoved = () => {\n    toast(\"🦄 You are deleted item\", {\n      position: \"top-right\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined\n    });\n  };\n\n  const renderButton = cell => {\n    ///How to Debugger: Put Break point and add debugger\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: () => {\n          var _gridRef$current, _gridRef$current$inst;\n\n          (_gridRef$current = gridRef.current) === null || _gridRef$current === void 0 ? void 0 : (_gridRef$current$inst = _gridRef$current.instance) === null || _gridRef$current$inst === void 0 ? void 0 : _gridRef$current$inst.editRow(cell.rowIndex);\n          setCheckPopup(cell.data);\n        },\n        children: \"edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: () => {\n          var _gridRef$current2, _gridRef$current2$ins;\n\n          (_gridRef$current2 = gridRef.current) === null || _gridRef$current2 === void 0 ? void 0 : (_gridRef$current2$ins = _gridRef$current2.instance) === null || _gridRef$current2$ins === void 0 ? void 0 : _gridRef$current2$ins.deleteRow(cell.rowIndex);\n          console.log(\"Deleted Arr: \" + data);\n        },\n        children: \"remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this);\n  };\n\n  const renderTitle = () => {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: TiTlePopup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 12\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main__title\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Manage Data Student\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main__Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main__body\",\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        dataSource: studentDataSource,\n        remoteOperations: true,\n        ref: gridRef,\n        onRowRemoved: onRowRemoved,\n        onSaving: onSaving,\n        children: [/*#__PURE__*/_jsxDEV(Editing, {\n          mode: \"popup\",\n          useIcons: true,\n          children: [/*#__PURE__*/_jsxDEV(Popup, {\n            showTitle: true,\n            ref: popupRef,\n            width: 700,\n            height: 725,\n            visible: isShowing,\n            titleRender: renderTitle,\n            onShown: onShown,\n            onShowing: onShowing // Customize Popup\n            ,\n            contentRender: renderContent,\n            children: /*#__PURE__*/_jsxDEV(ToolbarItem, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Student\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          cellRender: renderButton,\n          dataField: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          dataField: \"nameStudent\",\n          dataType: \"string\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          dataField: \"phoneStudent\",\n          dataType: \"string\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          dataField: \"dateOfBirth\",\n          dataType: \"date\",\n          format: \"dd/MM/yyyy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          dataField: \"createDate\",\n          dataType: \"date\",\n          visible: false,\n          defaultSortOrder: \"asc\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          dataField: \"scoreStudent\",\n          dataType: \"number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Toolbar, {\n          children: [/*#__PURE__*/_jsxDEV(Item, {\n            location: \"after\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              icon: \"refresh\" // onClick={() => {window.location.reload(false)}}\n              // onClick={() => studentDataSource.reload()}\n              ,\n              onClick: () => {\n                var _gridRef$current3, _gridRef$current3$ins;\n\n                return (_gridRef$current3 = gridRef.current) === null || _gridRef$current3 === void 0 ? void 0 : (_gridRef$current3$ins = _gridRef$current3.instance) === null || _gridRef$current3$ins === void 0 ? void 0 : _gridRef$current3$ins.refresh();\n              },\n              children: \"Refresh\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Item, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: () => {\n                var _gridRef$current4, _gridRef$current4$ins;\n\n                return (_gridRef$current4 = gridRef.current) === null || _gridRef$current4 === void 0 ? void 0 : (_gridRef$current4$ins = _gridRef$current4.instance) === null || _gridRef$current4$ins === void 0 ? void 0 : _gridRef$current4$ins.addRow();\n              },\n              children: \"add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Paging, {\n          defaultPageSize: 12\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Pager, {\n          showPageSizeSelector: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 333,\n    columnNumber: 5\n  }, this);\n}; //Create content customize Form\n\n\n_s(PopUpStudent, \"U3RDAKOMknbSULlyU4mg3L8m64M=\", false, function () {\n  return [useForm];\n});\n\n_c = PopUpStudent;\nexport default PopUpStudent;\n\nvar _c;\n\n$RefreshReg$(_c, \"PopUpStudent\");","map":{"version":3,"sources":["/Users/nguyenthanhhuy/Desktop/BaiTap/my-app/src/components/PopUpStudent/index.js"],"names":["React","useEffect","useState","useRef","useCallback","ArrayStore","DataSource","axios","DataGrid","Column","Paging","Pager","Editing","Popup","Toolbar","Item","ToolbarItem","TextField","Button","useForm","Controller","toast","data","dateOfBirth","nameStudent","phoneStudent","scoreStudent","id","studentDataSource","store","key","reshapeOnPush","console","log","configure","PopUpStudent","checkPopup","setCheckPopup","isShowing","setIsShowing","TiTlePopup","setTiTlePopup","date","setDate","Date","gridRef","popupRef","register","handleSubmit","control","setValue","formState","errors","isSubmitSuccessful","defaultValues","something","get","then","res","onSubmitAdjustStudent","student","e","randomIdStudent","Math","floor","random","studentIndex","find","item","newStudent","push","type","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","createDate","target","reset","onHidePopup","onShown","onShowing","handleChangeDatetime","newValue","renderContent","marginBottom","maxLength","minLength","required","color","display","justifyContent","marginTop","onSaving","onRowRemoved","renderButton","cell","current","instance","editRow","rowIndex","deleteRow","renderTitle","refresh","addRow"],"mappings":"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","sourcesContent":["import \"devextreme/dist/css/dx.common.css\";\nimport \"devextreme/dist/css/dx.light.css\";\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\nimport ArrayStore from \"devextreme/data/array_store\";\nimport DataSource from \"devextreme/data/data_source\";\nimport \"./PopUpStudent.css\";\nimport axios from \"axios\";\nimport DataGrid, {\n  Column,\n  Paging,\n  Pager,\n  Editing,\n  Popup,\n  Toolbar,\n  Item,\n  ToolbarItem \n} from \"devextreme-react/data-grid\";\nimport { TextField, Button } from \"@material-ui/core\";\n\nimport { useForm, Controller } from \"react-hook-form\";\n\n// Toast\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nconst data = [\n  {\n    dateOfBirth: \"2000-01-02\",\n    nameStudent: \"Nguyễn Thanh Huy\",\n    phoneStudent: \"092365124\",\n\n    scoreStudent: 10,\n    id: \"1\",\n  },\n  {\n    dateOfBirth: \"2000-10-09\",\n    nameStudent: \"Nguyễn Thị Đào\",\n    phoneStudent: \"0902554175\",\n\n    scoreStudent: 1,\n    id: \"12\",\n  },\n  {\n    dateOfBirth: \"1960-12-29\",\n    nameStudent: \"Trần Văn Thời\",\n    phoneStudent: \"09025541541\",\n\n    scoreStudent: 10,\n    id: \"112\",\n  },\n];\n\n\n\nconst studentDataSource = new DataSource({\n  store: new ArrayStore({\n    key: \"id\",\n    data: data,\n\n    // Other ArrayStore properties go here\n  }),\n  // Other DataSource properties go here\n\n  reshapeOnPush: true,\n});\nconsole.log(\"Student Data Source: \" + studentDataSource);\n\n/////////\ntoast.configure();\nconst PopUpStudent = () => {\n  //State\n  const [checkPopup, setCheckPopup] = useState(null);\n\n  const [isShowing, setIsShowing] = useState(false);\n  const [TiTlePopup, setTiTlePopup] = useState(\"\");\n  const [date, setDate] = React.useState(new Date());\n  // Save params\n  const gridRef = useRef(null);\n  const popupRef = useRef(null);\n\n  const {\n    register,\n    handleSubmit,\n    control,\n    setValue,\n    formState: { errors, isSubmitSuccessful },\n  } = useForm({ defaultValues: { something: \"anything\" } });\n  useEffect(() => {\n    axios.get('/users')\n  .then(res => {\n    console.log(res.data);\n  });\n  }, []);\n  useEffect(() => {\n    if (checkPopup) {\n      setValue(\"nameStudent\", checkPopup.nameStudent);\n      setValue(\"phoneStudent\", checkPopup.phoneStudent);\n      setValue(\"dateOfBirth\", checkPopup.dateOfBirth);\n      setValue(\"scoreStudent\", checkPopup.scoreStudent);\n    }\n  }, [checkPopup]);\n  \n  const onSubmitAdjustStudent = (student, e) => {\n    let randomIdStudent = Math.floor(Math.random() * (2000 - 100 + 1) + 100);\n    if (checkPopup !== null) {\n      let studentIndex = data.find((item) => item.id === checkPopup.id);\n      console.log(studentIndex);\n\n      let newStudent = {\n        nameStudent: student.nameStudent,\n        phoneStudent: student.phoneStudent,\n        dateOfBirth: student.dateOfBirth,\n        scoreStudent: student.scoreStudent,\n        \n      };\n      \n      studentDataSource\n        .store()\n        .push([{ type: \"update\", data: newStudent, key: checkPopup.id }]);\n\n      toast(\"🦄 You are update item\", {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    } else {\n      const newStudent = {\n        nameStudent: student.nameStudent,\n        scoreStudent: student.scoreStudent,\n        phoneStudent: student.phoneStudent,\n        dateOfBirth: student.dateOfBirth,\n        createDate:date,\n        // id: randomIdStudent,\n      };\n\n      studentDataSource.store().push([{ type: \"insert\", data: newStudent }]);\n      console.log(data);\n      // gridRef.instance.addRow();\n      toast(\"🦄 You are add item\", {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    }\n    e.target.reset();\n    setCheckPopup(null);\n    setIsShowing(false);\n  };\n\n  const onHidePopup = (e) => {\n    setIsShowing(false);\n    setCheckPopup(null);\n  };\n  const onShown = () => {\n    setIsShowing(true);\n  };\n  const onShowing = () => {\n    if (checkPopup !== null) {\n      setTiTlePopup(\"Update Student\");\n    } else {\n      setTiTlePopup(\"Add Student\");\n    }\n  };\n  const handleChangeDatetime = (newValue) => {\n    setDate(newValue);\n  };\n  const renderContent = () => {\n    return (\n      <>\n        <form onSubmit={handleSubmit(onSubmitAdjustStudent)}>\n          <div style={{ marginBottom: \"10px\" }}>\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              label=\"Name Student\"\n              variant=\"outlined\"\n              {...register(\"nameStudent\", {\n                maxLength: 100,\n                minLength: 3,\n\n                required: true,\n              })}\n            />\n            {errors.nameStudent?.type === \"required\" && (\n              <p style={{ color: \"red\" }}>This field is required</p>\n            )}{\" \"}\n            {errors.nameStudent?.type === \"minLength\" && (\n              <p style={{ color: \"red\" }}>You are input name invalid</p>\n            )}{\" \"}\n          </div>\n\n          <div style={{ marginBottom: \"10px\" }}>\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              label=\"Phone Student\"\n              variant=\"outlined\"\n              {...register(\"phoneStudent\", {\n                required: true,\n                minLength: 6,\n                maxLength: 12,\n              })}\n            />\n\n            {errors.phoneStudent?.type === \"required\" && (\n              <p style={{ color: \"red\" }}>This field is required</p>\n            )}\n            {errors.phoneStudent?.type === \"maxLength\" && (\n              <p style={{ color: \"red\" }}>Phone Number 10 char</p>\n            )}\n            {errors.phoneStudent?.type === \"minLength\" && (\n              <p style={{ color: \"red\" }}>Phone Number 10 char</p>\n            )}\n          </div>\n\n          <div style={{ marginBottom: \"10px\" }}>\n            <TextField\n              type=\"date\"\n              fullWidth\n              id=\"outlined-basic\"\n              variant=\"outlined\"\n              {...register(\"dateOfBirth\", { required: true })}\n            />\n\n            {/* <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DesktopDatePicker\n                name=\"dateOfBirth\"\n                label=\"Date desktop\"\n                inputFormat=\"dd/MM/yyyy\"\n                value={date}\n                onChange={handleChangeDatetime}\n                renderInput={(params) => (\n                  <TextField {...register(\"dateOfBirth\")} {...params} />\n                )}\n              />\n            </LocalizationProvider> */}\n            {errors.dateOfBirth?.type === \"required\" && (\n              <p style={{ color: \"red\" }}>This field is required</p>\n            )}\n          </div>\n\n          <div style={{ marginBottom: \"10px\" }}>\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              label=\"Score Student\"\n              variant=\"outlined\"\n              {...register(\"scoreStudent\", {\n                required: true,\n                minLength: 1,\n                maxLength: 2,\n              })}\n            />\n            {errors.phoneStudent?.type === \"maxLength\" && (\n              <p style={{ color: \"red\" }}>Score between 0 and 10</p>\n            )}\n            {errors.scoreStudent?.type === \"required\" && (\n              <p style={{ color: \"red\" }}>This field is required</p>\n            )}\n          </div>\n\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              marginTop: \"100px\",\n            }}\n          >\n            <Button type=\"submit\" variant=\"contained\">\n              Save\n            </Button>\n            <Button type=\"reset\" onClick={onHidePopup} variant=\"contained\">\n              Cancel\n            </Button>\n          </div>\n        </form>\n      </>\n    );\n  };\n  // Process Button: Edit and Remove\n\n  // Render button and add Row\n  const onSaving = () => {};\n  const onRowRemoved = () => {\n    toast(\"🦄 You are deleted item\", {\n      position: \"top-right\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n  };\n  const renderButton = (cell) => {\n    ///How to Debugger: Put Break point and add debugger\n\n    return (\n      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n        <Button\n          variant=\"contained\"\n          onClick={() => {\n            gridRef.current?.instance?.editRow(cell.rowIndex);\n            setCheckPopup(cell.data);\n          }}\n        >\n          edit\n        </Button>\n        <Button\n          variant=\"contained\"\n          onClick={() => {\n            gridRef.current?.instance?.deleteRow(cell.rowIndex);\n            console.log(\"Deleted Arr: \" + data);\n          }}\n        >\n          remove\n        </Button>\n      </div>\n    );\n  };\n\n  const renderTitle = () => {\n    return <p>{TiTlePopup}</p>;\n  };\n  return (\n    <div>\n      <div className=\"main__title\">\n        <h1>Manage Data Student</h1>\n      </div>\n\n      <div className=\"main__Add\"></div>\n      <div className=\"main__body\">\n        <DataGrid\n          dataSource={studentDataSource}\n          remoteOperations={true}\n          ref={gridRef}\n          onRowRemoved={onRowRemoved}\n          onSaving={onSaving}\n        >\n          <Editing mode=\"popup\" useIcons={true}>\n            <Popup\n              showTitle={true}\n              ref={popupRef}\n              width={700}\n              height={725}\n              visible={isShowing}\n              titleRender={renderTitle}\n              onShown={onShown}\n              onShowing={onShowing}\n              // Customize Popup\n              contentRender={renderContent}\n            >\n              <ToolbarItem />\n            </Popup>\n            <TextField label=\"Student\"></TextField>\n          </Editing>\n          {/* Create Column include Add Remove Update */}\n          <Column cellRender={renderButton} dataField=\"\" />\n\n          <Column dataField=\"nameStudent\" dataType=\"string\" />\n          <Column dataField=\"phoneStudent\" dataType=\"string\" />\n          <Column dataField=\"dateOfBirth\" dataType=\"date\" format=\"dd/MM/yyyy\" />\n          <Column\n            dataField=\"createDate\"\n            dataType=\"date\"\n            visible={false}\n            defaultSortOrder=\"asc\"\n          />\n\n          <Column\n            \n            dataField=\"scoreStudent\"\n            dataType=\"number\"\n          />\n          <Toolbar>\n            <Item location=\"after\">\n              <Button\n                variant=\"contained\"\n                icon=\"refresh\"\n                // onClick={() => {window.location.reload(false)}}\n                // onClick={() => studentDataSource.reload()}\n                onClick={() => gridRef.current?.instance?.refresh()}\n              >\n                Refresh\n              </Button>\n            </Item>\n            <Item>\n              <Button\n                variant=\"contained\"\n                onClick={() => gridRef.current?.instance?.addRow()}\n              >\n                add\n              </Button>\n            </Item>\n          </Toolbar>\n          <Paging defaultPageSize={12} />\n          <Pager showPageSizeSelector={true} />\n        </DataGrid>\n      </div>\n\n      {/* ///React Hook Form + Material Setup */}\n    </div>\n  );\n};\n//Create content customize Form\n\nexport default PopUpStudent;\n"]},"metadata":{},"sourceType":"module"}