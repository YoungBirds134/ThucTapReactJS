{"ast":null,"code":"var _jsxFileName = \"F:\\\\ThucTapReactJS\\\\my-app\\\\src\\\\components\\\\CellStudent\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport \"devextreme/dist/css/dx.common.css\";\nimport \"devextreme/dist/css/dx.light.css\";\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\nimport ArrayStore from \"devextreme/data/array_store\";\nimport DataSource from \"devextreme/data/data_source\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"./CellStudent.css\";\nimport DataGrid, { Column, Paging, Pager, Editing, Popup, Toolbar, Item, ToolbarItem, RequiredRule } from \"devextreme-react/data-grid\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport useGetData from \"./hooks/useGetData\";\nimport useDeleteData from \"./../PopUpStudent/hooks/useDeleteData\";\nimport useCreateData from \"./../PopUpStudent/hooks/useCreateData\";\nimport useUpdateData from \"./../PopUpStudent/hooks/useUpdateData\"; /////////\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ntoast.configure();\n\nconst CellStudent = () => {\n  _s();\n\n  const {\n    data,\n    isLoading,\n    refetch\n  } = useGetData(); //State\n\n  const [changes, setChanges] = useState([]);\n  const [changesTemp, setChangesTemp] = useState([]); // Save params\n\n  const gridRef = useRef(null);\n  const studentDataSource = new DataSource({\n    store: new ArrayStore({\n      key: \"id\",\n      data: data // Other ArrayStore properties go here\n\n    }),\n    // Other DataSource properties go here\n    reshapeOnPush: true\n  });\n  const arrTemp = [];\n  const createMutation = useCreateData();\n  const updateMutation = useUpdateData();\n  const deleteMutation = useDeleteData();\n\n  const renderButton = cell => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: () => {\n          var _gridRef$current, _gridRef$current$inst;\n\n          (_gridRef$current = gridRef.current) === null || _gridRef$current === void 0 ? void 0 : (_gridRef$current$inst = _gridRef$current.instance) === null || _gridRef$current$inst === void 0 ? void 0 : _gridRef$current$inst.deleteRow(cell.rowIndex);\n        },\n        children: \"remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  };\n\n  const onChangesChange = React.useCallback(changes => {\n    setChanges(changes);\n  }, []);\n\n  const onCellClick = e => {\n    var _gridRef$current2, _gridRef$current2$ins;\n\n    (_gridRef$current2 = gridRef.current) === null || _gridRef$current2 === void 0 ? void 0 : (_gridRef$current2$ins = _gridRef$current2.instance) === null || _gridRef$current2$ins === void 0 ? void 0 : _gridRef$current2$ins.editCell(e.rowIndex, e.columnIndex);\n  };\n\n  const onInitRow = e => {\n    e.data.createDate = new Date();\n  };\n\n  const onRowRemoved = e => {\n    let data = e.data;\n    deleteMutation.mutate(data.id);\n  };\n\n  const onSaved = React.useCallback(e => {\n    let data = e.changes;\n    console.log(\"Changes Temp onSaving: \");\n    arrTemp.push(data.key);\n  }, []);\n\n  const onEditingStart = e => {};\n\n  const onRowUpdating = e => {\n    console.log(\"Now eddit Cell \");\n  };\n\n  console.log(\"Changes Temp onSaving Outsite \");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main__title\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Manage Data Student\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main__Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main__body\",\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        dataSource: data,\n        remoteOperations: true,\n        ref: gridRef,\n        repaintChangesOnly: true,\n        onCellClick: onCellClick,\n        onInitNewRow: onInitRow,\n        onRowRemoved: onRowRemoved,\n        onSaved: onSaved,\n        onEditingStart: onEditingStart,\n        onRowUpdating: onRowUpdating,\n        children: [/*#__PURE__*/_jsxDEV(Editing, {\n          mode: \"cell\",\n          useIcons: true,\n          changes: changes,\n          onChangesChange: onChangesChange // editRowKey={editRowKey}\n          // onEditRowKeyChange={onEditRowKeyChange}\n          ,\n          startEditAction: true,\n          selectTextOnEditStart: true,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Student\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          dataField: \"nameStudent\",\n          dataType: \"string\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(RequiredRule, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          dataField: \"phoneStudent\",\n          dataType: \"string\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(RequiredRule, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          dataField: \"dateOfBirth\",\n          dataType: \"date\",\n          format: \"dd/MM/yyyy\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(RequiredRule, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          dataField: \"createDate\",\n          dataType: \"date\",\n          visible: false,\n          defaultSortOrder: \"asc\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          dataField: \"scoreStudent\",\n          dataType: \"number\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(RequiredRule, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          dataField: \"\",\n          cellRender: renderButton\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Toolbar, {\n          children: [/*#__PURE__*/_jsxDEV(Item, {\n            location: \"after\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              icon: \"refresh\",\n              onClick: () => {\n                refetch();\n                toast(\"ðŸ¦„ You are refetched\", {\n                  position: \"top-right\",\n                  autoClose: 5000,\n                  hideProgressBar: false,\n                  closeOnClick: true,\n                  pauseOnHover: true,\n                  draggable: true,\n                  progress: undefined\n                });\n              },\n              children: \"refetch\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Item, {\n            location: \"after\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              icon: \"refresh\" // onClick={() => gridRef.current?.instance?.saveEditData()}\n              ,\n              onClick: () => arrTemp.slice(0, arrTemp.length),\n              viable: false,\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Item, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: () => {\n                var _gridRef$current3, _gridRef$current3$ins;\n\n                return (_gridRef$current3 = gridRef.current) === null || _gridRef$current3 === void 0 ? void 0 : (_gridRef$current3$ins = _gridRef$current3.instance) === null || _gridRef$current3$ins === void 0 ? void 0 : _gridRef$current3$ins.addRow();\n              },\n              children: \"add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Paging, {\n          defaultPageSize: 12\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Pager, {\n          showPageSizeSelector: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}; //Create content customize Form\n\n\n_s(CellStudent, \"EAM5ODRxEMbcqsjhyFOex8JVkHE=\", false, function () {\n  return [useGetData, useCreateData, useUpdateData, useDeleteData];\n});\n\n_c = CellStudent;\nexport default CellStudent;\n\nvar _c;\n\n$RefreshReg$(_c, \"CellStudent\");","map":{"version":3,"sources":["F:/ThucTapReactJS/my-app/src/components/CellStudent/index.js"],"names":["React","useEffect","useState","useRef","useCallback","ArrayStore","DataSource","v4","uuidv4","DataGrid","Column","Paging","Pager","Editing","Popup","Toolbar","Item","ToolbarItem","RequiredRule","TextField","Button","toast","useGetData","useDeleteData","useCreateData","useUpdateData","configure","CellStudent","data","isLoading","refetch","changes","setChanges","changesTemp","setChangesTemp","gridRef","studentDataSource","store","key","reshapeOnPush","arrTemp","createMutation","updateMutation","deleteMutation","renderButton","cell","display","justifyContent","current","instance","deleteRow","rowIndex","onChangesChange","onCellClick","e","editCell","columnIndex","onInitRow","createDate","Date","onRowRemoved","mutate","id","onSaved","console","log","push","onEditingStart","onRowUpdating","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","slice","length","addRow"],"mappings":"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","sourcesContent":["import \"devextreme/dist/css/dx.common.css\";\r\nimport \"devextreme/dist/css/dx.light.css\";\r\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport ArrayStore from \"devextreme/data/array_store\";\r\nimport DataSource from \"devextreme/data/data_source\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport \"./CellStudent.css\";\r\nimport DataGrid, {\r\n  Column,\r\n  Paging,\r\n  Pager,\r\n  Editing,\r\n  Popup,\r\n  Toolbar,\r\n  Item,\r\n  ToolbarItem,\r\n  RequiredRule,\r\n} from \"devextreme-react/data-grid\";\r\nimport { TextField, Button } from \"@material-ui/core\";\r\n\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport useGetData from \"./hooks/useGetData\";\r\nimport useDeleteData from \"./../PopUpStudent/hooks/useDeleteData\";\r\nimport useCreateData from \"./../PopUpStudent/hooks/useCreateData\";\r\nimport useUpdateData from \"./../PopUpStudent/hooks/useUpdateData\";\r\n/////////\r\ntoast.configure();\r\n\r\nconst CellStudent = () => {\r\n  const { data, isLoading, refetch } = useGetData();\r\n  //State\r\n\r\n  const [changes, setChanges] = useState([]);\r\n  const [changesTemp, setChangesTemp] = useState([]);\r\n\r\n  // Save params\r\n  const gridRef = useRef(null);\r\n  const studentDataSource = new DataSource({\r\n    store: new ArrayStore({\r\n      key: \"id\",\r\n      data: data,\r\n\r\n      // Other ArrayStore properties go here\r\n    }),\r\n    // Other DataSource properties go here\r\n\r\n    reshapeOnPush: true,\r\n  });\r\n\r\n  const arrTemp = [];\r\n\r\n  const createMutation = useCreateData();\r\n  const updateMutation = useUpdateData();\r\n  const deleteMutation = useDeleteData();\r\n  const renderButton = (cell) => {\r\n    return (\r\n      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n        <Button\r\n          variant=\"contained\"\r\n          onClick={() => {\r\n            gridRef.current?.instance?.deleteRow(cell.rowIndex);\r\n          }}\r\n        >\r\n          remove\r\n        </Button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const onChangesChange = React.useCallback((changes) => {\r\n    setChanges(changes);\r\n  }, []);\r\n\r\n  const onCellClick = (e) => {\r\n    gridRef.current?.instance?.editCell(e.rowIndex, e.columnIndex);\r\n  };\r\n\r\n  const onInitRow = (e) => {\r\n    e.data.createDate = new Date();\r\n  };\r\n  const onRowRemoved = (e) => {\r\n    let data = e.data;\r\n\r\n    deleteMutation.mutate(data.id);\r\n  };\r\n  const onSaved = React.useCallback((e) => {\r\n    let data = e.changes;\r\n    console.log(\"Changes Temp onSaving: \" );\r\n\r\n    arrTemp.push(data.key);\r\n  }, []);\r\n  const onEditingStart = (e) => {\r\n  };\r\n  const onRowUpdating=(e)=>{\r\n    \r\n    console.log(\"Now eddit Cell \");\r\n\r\n  }\r\n  console.log(\"Changes Temp onSaving Outsite \" );\r\n  return (\r\n    <div>\r\n      <div className=\"main__title\">\r\n        <h1>Manage Data Student</h1>\r\n      </div>\r\n\r\n      <div className=\"main__Add\"></div>\r\n      <div className=\"main__body\">\r\n        <DataGrid\r\n          dataSource={data}\r\n          remoteOperations={true}\r\n          ref={gridRef}\r\n          repaintChangesOnly={true}\r\n          onCellClick={onCellClick}\r\n          onInitNewRow={onInitRow}\r\n          onRowRemoved={onRowRemoved}\r\n          onSaved={onSaved}\r\n          onEditingStart={onEditingStart}\r\n          onRowUpdating={onRowUpdating}\r\n        >\r\n          <Editing\r\n            mode=\"cell\"\r\n            useIcons={true}\r\n            changes={changes}\r\n            onChangesChange={onChangesChange}\r\n            // editRowKey={editRowKey}\r\n            // onEditRowKeyChange={onEditRowKeyChange}\r\n\r\n            startEditAction\r\n            selectTextOnEditStart={true}\r\n          >\r\n            <TextField label=\"Student\"></TextField>\r\n          </Editing>\r\n          <Column dataField=\"nameStudent\" dataType=\"string\">\r\n            {\" \"}\r\n            <RequiredRule />\r\n          </Column>\r\n          <Column dataField=\"phoneStudent\" dataType=\"string\">\r\n            {\" \"}\r\n            <RequiredRule />\r\n          </Column>\r\n          <Column dataField=\"dateOfBirth\" dataType=\"date\" format=\"dd/MM/yyyy\">\r\n            {\" \"}\r\n            <RequiredRule />\r\n          </Column>\r\n          <Column\r\n            dataField=\"createDate\"\r\n            dataType=\"date\"\r\n            visible={false}\r\n            defaultSortOrder=\"asc\"\r\n          />\r\n\r\n          <Column dataField=\"scoreStudent\" dataType=\"number\">\r\n            {\" \"}\r\n            <RequiredRule />\r\n          </Column>\r\n          <Column dataField=\"\" cellRender={renderButton}></Column>\r\n\r\n          <Toolbar>\r\n            <Item location=\"after\">\r\n              <Button\r\n                variant=\"contained\"\r\n                icon=\"refresh\"\r\n                onClick={() => {\r\n                  refetch();\r\n                  toast(\"ðŸ¦„ You are refetched\", {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                  });\r\n                }}\r\n              >\r\n                refetch\r\n              </Button>\r\n            </Item>\r\n\r\n            <Item location=\"after\">\r\n              <Button\r\n                variant=\"contained\"\r\n                icon=\"refresh\"\r\n                // onClick={() => gridRef.current?.instance?.saveEditData()}\r\n                onClick={() => arrTemp.slice(0, arrTemp.length)}\r\n                viable={false}\r\n              >\r\n                Save\r\n              </Button>\r\n            </Item>\r\n            <Item>\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={() => gridRef.current?.instance?.addRow()}\r\n              >\r\n                add\r\n              </Button>\r\n            </Item>\r\n          </Toolbar>\r\n          <Paging defaultPageSize={12} />\r\n          <Pager showPageSizeSelector={true} />\r\n        </DataGrid>\r\n      </div>\r\n\r\n      {/* ///React Hook Form + Material Setup */}\r\n    </div>\r\n  );\r\n};\r\n//Create content customize Form\r\n\r\nexport default CellStudent;\r\n"]},"metadata":{},"sourceType":"module"}