{"ast":null,"code":"var _jsxFileName = \"/Users/nguyenthanhhuy/Documents/GitHub/ThucTapReactJS/my-app/src/components/CellStudent/index.js\",\n    _s = $RefreshSig$();\n\nimport \"devextreme/dist/css/dx.common.css\";\nimport \"devextreme/dist/css/dx.light.css\";\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\nimport ArrayStore from \"devextreme/data/array_store\";\nimport DataSource from \"devextreme/data/data_source\";\nimport \"./CellStudent.css\";\nimport DataGrid, { Column, Paging, Pager, Editing, Popup, Toolbar, Item, ToolbarItem } from \"devextreme-react/data-grid\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport { useQuery } from \"react-query\";\nimport { fetchStudents } from \"../../services/fetchStudents.service\";\nimport { fetchStudentsKey } from \"../../util/queryKeys\"; // Toast\n\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  isLoading,\n  isError,\n  isSuccess,\n  refetch,\n  remove,\n  data,\n  error\n} = useQuery(fetchStudentsKey, fetchStudents);\nconst studentDataSource = new DataSource({\n  store: new ArrayStore({\n    key: \"id\",\n    data: data // Other ArrayStore properties go here\n\n  }),\n  // Other DataSource properties go here\n  reshapeOnPush: true\n}); /////////\n\ntoast.configure();\n\nconst FormStudent = () => {\n  _s();\n\n  //State\n  const [changes, setChanges] = useState([]);\n  const [editRowKey, setEditRowKey] = useState(null);\n  const [isRemove, setIsRemove] = useState(true);\n  const [date, setDate] = React.useState(new Date()); // Save params\n\n  const gridRef = useRef(null);\n  const {\n    register,\n    handleSubmit,\n    control,\n    setValue,\n    formState: {\n      errors,\n      isSubmitSuccessful\n    }\n  } = useForm({\n    defaultValues: {\n      something: \"anything\"\n    }\n  });\n\n  const customizeColumns = columns => {};\n\n  const renderButton = cell => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: () => {\n          var _gridRef$current, _gridRef$current$inst;\n\n          (_gridRef$current = gridRef.current) === null || _gridRef$current === void 0 ? void 0 : (_gridRef$current$inst = _gridRef$current.instance) === null || _gridRef$current$inst === void 0 ? void 0 : _gridRef$current$inst.deleteRow(cell.rowIndex);\n        },\n        children: \"remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  };\n\n  const onChangesChange = React.useCallback(changes => {\n    setChanges(changes);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main__title\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Manage Data Student\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main__Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main__body\",\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        dataSource: studentDataSource,\n        remoteOperations: true,\n        ref: gridRef,\n        customizeColumns: customizeColumns,\n        repaintChangesOnly: true,\n        newRowPosition: true,\n        children: [/*#__PURE__*/_jsxDEV(Editing, {\n          mode: \"cell\",\n          useIcons: true,\n          changes: changes,\n          onChangesChange: onChangesChange // editRowKey={editRowKey}\n          // onEditRowKeyChange={onEditRowKeyChange}\n          ,\n          startEditAction: true,\n          selectTextOnEditStart: true,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Student\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          dataField: \"nameStudent\",\n          dataType: \"string\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          dataField: \"phoneStudent\",\n          dataType: \"string\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          dataField: \"dateOfBirth\",\n          dataType: \"date\",\n          format: \"dd/MM/yyyy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          dataField: \"createDate\",\n          dataType: \"date\",\n          visible: true,\n          defaultSortOrder: \"asc\",\n          value: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          dataField: \"scoreStudent\",\n          dataType: \"number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          dataField: \"\",\n          cellRender: renderButton\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Toolbar, {\n          children: [/*#__PURE__*/_jsxDEV(Item, {\n            location: \"after\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              icon: \"refresh\",\n              onClick: () => {\n                var _gridRef$current2, _gridRef$current2$ins;\n\n                return (_gridRef$current2 = gridRef.current) === null || _gridRef$current2 === void 0 ? void 0 : (_gridRef$current2$ins = _gridRef$current2.instance) === null || _gridRef$current2$ins === void 0 ? void 0 : _gridRef$current2$ins.cancelEditData();\n              },\n              children: \"refetch\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Item, {\n            location: \"after\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              icon: \"refresh\",\n              onClick: () => {\n                var _gridRef$current3, _gridRef$current3$ins;\n\n                return (_gridRef$current3 = gridRef.current) === null || _gridRef$current3 === void 0 ? void 0 : (_gridRef$current3$ins = _gridRef$current3.instance) === null || _gridRef$current3$ins === void 0 ? void 0 : _gridRef$current3$ins.saveEditData();\n              },\n              viable: false,\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Item, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: () => {\n                var _gridRef$current4, _gridRef$current4$ins;\n\n                return (_gridRef$current4 = gridRef.current) === null || _gridRef$current4 === void 0 ? void 0 : (_gridRef$current4$ins = _gridRef$current4.instance) === null || _gridRef$current4$ins === void 0 ? void 0 : _gridRef$current4$ins.addRow();\n              },\n              children: \"add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Paging, {\n          defaultPageSize: 12\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Pager, {\n          showPageSizeSelector: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}; //Create content customize Form\n\n\n_s(FormStudent, \"3unFqx7qGe5Gt/dpqAGLqTpw/KY=\", true);\n\n_c = FormStudent;\nexport default FormStudent;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormStudent\");","map":{"version":3,"sources":["/Users/nguyenthanhhuy/Documents/GitHub/ThucTapReactJS/my-app/src/components/CellStudent/index.js"],"names":["React","useEffect","useState","useRef","useCallback","ArrayStore","DataSource","DataGrid","Column","Paging","Pager","Editing","Popup","Toolbar","Item","ToolbarItem","TextField","Button","useQuery","fetchStudents","fetchStudentsKey","toast","isLoading","isError","isSuccess","refetch","remove","data","error","studentDataSource","store","key","reshapeOnPush","configure","FormStudent","changes","setChanges","editRowKey","setEditRowKey","isRemove","setIsRemove","date","setDate","Date","gridRef","register","handleSubmit","control","setValue","formState","errors","isSubmitSuccessful","useForm","defaultValues","something","customizeColumns","columns","renderButton","cell","display","justifyContent","current","instance","deleteRow","rowIndex","onChangesChange","cancelEditData","saveEditData","addRow"],"mappings":"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","sourcesContent":["import \"devextreme/dist/css/dx.common.css\";\nimport \"devextreme/dist/css/dx.light.css\";\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\nimport ArrayStore from \"devextreme/data/array_store\";\nimport DataSource from \"devextreme/data/data_source\";\nimport \"./CellStudent.css\";\nimport DataGrid, {\n  Column,\n  Paging,\n  Pager,\n  Editing,\n  Popup,\n  Toolbar,\n  Item,\n  ToolbarItem,\n} from \"devextreme-react/data-grid\";\nimport { TextField, Button } from \"@material-ui/core\";\n\n\nimport { useQuery } from \"react-query\";\nimport { fetchStudents } from \"../../services/fetchStudents.service\";\nimport { fetchStudentsKey } from \"../../util/queryKeys\";\n// Toast\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst { isLoading, isError, isSuccess, refetch, remove, data, error } =\n    useQuery(fetchStudentsKey, fetchStudents);\nconst studentDataSource = new DataSource({\n    \n  store: new ArrayStore({\n    key: \"id\",\n    data: data,\n\n    // Other ArrayStore properties go here\n  }),\n  // Other DataSource properties go here\n\n  reshapeOnPush: true,\n});\n\n/////////\ntoast.configure();\nconst FormStudent = () => {\n  //State\n  const [changes, setChanges] = useState([]);\n  const [editRowKey, setEditRowKey] = useState(null);\n  const [isRemove, setIsRemove] = useState(true);\n\n  const [date, setDate] = React.useState(new Date());\n  // Save params\n  const gridRef = useRef(null);\n\n  const {\n    register,\n    handleSubmit,\n    control,\n    setValue,\n    formState: { errors, isSubmitSuccessful },\n  } = useForm({ defaultValues: { something: \"anything\" } });\n\n  const customizeColumns = (columns) => {};\n  const renderButton = (cell) => {\n    return (\n      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n        \n        <Button\n          variant=\"contained\"\n          onClick={() => {\n            gridRef.current?.instance?.deleteRow(cell.rowIndex);\n          }}\n        >\n          remove\n        </Button>\n      </div>\n    );\n  };\n\n  const onChangesChange = React.useCallback((changes) => {\n    setChanges(changes);\n  }, []);\n\n  return (\n    <div>\n      <div className=\"main__title\">\n        <h1>Manage Data Student</h1>\n      </div>\n\n      <div className=\"main__Add\"></div>\n      <div className=\"main__body\">\n        <DataGrid\n          dataSource={studentDataSource}\n          remoteOperations={true}\n          ref={gridRef}\n          customizeColumns={customizeColumns}\n          repaintChangesOnly={true}\n          newRowPosition\n        >\n          <Editing\n            mode=\"cell\"\n            useIcons={true}\n            changes={changes}\n            onChangesChange={onChangesChange}\n            // editRowKey={editRowKey}\n            // onEditRowKeyChange={onEditRowKeyChange}\n            startEditAction\n            selectTextOnEditStart={true}\n          >\n            <TextField label=\"Student\"></TextField>\n          </Editing>\n          {/* Create Column include Add Remove Update */}\n          {/* <Column cellRender={renderButton} dataField=\"\" /> */}\n          {/* <Column dataField=\"id\" /> */}\n          <Column dataField=\"nameStudent\" dataType=\"string\" />\n          <Column dataField=\"phoneStudent\" dataType=\"string\" />\n          <Column dataField=\"dateOfBirth\" dataType=\"date\" format=\"dd/MM/yyyy\" />\n          <Column\n            dataField=\"createDate\"\n            dataType=\"date\"\n            visible={true}\n            defaultSortOrder=\"asc\"\n            value={date}\n          />\n\n          <Column dataField=\"scoreStudent\" dataType=\"number\" />\n          <Column dataField=\"\" cellRender={renderButton}></Column>\n\n          <Toolbar>\n            <Item location=\"after\">\n              <Button\n                variant=\"contained\"\n                icon=\"refresh\"\n                onClick={() => gridRef.current?.instance?.cancelEditData()}\n              >\n              refetch\n              </Button>\n            </Item>\n            <Item location=\"after\">\n              <Button\n                variant=\"contained\"\n                icon=\"refresh\"\n                onClick={() => gridRef.current?.instance?.saveEditData()}\n                viable={false}\n              >\n                Save\n              </Button>\n            </Item>\n            <Item>\n              <Button\n                variant=\"contained\"\n                onClick={() => gridRef.current?.instance?.addRow()}\n              >\n                add\n              </Button>\n            </Item>\n          </Toolbar>\n          <Paging defaultPageSize={12} />\n          <Pager showPageSizeSelector={true} />\n        </DataGrid>\n      </div>\n\n      {/* ///React Hook Form + Material Setup */}\n    </div>\n  );\n};\n//Create content customize Form\n\nexport default FormStudent;\n"]},"metadata":{},"sourceType":"module"}