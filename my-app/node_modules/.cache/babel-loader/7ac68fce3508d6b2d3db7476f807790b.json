{"ast":null,"code":"var _jsxFileName = \"/Users/nguyenthanhhuy/Documents/GitHub/ThucTapReactJS/my-app/src/components/PopUpStudent/index.js\",\n    _s = $RefreshSig$();\n\nimport \"devextreme/dist/css/dx.common.css\";\nimport \"devextreme/dist/css/dx.light.css\";\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\nimport ArrayStore from \"devextreme/data/array_store\";\nimport DataSource from \"devextreme/data/data_source\";\nimport CustomStore from \"devextreme/data/custom_store\";\nimport \"./PopUpStudent.css\";\nimport axios from \"axios\";\nimport DataGrid, { Column, Paging, Pager, Editing, Popup, Toolbar, Item, ToolbarItem } from \"devextreme-react/data-grid\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport { useForm, Controller } from \"react-hook-form\"; // Toast\n\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useQuery } from \"react-query\";\nimport { fetchStudents } from \"../../services/fetchStudents.service\";\nimport { fetchStudentsKey } from \"../../util/queryKeys\";\nimport useGetData from \"./hooks/useGetData\"; ///\n/////////\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\ntoast.configure();\n\nconst PopUpStudent = () => {\n  _s();\n\n  ///Use Query\n  const {\n    isLoading,\n    isError,\n    isSuccess,\n    refetch,\n    remove,\n    data,\n    error\n  } = useGetData(); //State\n\n  const [checkPopup, setCheckPopup] = useState(null);\n  const [isShowing, setIsShowing] = useState(false);\n  const [TiTlePopup, setTiTlePopup] = useState(\"\");\n  const [date, setDate] = React.useState(new Date()); // Save params\n\n  const gridRef = useRef(null);\n  const popupRef = useRef(null);\n  const studentDataSource = new DataSource({\n    store: new ArrayStore({\n      key: \"id\",\n      data: data // Other ArrayStore properties go here\n\n    }),\n    // Other DataSource properties go here\n    reshapeOnPush: true\n  });\n  const {\n    register,\n    handleSubmit,\n    control,\n    setValue,\n    formState: {\n      errors,\n      isSubmitSuccessful\n    }\n  } = useForm({\n    defaultValues: {\n      something: \"anything\"\n    }\n  });\n  useEffect(() => {\n    axios.get(\"https://6130811d8066ca0017fda905.mockapi.io/Student\").then(res => {});\n  }, []);\n  useEffect(() => {\n    if (checkPopup) {\n      setValue(\"nameStudent\", checkPopup.nameStudent);\n      setValue(\"phoneStudent\", checkPopup.phoneStudent);\n      setValue(\"dateOfBirth\", checkPopup.dateOfBirth);\n      setValue(\"scoreStudent\", checkPopup.scoreStudent);\n    }\n  }, [checkPopup]);\n\n  const onSubmitAdjustStudent = (student, e) => {\n    let randomIdStudent = Math.floor(Math.random() * (2000 - 100 + 1) + 100);\n\n    if (checkPopup !== null) {\n      let newStudent = {\n        nameStudent: student.nameStudent,\n        phoneStudent: student.phoneStudent,\n        dateOfBirth: student.dateOfBirth,\n        scoreStudent: student.scoreStudent\n      };\n      studentDataSource.store().push([{\n        type: \"update\",\n        data: newStudent,\n        key: checkPopup.id\n      }]);\n      toast(\"ðŸ¦„ You are update item\", {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n    } else {\n      const newStudent = {\n        nameStudent: student.nameStudent,\n        scoreStudent: student.scoreStudent,\n        phoneStudent: student.phoneStudent,\n        dateOfBirth: student.dateOfBirth,\n        createDate: date // id: randomIdStudent,\n\n      };\n      studentDataSource.store().push([{\n        type: \"insert\",\n        data: newStudent\n      }]); // gridRef.instance.addRow();\n\n      toast(\"ðŸ¦„ You are add item\", {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n    }\n\n    e.target.reset();\n    setCheckPopup(null);\n    setIsShowing(false);\n  };\n\n  const onHidePopup = e => {\n    setIsShowing(false);\n    setCheckPopup(null);\n  };\n\n  const onShown = () => {\n    setIsShowing(true);\n  };\n\n  const onShowing = () => {\n    if (checkPopup !== null) {\n      setTiTlePopup(\"Update Student\");\n    } else {\n      setTiTlePopup(\"Add Student\");\n    }\n  };\n\n  const handleChangeDatetime = newValue => {\n    setDate(newValue);\n  };\n\n  const renderContent = () => {\n    var _errors$nameStudent, _errors$nameStudent2, _errors$phoneStudent, _errors$phoneStudent2, _errors$phoneStudent3, _errors$dateOfBirth, _errors$phoneStudent4, _errors$scoreStudent;\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmitAdjustStudent),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"10px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            id: \"outlined-basic\",\n            label: \"Name Student\",\n            variant: \"outlined\",\n            ...register(\"nameStudent\", {\n              maxLength: 100,\n              minLength: 3,\n              required: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), ((_errors$nameStudent = errors.nameStudent) === null || _errors$nameStudent === void 0 ? void 0 : _errors$nameStudent.type) === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"red\"\n            },\n            children: \"This field is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this), \" \", ((_errors$nameStudent2 = errors.nameStudent) === null || _errors$nameStudent2 === void 0 ? void 0 : _errors$nameStudent2.type) === \"minLength\" && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"red\"\n            },\n            children: \"You are input name invalid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"10px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            id: \"outlined-basic\",\n            label: \"Phone Student\",\n            variant: \"outlined\",\n            ...register(\"phoneStudent\", {\n              required: true,\n              minLength: 6,\n              maxLength: 12\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), ((_errors$phoneStudent = errors.phoneStudent) === null || _errors$phoneStudent === void 0 ? void 0 : _errors$phoneStudent.type) === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"red\"\n            },\n            children: \"This field is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this), ((_errors$phoneStudent2 = errors.phoneStudent) === null || _errors$phoneStudent2 === void 0 ? void 0 : _errors$phoneStudent2.type) === \"maxLength\" && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"red\"\n            },\n            children: \"Phone Number 10 char\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this), ((_errors$phoneStudent3 = errors.phoneStudent) === null || _errors$phoneStudent3 === void 0 ? void 0 : _errors$phoneStudent3.type) === \"minLength\" && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"red\"\n            },\n            children: \"Phone Number 10 char\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"10px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            type: \"date\",\n            fullWidth: true,\n            id: \"outlined-basic\",\n            variant: \"outlined\",\n            ...register(\"dateOfBirth\", {\n              required: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this), ((_errors$dateOfBirth = errors.dateOfBirth) === null || _errors$dateOfBirth === void 0 ? void 0 : _errors$dateOfBirth.type) === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"red\"\n            },\n            children: \"This field is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"10px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            id: \"outlined-basic\",\n            label: \"Score Student\",\n            variant: \"outlined\",\n            ...register(\"scoreStudent\", {\n              required: true,\n              minLength: 1,\n              maxLength: 2\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this), ((_errors$phoneStudent4 = errors.phoneStudent) === null || _errors$phoneStudent4 === void 0 ? void 0 : _errors$phoneStudent4.type) === \"maxLength\" && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"red\"\n            },\n            children: \"Score between 0 and 10\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 15\n          }, this), ((_errors$scoreStudent = errors.scoreStudent) === null || _errors$scoreStudent === void 0 ? void 0 : _errors$scoreStudent.type) === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"red\"\n            },\n            children: \"This field is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            marginTop: \"100px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"reset\",\n            onClick: onHidePopup,\n            variant: \"contained\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }; // Process Button: Edit and Remove\n  // Render button and add Row\n\n\n  const onSaving = () => {};\n\n  const onRowRemoved = () => {\n    toast(\"ðŸ¦„ You are deleted item\", {\n      position: \"top-right\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined\n    });\n  };\n\n  const renderButton = cell => {\n    ///How to Debugger: Put Break point and add debugger\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: () => {\n          var _gridRef$current, _gridRef$current$inst;\n\n          (_gridRef$current = gridRef.current) === null || _gridRef$current === void 0 ? void 0 : (_gridRef$current$inst = _gridRef$current.instance) === null || _gridRef$current$inst === void 0 ? void 0 : _gridRef$current$inst.editRow(cell.rowIndex);\n          setCheckPopup(cell.data);\n        },\n        children: \"edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: () => {\n          var _gridRef$current2, _gridRef$current2$ins;\n\n          (_gridRef$current2 = gridRef.current) === null || _gridRef$current2 === void 0 ? void 0 : (_gridRef$current2$ins = _gridRef$current2.instance) === null || _gridRef$current2$ins === void 0 ? void 0 : _gridRef$current2$ins.deleteRow(cell.rowIndex);\n        },\n        children: \"remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this);\n  };\n\n  const renderTitle = () => {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: TiTlePopup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 12\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 9\n    }, this) : isError ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"An error while fetching posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main__title\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Manage Data Student\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main__Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main__body\",\n        children: /*#__PURE__*/_jsxDEV(DataGrid, {\n          dataSource: studentDataSource,\n          remoteOperations: true,\n          ref: gridRef,\n          onRowRemoved: onRowRemoved,\n          onSaving: onSaving,\n          children: [/*#__PURE__*/_jsxDEV(Editing, {\n            mode: \"popup\",\n            useIcons: true,\n            children: [/*#__PURE__*/_jsxDEV(Popup, {\n              showTitle: true,\n              ref: popupRef,\n              width: 700,\n              height: 725,\n              visible: isShowing,\n              titleRender: renderTitle,\n              onShown: onShown,\n              onShowing: onShowing // Customize Popup\n              ,\n              contentRender: renderContent,\n              children: /*#__PURE__*/_jsxDEV(ToolbarItem, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Student\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            cellRender: renderButton,\n            dataField: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            dataField: \"nameStudent\",\n            dataType: \"string\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            dataField: \"phoneStudent\",\n            dataType: \"string\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            dataField: \"dateOfBirth\",\n            dataType: \"date\",\n            format: \"dd/MM/yyyy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            dataField: \"createDate\",\n            dataType: \"date\",\n            visible: false,\n            defaultSortOrder: \"asc\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            dataField: \"scoreStudent\",\n            dataType: \"number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Toolbar, {\n            children: [/*#__PURE__*/_jsxDEV(Item, {\n              location: \"after\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                icon: \"refresh\" // onClick={() => {window.location.reload(false)}}\n                // onClick={() => studentDataSource.reload()}\n                ,\n                onClick: () => refetch(),\n                children: \"Refetch\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Item, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                onClick: () => {\n                  var _gridRef$current3, _gridRef$current3$ins;\n\n                  return (_gridRef$current3 = gridRef.current) === null || _gridRef$current3 === void 0 ? void 0 : (_gridRef$current3$ins = _gridRef$current3.instance) === null || _gridRef$current3$ins === void 0 ? void 0 : _gridRef$current3$ins.addRow();\n                },\n                children: \"add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Paging, {\n            defaultPageSize: 12\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Pager, {\n            showPageSizeSelector: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}; //Create content customize Form\n\n\n_s(PopUpStudent, \"rUNowD16qKZQMNC0wkZP+qnBFJw=\", false, function () {\n  return [useGetData, useForm];\n});\n\n_c = PopUpStudent;\nexport default PopUpStudent;\n\nvar _c;\n\n$RefreshReg$(_c, \"PopUpStudent\");","map":{"version":3,"sources":["/Users/nguyenthanhhuy/Documents/GitHub/ThucTapReactJS/my-app/src/components/PopUpStudent/index.js"],"names":["React","useEffect","useState","useRef","useCallback","ArrayStore","DataSource","CustomStore","axios","DataGrid","Column","Paging","Pager","Editing","Popup","Toolbar","Item","ToolbarItem","TextField","Button","useForm","Controller","toast","useQuery","fetchStudents","fetchStudentsKey","useGetData","configure","PopUpStudent","isLoading","isError","isSuccess","refetch","remove","data","error","checkPopup","setCheckPopup","isShowing","setIsShowing","TiTlePopup","setTiTlePopup","date","setDate","Date","gridRef","popupRef","studentDataSource","store","key","reshapeOnPush","register","handleSubmit","control","setValue","formState","errors","isSubmitSuccessful","defaultValues","something","get","then","res","nameStudent","phoneStudent","dateOfBirth","scoreStudent","onSubmitAdjustStudent","student","e","randomIdStudent","Math","floor","random","newStudent","push","type","id","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","createDate","target","reset","onHidePopup","onShown","onShowing","handleChangeDatetime","newValue","renderContent","marginBottom","maxLength","minLength","required","color","display","justifyContent","marginTop","onSaving","onRowRemoved","renderButton","cell","current","instance","editRow","rowIndex","deleteRow","renderTitle","addRow"],"mappings":"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","sourcesContent":["import \"devextreme/dist/css/dx.common.css\";\nimport \"devextreme/dist/css/dx.light.css\";\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\nimport ArrayStore from \"devextreme/data/array_store\";\nimport DataSource from \"devextreme/data/data_source\";\nimport CustomStore from \"devextreme/data/custom_store\";\nimport \"./PopUpStudent.css\";\nimport axios from \"axios\";\nimport DataGrid, {\n  Column,\n  Paging,\n  Pager,\n  Editing,\n  Popup,\n  Toolbar,\n  Item,\n  ToolbarItem,\n} from \"devextreme-react/data-grid\";\nimport { TextField, Button } from \"@material-ui/core\";\n\nimport { useForm, Controller } from \"react-hook-form\";\n\n// Toast\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport { useQuery } from \"react-query\";\nimport { fetchStudents } from \"../../services/fetchStudents.service\";\nimport { fetchStudentsKey } from \"../../util/queryKeys\";\nimport  useGetData  from \"./hooks/useGetData\";\n\n///\n\n/////////\ntoast.configure();\nconst PopUpStudent = () => {\n  ///Use Query\n  const { isLoading, isError, isSuccess, refetch, remove, data, error } =\n   useGetData();\n\n  //State\n  const [checkPopup, setCheckPopup] = useState(null);\n\n  const [isShowing, setIsShowing] = useState(false);\n  const [TiTlePopup, setTiTlePopup] = useState(\"\");\n  const [date, setDate] = React.useState(new Date());\n  // Save params\n  const gridRef = useRef(null);\n  const popupRef = useRef(null);\n  const studentDataSource = new DataSource({\n    store: new ArrayStore({\n      key: \"id\",\n      data: data,\n\n      // Other ArrayStore properties go here\n    }),\n    // Other DataSource properties go here\n\n    reshapeOnPush: true,\n  });\n  const {\n    register,\n    handleSubmit,\n    control,\n    setValue,\n    formState: { errors, isSubmitSuccessful },\n  } = useForm({ defaultValues: { something: \"anything\" } });\n  useEffect(() => {\n    axios\n      .get(\"https://6130811d8066ca0017fda905.mockapi.io/Student\")\n      .then((res) => {});\n  }, []);\n  useEffect(() => {\n    if (checkPopup) {\n      setValue(\"nameStudent\", checkPopup.nameStudent);\n      setValue(\"phoneStudent\", checkPopup.phoneStudent);\n      setValue(\"dateOfBirth\", checkPopup.dateOfBirth);\n      setValue(\"scoreStudent\", checkPopup.scoreStudent);\n    }\n  }, [checkPopup]);\n\n  const onSubmitAdjustStudent = (student, e) => {\n    let randomIdStudent = Math.floor(Math.random() * (2000 - 100 + 1) + 100);\n    if (checkPopup !== null) {\n      let newStudent = {\n        nameStudent: student.nameStudent,\n        phoneStudent: student.phoneStudent,\n        dateOfBirth: student.dateOfBirth,\n        scoreStudent: student.scoreStudent,\n      };\n\n      studentDataSource\n        .store()\n        .push([{ type: \"update\", data: newStudent, key: checkPopup.id }]);\n\n      toast(\"ðŸ¦„ You are update item\", {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    } else {\n      const newStudent = {\n        nameStudent: student.nameStudent,\n        scoreStudent: student.scoreStudent,\n        phoneStudent: student.phoneStudent,\n        dateOfBirth: student.dateOfBirth,\n        createDate: date,\n        // id: randomIdStudent,\n      };\n\n      studentDataSource.store().push([{ type: \"insert\", data: newStudent }]);\n\n      // gridRef.instance.addRow();\n      toast(\"ðŸ¦„ You are add item\", {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    }\n    e.target.reset();\n    setCheckPopup(null);\n    setIsShowing(false);\n  };\n\n  const onHidePopup = (e) => {\n    setIsShowing(false);\n    setCheckPopup(null);\n  };\n  const onShown = () => {\n    setIsShowing(true);\n  };\n  const onShowing = () => {\n    if (checkPopup !== null) {\n      setTiTlePopup(\"Update Student\");\n    } else {\n      setTiTlePopup(\"Add Student\");\n    }\n  };\n  const handleChangeDatetime = (newValue) => {\n    setDate(newValue);\n  };\n  const renderContent = () => {\n    return (\n      <>\n        <form onSubmit={handleSubmit(onSubmitAdjustStudent)}>\n          <div style={{ marginBottom: \"10px\" }}>\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              label=\"Name Student\"\n              variant=\"outlined\"\n              {...register(\"nameStudent\", {\n                maxLength: 100,\n                minLength: 3,\n\n                required: true,\n              })}\n            />\n            {errors.nameStudent?.type === \"required\" && (\n              <p style={{ color: \"red\" }}>This field is required</p>\n            )}{\" \"}\n            {errors.nameStudent?.type === \"minLength\" && (\n              <p style={{ color: \"red\" }}>You are input name invalid</p>\n            )}{\" \"}\n          </div>\n\n          <div style={{ marginBottom: \"10px\" }}>\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              label=\"Phone Student\"\n              variant=\"outlined\"\n              {...register(\"phoneStudent\", {\n                required: true,\n                minLength: 6,\n                maxLength: 12,\n              })}\n            />\n\n            {errors.phoneStudent?.type === \"required\" && (\n              <p style={{ color: \"red\" }}>This field is required</p>\n            )}\n            {errors.phoneStudent?.type === \"maxLength\" && (\n              <p style={{ color: \"red\" }}>Phone Number 10 char</p>\n            )}\n            {errors.phoneStudent?.type === \"minLength\" && (\n              <p style={{ color: \"red\" }}>Phone Number 10 char</p>\n            )}\n          </div>\n\n          <div style={{ marginBottom: \"10px\" }}>\n            <TextField\n              type=\"date\"\n              fullWidth\n              id=\"outlined-basic\"\n              variant=\"outlined\"\n              {...register(\"dateOfBirth\", { required: true })}\n            />\n\n            {/* <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DesktopDatePicker\n                name=\"dateOfBirth\"\n                label=\"Date desktop\"\n                inputFormat=\"dd/MM/yyyy\"\n                value={date}\n                onChange={handleChangeDatetime}\n                renderInput={(params) => (\n                  <TextField {...register(\"dateOfBirth\")} {...params} />\n                )}\n              />\n            </LocalizationProvider> */}\n            {errors.dateOfBirth?.type === \"required\" && (\n              <p style={{ color: \"red\" }}>This field is required</p>\n            )}\n          </div>\n\n          <div style={{ marginBottom: \"10px\" }}>\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              label=\"Score Student\"\n              variant=\"outlined\"\n              {...register(\"scoreStudent\", {\n                required: true,\n                minLength: 1,\n                maxLength: 2,\n              })}\n            />\n            {errors.phoneStudent?.type === \"maxLength\" && (\n              <p style={{ color: \"red\" }}>Score between 0 and 10</p>\n            )}\n            {errors.scoreStudent?.type === \"required\" && (\n              <p style={{ color: \"red\" }}>This field is required</p>\n            )}\n          </div>\n\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              marginTop: \"100px\",\n            }}\n          >\n            <Button type=\"submit\" variant=\"contained\">\n              Save\n            </Button>\n            <Button type=\"reset\" onClick={onHidePopup} variant=\"contained\">\n              Cancel\n            </Button>\n          </div>\n        </form>\n      </>\n    );\n  };\n  // Process Button: Edit and Remove\n\n  // Render button and add Row\n  const onSaving = () => {};\n  const onRowRemoved = () => {\n    toast(\"ðŸ¦„ You are deleted item\", {\n      position: \"top-right\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n  };\n  const renderButton = (cell) => {\n    ///How to Debugger: Put Break point and add debugger\n\n    return (\n      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n        <Button\n          variant=\"contained\"\n          onClick={() => {\n            gridRef.current?.instance?.editRow(cell.rowIndex);\n            setCheckPopup(cell.data);\n          }}\n        >\n          edit\n        </Button>\n        <Button\n          variant=\"contained\"\n          onClick={() => {\n            gridRef.current?.instance?.deleteRow(cell.rowIndex);\n          }}\n        >\n          remove\n        </Button>\n      </div>\n    );\n  };\n\n  const renderTitle = () => {\n    return <p>{TiTlePopup}</p>;\n  };\n  return (\n    <>\n      {isLoading ? (\n        <div>Loading...</div>\n      ) : isError ? (\n        <div>An error while fetching posts</div>\n      ) : (\n        <div>\n          <div className=\"main__title\">\n            <h1>Manage Data Student</h1>\n          </div>\n\n          <div className=\"main__Add\"></div>\n          <div className=\"main__body\">\n            <DataGrid\n              dataSource={studentDataSource}\n              remoteOperations={true}\n              ref={gridRef}\n              onRowRemoved={onRowRemoved}\n              onSaving={onSaving}\n            >\n              <Editing mode=\"popup\" useIcons={true}>\n                <Popup\n                  showTitle={true}\n                  ref={popupRef}\n                  width={700}\n                  height={725}\n                  visible={isShowing}\n                  titleRender={renderTitle}\n                  onShown={onShown}\n                  onShowing={onShowing}\n                  // Customize Popup\n                  contentRender={renderContent}\n                >\n                  <ToolbarItem />\n                </Popup>\n                <TextField label=\"Student\"></TextField>\n              </Editing>\n              {/* Create Column include Add Remove Update */}\n              <Column cellRender={renderButton} dataField=\"\" />\n\n              <Column dataField=\"nameStudent\" dataType=\"string\" />\n              <Column dataField=\"phoneStudent\" dataType=\"string\" />\n              <Column\n                dataField=\"dateOfBirth\"\n                dataType=\"date\"\n                format=\"dd/MM/yyyy\"\n              />\n              <Column\n                dataField=\"createDate\"\n                dataType=\"date\"\n                visible={false}\n                defaultSortOrder=\"asc\"\n              />\n\n              <Column dataField=\"scoreStudent\" dataType=\"number\" />\n              <Toolbar>\n                <Item location=\"after\">\n                  <Button\n                    variant=\"contained\"\n                    icon=\"refresh\"\n                    // onClick={() => {window.location.reload(false)}}\n                    // onClick={() => studentDataSource.reload()}\n                    onClick={() => refetch()}\n                  >\n                    Refetch\n                  </Button>\n                </Item>\n                <Item>\n                  <Button\n                    variant=\"contained\"\n                    onClick={() => gridRef.current?.instance?.addRow()}\n                  >\n                    add\n                  </Button>\n                </Item>\n              </Toolbar>\n              <Paging defaultPageSize={12} />\n              <Pager showPageSizeSelector={true} />\n            </DataGrid>\n          </div>\n\n          {/* ///React Hook Form + Material Setup */}\n        </div>\n      )}\n    </>\n  );\n};\n//Create content customize Form\n\nexport default PopUpStudent;\n"]},"metadata":{},"sourceType":"module"}