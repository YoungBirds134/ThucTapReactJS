{"ast":null,"code":"var _jsxFileName = \"F:\\\\ThucTapReactJS\\\\my-app\\\\src\\\\components\\\\PopUpStudent\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport \"devextreme/dist/css/dx.common.css\";\nimport \"devextreme/dist/css/dx.light.css\";\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\nimport ArrayStore from \"devextreme/data/array_store\";\nimport DataSource from \"devextreme/data/data_source\";\nimport { LoadPanel } from \"devextreme-react/load-panel\";\nimport \"./PopUpStudent.css\";\nimport moment from \"moment\";\nimport DataGrid, { Column, Paging, Pager, Editing, Popup, Toolbar, Item, Scrolling, ToolbarItem } from \"devextreme-react/data-grid\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport { useForm, Controller } from \"react-hook-form\"; // Toast\n\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport useGetData from \"./hooks/useGetData\";\nimport useGetDataByPaing from \"./hooks/useGetDataByPaging\";\nimport useDeleteData from \"./hooks/useDeleteData\";\nimport useCreateData from \"./hooks/useCreateData\";\nimport useUpdateData from \"./hooks/useUpdateData\"; ///\n/////////\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\ntoast.configure();\n\nconst PopUpStudent = () => {\n  _s();\n\n  ///Use Query\n  const {\n    refetchStudent,\n    dataStudent,\n    isErrorStudent,\n    isLoadingStudent\n  } = useGetData();\n  setTimeout(dataStudent, 5000000); //State\n\n  const allowedPageSizes = [5, 10, \"all\"];\n  const [checkPopup, setCheckPopup] = useState(null);\n  const [page, setPage] = useState({\n    _pageIndex: 1,\n    _pageSize: 5\n  });\n  const [isLoadingPanel, setIsLoadingPanel] = useState(false);\n  const [isShowing, setIsShowing] = useState(false);\n  const [TiTlePopup, setTiTlePopup] = useState(\"\"); // Save params\n\n  const gridRef = useRef(null);\n  const studentDataSource = new DataSource({\n    store: new ArrayStore({\n      key: \"id\",\n      data: dataStudent // Other ArrayStore properties go here\n\n    }),\n    // Other DataSource properties go here\n    reshapeOnPush: true\n  });\n  const {\n    register,\n    handleSubmit,\n    control,\n    setValue,\n    formState: {\n      errors,\n      isSubmitSuccessful\n    }\n  } = useForm({\n    defaultValues: {\n      something: \"anything\"\n    }\n  });\n  useEffect(() => {\n    if (checkPopup) {\n      setValue(\"nameStudent\", checkPopup.nameStudent);\n      setValue(\"phoneStudent\", checkPopup.phoneStudent);\n      setValue(\"dateOfBirth\", checkPopup.dateOfBirth);\n      setValue(\"scoreStudent\", checkPopup.scoreStudent);\n    }\n  }, [checkPopup]);\n  const createMutation = useCreateData();\n  const updateMutation = useUpdateData();\n  const deleteMutation = useDeleteData(); // const {\n  //   dataStudentByPaging,\n  //   isLoadingStudentByPaging,\n  //   refetchStudentByPaging,\n  //   removeStudentByPaging,\n  //   errorStudentByPaging,\n  // } = useGetDataByPaging(page);\n\n  const {\n    isLoading,\n    isError,\n    error,\n    isSuccess\n  } = createMutation;\n\n  const onSubmitAdjustStudent = async (student, e) => {\n    if (checkPopup !== null) {\n      let convertDate = moment(student.dateOfBirth).format(\"YYYY-MM-DD\");\n      let newStudent = {\n        id: checkPopup.id,\n        nameStudent: student.nameStudent,\n        phoneStudent: student.phoneStudent,\n        dateOfBirth: convertDate,\n        scoreStudent: student.scoreStudent\n      };\n      updateMutation.mutate(newStudent);\n      studentDataSource.store().push([{\n        type: \"update\",\n        data: newStudent,\n        key: checkPopup.id\n      }]);\n    } else {\n      const newStudent = [{\n        nameStudent: student.nameStudent,\n        scoreStudent: student.scoreStudent,\n        phoneStudent: student.phoneStudent,\n        dateOfBirth: student.dateOfBirth // id: randomIdStudent,\n\n      }];\n      createMutation.mutate(newStudent);\n      studentDataSource.store().push([{\n        type: \"insert\",\n        data: newStudent\n      }]);\n    }\n\n    e.target.reset();\n    setCheckPopup(null);\n    setIsShowing(false);\n    setIsLoadingPanel(true);\n  };\n\n  const onHidePopup = e => {\n    setIsShowing(false);\n    setCheckPopup(null);\n  };\n\n  const onShown = () => {\n    setIsShowing(true);\n  };\n\n  const onShowing = () => {\n    if (checkPopup !== null) {\n      setTiTlePopup(\"Update Student\");\n    } else {\n      setTiTlePopup(\"Add Student\");\n    }\n  };\n\n  const renderContent = () => {\n    var _errors$nameStudent, _errors$nameStudent2, _errors$phoneStudent, _errors$phoneStudent2, _errors$phoneStudent3, _errors$dateOfBirth, _errors$phoneStudent4, _errors$scoreStudent;\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmitAdjustStudent),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"10px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            id: \"outlined-basic\",\n            label: \"Name Student\",\n            variant: \"outlined\",\n            ...register(\"nameStudent\", {\n              maxLength: 100,\n              minLength: 3,\n              required: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), ((_errors$nameStudent = errors.nameStudent) === null || _errors$nameStudent === void 0 ? void 0 : _errors$nameStudent.type) === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"red\"\n            },\n            children: \"This field is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this), \" \", ((_errors$nameStudent2 = errors.nameStudent) === null || _errors$nameStudent2 === void 0 ? void 0 : _errors$nameStudent2.type) === \"minLength\" && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"red\"\n            },\n            children: \"You are input name invalid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"10px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            id: \"outlined-basic\",\n            label: \"Phone Student\",\n            variant: \"outlined\",\n            ...register(\"phoneStudent\", {\n              required: true,\n              minLength: 6,\n              maxLength: 12\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), ((_errors$phoneStudent = errors.phoneStudent) === null || _errors$phoneStudent === void 0 ? void 0 : _errors$phoneStudent.type) === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"red\"\n            },\n            children: \"This field is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this), ((_errors$phoneStudent2 = errors.phoneStudent) === null || _errors$phoneStudent2 === void 0 ? void 0 : _errors$phoneStudent2.type) === \"maxLength\" && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"red\"\n            },\n            children: \"Phone Number 10 char\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this), ((_errors$phoneStudent3 = errors.phoneStudent) === null || _errors$phoneStudent3 === void 0 ? void 0 : _errors$phoneStudent3.type) === \"minLength\" && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"red\"\n            },\n            children: \"Phone Number 10 char\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"10px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            type: \"date\",\n            fullWidth: true,\n            id: \"outlined-basic\",\n            variant: \"outlined\",\n            ...register(\"dateOfBirth\", {\n              required: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this), ((_errors$dateOfBirth = errors.dateOfBirth) === null || _errors$dateOfBirth === void 0 ? void 0 : _errors$dateOfBirth.type) === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"red\"\n            },\n            children: \"This field is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"10px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            id: \"outlined-basic\",\n            label: \"Score Student\",\n            variant: \"outlined\",\n            ...register(\"scoreStudent\", {\n              required: true,\n              minLength: 1,\n              maxLength: 2\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this), ((_errors$phoneStudent4 = errors.phoneStudent) === null || _errors$phoneStudent4 === void 0 ? void 0 : _errors$phoneStudent4.type) === \"maxLength\" && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"red\"\n            },\n            children: \"Score between 0 and 10\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 15\n          }, this), ((_errors$scoreStudent = errors.scoreStudent) === null || _errors$scoreStudent === void 0 ? void 0 : _errors$scoreStudent.type) === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"red\"\n            },\n            children: \"This field is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            marginTop: \"100px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"reset\",\n            onClick: onHidePopup,\n            variant: \"contained\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }; // Process Button: Edit and Remove\n  // Render button and add Row\n\n\n  const onRowRemoving = e => {\n    setIsLoadingPanel(true);\n    console.log(\"Key: \" + e.data);\n    let data = e.data; // deleteMutation.mutate(data.id);\n\n    setTimeout(deleteMutation.mutate(data.id), 50000);\n  };\n\n  const onSaving = React.useCallback(e => {\n    setIsLoadingPanel(true);\n  }, []);\n\n  const onInitRow = e => {\n    e.data.createDate = new Date(); // e.data.id = Math.ceil(Math.random() * (10000 - 100) + 100);\n  };\n\n  const deleteLoading = () => {\n    setIsLoadingPanel(true);\n  };\n\n  const renderButton = cell => {\n    ///How to Debugger: Put Break point and add debugger\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: () => {\n          var _gridRef$current, _gridRef$current$inst;\n\n          (_gridRef$current = gridRef.current) === null || _gridRef$current === void 0 ? void 0 : (_gridRef$current$inst = _gridRef$current.instance) === null || _gridRef$current$inst === void 0 ? void 0 : _gridRef$current$inst.editRow(cell.rowIndex);\n          setCheckPopup(cell.data);\n        },\n        children: \"edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: () => {\n          var _gridRef$current2, _gridRef$current2$ins;\n\n          (_gridRef$current2 = gridRef.current) === null || _gridRef$current2 === void 0 ? void 0 : (_gridRef$current2$ins = _gridRef$current2.instance) === null || _gridRef$current2$ins === void 0 ? void 0 : _gridRef$current2$ins.deleteRow(cell.rowIndex);\n          deleteLoading();\n        },\n        children: \"remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this);\n  };\n\n  const renderTitle = () => {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: TiTlePopup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 12\n    }, this);\n  };\n\n  console.log(\"Get Data Loading: \" + isLoadingStudent);\n  console.log(\"Create Loading: \" + createMutation.isLoading);\n  console.log(\"Delete Loading: \" + deleteMutation.isLoading);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main__title\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Manage Data Student\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main__Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main__body\",\n        children: /*#__PURE__*/_jsxDEV(DataGrid, {\n          id: \"dataGrid\",\n          dataSource: dataStudent || [],\n          remoteOperations: true,\n          ref: gridRef,\n          onRowRemoving: onRowRemoving // onSaving={onSaving}\n          ,\n          onInitNewRow: onInitRow,\n          children: [/*#__PURE__*/_jsxDEV(LoadPanel, {\n            id: \"dataGrid\",\n            position: \"right\",\n            shadingColor: \"rgba(0,0,0,1)\",\n            visible: isLoadingStudent || createMutation.isLoading || deleteMutation.isLoading,\n            showIndicator: true,\n            shading: true,\n            showPane: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Scrolling, {\n            rowRenderingMode: \"virtual\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Paging, {\n            defaultPageSize: 5\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Pager, {\n            visible: true,\n            allowedPageSizes: allowedPageSizes,\n            displayMode: \"compact\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Editing, {\n            mode: \"popup\",\n            useIcons: true,\n            children: [/*#__PURE__*/_jsxDEV(Popup, {\n              showTitle: true,\n              width: 700,\n              height: 725,\n              visible: isShowing,\n              titleRender: renderTitle,\n              onShown: onShown,\n              onShowing: onShowing // Customize Popup\n              ,\n              contentRender: renderContent,\n              children: /*#__PURE__*/_jsxDEV(ToolbarItem, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Student\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            cellRender: renderButton,\n            dataField: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            dataField: \"nameStudent\",\n            dataType: \"string\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            dataField: \"phoneStudent\",\n            dataType: \"string\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            dataField: \"dateOfBirth\",\n            dataType: \"date\",\n            format: \"dd/MM/yyyy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            dataField: \"createDate\",\n            dataType: \"date\",\n            visible: false,\n            defaultSortOrder: \"asc\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            dataField: \"scoreStudent\",\n            dataType: \"number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Toolbar, {\n            children: /*#__PURE__*/_jsxDEV(Item, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                onClick: () => {\n                  var _gridRef$current3, _gridRef$current3$ins;\n\n                  return (_gridRef$current3 = gridRef.current) === null || _gridRef$current3 === void 0 ? void 0 : (_gridRef$current3$ins = _gridRef$current3.instance) === null || _gridRef$current3$ins === void 0 ? void 0 : _gridRef$current3$ins.addRow();\n                },\n                children: \"add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}; //Create content customize Form\n\n\n_s(PopUpStudent, \"TYmQDuPlBc3fO/ztRLMw1M4uWe4=\", false, function () {\n  return [useGetData, useForm, useCreateData, useUpdateData, useDeleteData];\n});\n\n_c = PopUpStudent;\nexport default PopUpStudent;\n\nvar _c;\n\n$RefreshReg$(_c, \"PopUpStudent\");","map":{"version":3,"sources":["F:/ThucTapReactJS/my-app/src/components/PopUpStudent/index.js"],"names":["React","useEffect","useState","useRef","useCallback","ArrayStore","DataSource","LoadPanel","moment","DataGrid","Column","Paging","Pager","Editing","Popup","Toolbar","Item","Scrolling","ToolbarItem","TextField","Button","useForm","Controller","toast","useGetData","useGetDataByPaing","useDeleteData","useCreateData","useUpdateData","configure","PopUpStudent","refetchStudent","dataStudent","isErrorStudent","isLoadingStudent","setTimeout","allowedPageSizes","checkPopup","setCheckPopup","page","setPage","_pageIndex","_pageSize","isLoadingPanel","setIsLoadingPanel","isShowing","setIsShowing","TiTlePopup","setTiTlePopup","gridRef","studentDataSource","store","key","data","reshapeOnPush","register","handleSubmit","control","setValue","formState","errors","isSubmitSuccessful","defaultValues","something","nameStudent","phoneStudent","dateOfBirth","scoreStudent","createMutation","updateMutation","deleteMutation","isLoading","isError","error","isSuccess","onSubmitAdjustStudent","student","e","convertDate","format","newStudent","id","mutate","push","type","target","reset","onHidePopup","onShown","onShowing","renderContent","marginBottom","maxLength","minLength","required","color","display","justifyContent","marginTop","onRowRemoving","console","log","onSaving","onInitRow","createDate","Date","deleteLoading","renderButton","cell","current","instance","editRow","rowIndex","deleteRow","renderTitle","addRow"],"mappings":"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","sourcesContent":["import \"devextreme/dist/css/dx.common.css\";\r\nimport \"devextreme/dist/css/dx.light.css\";\r\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport ArrayStore from \"devextreme/data/array_store\";\r\nimport DataSource from \"devextreme/data/data_source\";\r\nimport { LoadPanel } from \"devextreme-react/load-panel\";\r\nimport \"./PopUpStudent.css\";\r\n\r\nimport moment from \"moment\";\r\nimport DataGrid, {\r\n  Column,\r\n  Paging,\r\n  Pager,\r\n  Editing,\r\n  Popup,\r\n  Toolbar,\r\n  Item,\r\n  Scrolling,\r\n  ToolbarItem,\r\n} from \"devextreme-react/data-grid\";\r\nimport { TextField, Button } from \"@material-ui/core\";\r\n\r\nimport { useForm, Controller } from \"react-hook-form\";\r\n\r\n// Toast\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport useGetData from \"./hooks/useGetData\";\r\nimport useGetDataByPaing from \"./hooks/useGetDataByPaging\";\r\nimport useDeleteData from \"./hooks/useDeleteData\";\r\nimport useCreateData from \"./hooks/useCreateData\";\r\nimport useUpdateData from \"./hooks/useUpdateData\";\r\n\r\n///\r\n\r\n/////////\r\ntoast.configure();\r\nconst PopUpStudent = () => {\r\n  ///Use Query\r\n  const {\r\n    refetchStudent,\r\n\r\n    dataStudent,\r\n    isErrorStudent,\r\n    isLoadingStudent,\r\n  } = useGetData();\r\n\r\n  setTimeout(dataStudent, 5000000);\r\n  //State\r\n  const allowedPageSizes = [5, 10, \"all\"];\r\n  const [checkPopup, setCheckPopup] = useState(null);\r\n  const [page, setPage] = useState({ _pageIndex: 1, _pageSize: 5 });\r\n  const [isLoadingPanel, setIsLoadingPanel] = useState(false);\r\n  const [isShowing, setIsShowing] = useState(false);\r\n  const [TiTlePopup, setTiTlePopup] = useState(\"\");\r\n\r\n  // Save params\r\n  const gridRef = useRef(null);\r\n\r\n  const studentDataSource = new DataSource({\r\n    store: new ArrayStore({\r\n      key: \"id\",\r\n      data: dataStudent,\r\n\r\n      // Other ArrayStore properties go here\r\n    }),\r\n    // Other DataSource properties go here\r\n\r\n    reshapeOnPush: true,\r\n  });\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    control,\r\n    setValue,\r\n    formState: { errors, isSubmitSuccessful },\r\n  } = useForm({ defaultValues: { something: \"anything\" } });\r\n\r\n  useEffect(() => {\r\n    if (checkPopup) {\r\n      setValue(\"nameStudent\", checkPopup.nameStudent);\r\n      setValue(\"phoneStudent\", checkPopup.phoneStudent);\r\n      setValue(\"dateOfBirth\", checkPopup.dateOfBirth);\r\n      setValue(\"scoreStudent\", checkPopup.scoreStudent);\r\n    }\r\n  }, [checkPopup]);\r\n\r\n  const createMutation = useCreateData();\r\n  const updateMutation = useUpdateData();\r\n  const deleteMutation = useDeleteData();\r\n  // const {\r\n  //   dataStudentByPaging,\r\n  //   isLoadingStudentByPaging,\r\n  //   refetchStudentByPaging,\r\n  //   removeStudentByPaging,\r\n\r\n  //   errorStudentByPaging,\r\n  // } = useGetDataByPaging(page);\r\n\r\n  const { isLoading, isError, error, isSuccess } = createMutation;\r\n\r\n  const onSubmitAdjustStudent = async (student, e) => {\r\n    if (checkPopup !== null) {\r\n      let convertDate = moment(student.dateOfBirth).format(\"YYYY-MM-DD\");\r\n      let newStudent = {\r\n        id: checkPopup.id,\r\n        nameStudent: student.nameStudent,\r\n        phoneStudent: student.phoneStudent,\r\n        dateOfBirth: convertDate,\r\n        scoreStudent: student.scoreStudent,\r\n      };\r\n      updateMutation.mutate(newStudent);\r\n      studentDataSource\r\n        .store()\r\n        .push([{ type: \"update\", data: newStudent, key: checkPopup.id }]);\r\n    } else {\r\n      const newStudent = [{\r\n        nameStudent: student.nameStudent,\r\n        scoreStudent: student.scoreStudent,\r\n        phoneStudent: student.phoneStudent,\r\n        dateOfBirth: student.dateOfBirth,\r\n\r\n        // id: randomIdStudent,\r\n      }];\r\n      createMutation.mutate(newStudent);\r\n      studentDataSource.store().push([{ type: \"insert\", data: newStudent }]);\r\n    }\r\n    e.target.reset();\r\n    setCheckPopup(null);\r\n    setIsShowing(false);\r\n    setIsLoadingPanel(true);\r\n  };\r\n\r\n  const onHidePopup = (e) => {\r\n    setIsShowing(false);\r\n    setCheckPopup(null);\r\n  };\r\n  const onShown = () => {\r\n    setIsShowing(true);\r\n  };\r\n  const onShowing = () => {\r\n    if (checkPopup !== null) {\r\n      setTiTlePopup(\"Update Student\");\r\n    } else {\r\n      setTiTlePopup(\"Add Student\");\r\n    }\r\n  };\r\n\r\n  const renderContent = () => {\r\n    return (\r\n      <>\r\n        <form onSubmit={handleSubmit(onSubmitAdjustStudent)}>\r\n          <div style={{ marginBottom: \"10px\" }}>\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              label=\"Name Student\"\r\n              variant=\"outlined\"\r\n              {...register(\"nameStudent\", {\r\n                maxLength: 100,\r\n                minLength: 3,\r\n\r\n                required: true,\r\n              })}\r\n            />\r\n            {errors.nameStudent?.type === \"required\" && (\r\n              <p style={{ color: \"red\" }}>This field is required</p>\r\n            )}{\" \"}\r\n            {errors.nameStudent?.type === \"minLength\" && (\r\n              <p style={{ color: \"red\" }}>You are input name invalid</p>\r\n            )}{\" \"}\r\n          </div>\r\n\r\n          <div style={{ marginBottom: \"10px\" }}>\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              label=\"Phone Student\"\r\n              variant=\"outlined\"\r\n              {...register(\"phoneStudent\", {\r\n                required: true,\r\n                minLength: 6,\r\n                maxLength: 12,\r\n              })}\r\n            />\r\n\r\n            {errors.phoneStudent?.type === \"required\" && (\r\n              <p style={{ color: \"red\" }}>This field is required</p>\r\n            )}\r\n            {errors.phoneStudent?.type === \"maxLength\" && (\r\n              <p style={{ color: \"red\" }}>Phone Number 10 char</p>\r\n            )}\r\n            {errors.phoneStudent?.type === \"minLength\" && (\r\n              <p style={{ color: \"red\" }}>Phone Number 10 char</p>\r\n            )}\r\n          </div>\r\n\r\n          <div style={{ marginBottom: \"10px\" }}>\r\n            <TextField\r\n              type=\"date\"\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              variant=\"outlined\"\r\n              {...register(\"dateOfBirth\", { required: true })}\r\n            />\r\n\r\n            {/* <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n              <DesktopDatePicker\r\n                name=\"dateOfBirth\"\r\n                label=\"Date desktop\"\r\n                inputFormat=\"dd/MM/yyyy\"\r\n                value={date}\r\n                onChange={handleChangeDatetime}\r\n                renderInput={(params) => (\r\n                  <TextField {...register(\"dateOfBirth\")} {...params} />\r\n                )}\r\n              />\r\n            </LocalizationProvider> */}\r\n            {errors.dateOfBirth?.type === \"required\" && (\r\n              <p style={{ color: \"red\" }}>This field is required</p>\r\n            )}\r\n          </div>\r\n\r\n          <div style={{ marginBottom: \"10px\" }}>\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              label=\"Score Student\"\r\n              variant=\"outlined\"\r\n              {...register(\"scoreStudent\", {\r\n                required: true,\r\n                minLength: 1,\r\n                maxLength: 2,\r\n              })}\r\n            />\r\n            {errors.phoneStudent?.type === \"maxLength\" && (\r\n              <p style={{ color: \"red\" }}>Score between 0 and 10</p>\r\n            )}\r\n            {errors.scoreStudent?.type === \"required\" && (\r\n              <p style={{ color: \"red\" }}>This field is required</p>\r\n            )}\r\n          </div>\r\n\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              marginTop: \"100px\",\r\n            }}\r\n          >\r\n            <Button type=\"submit\" variant=\"contained\">\r\n              Save\r\n            </Button>\r\n            <Button type=\"reset\" onClick={onHidePopup} variant=\"contained\">\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </>\r\n    );\r\n  };\r\n  // Process Button: Edit and Remove\r\n\r\n  // Render button and add Row\r\n\r\n  const onRowRemoving = (e) => {\r\n    setIsLoadingPanel(true);\r\n    console.log(\"Key: \" + e.data);\r\n    let data = e.data;\r\n    // deleteMutation.mutate(data.id);\r\n    setTimeout(deleteMutation.mutate(data.id), 50000);\r\n  };\r\n\r\n  const onSaving = React.useCallback((e) => {\r\n    setIsLoadingPanel(true);\r\n  }, []);\r\n  const onInitRow = (e) => {\r\n    e.data.createDate = new Date();\r\n    // e.data.id = Math.ceil(Math.random() * (10000 - 100) + 100);\r\n  };\r\n  const deleteLoading = () => {\r\n    setIsLoadingPanel(true);\r\n  };\r\n  const renderButton = (cell) => {\r\n    ///How to Debugger: Put Break point and add debugger\r\n\r\n    return (\r\n      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n        <Button\r\n          variant=\"contained\"\r\n          onClick={() => {\r\n            gridRef.current?.instance?.editRow(cell.rowIndex);\r\n            setCheckPopup(cell.data);\r\n          }}\r\n        >\r\n          edit\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          onClick={() => {\r\n            gridRef.current?.instance?.deleteRow(cell.rowIndex);\r\n            deleteLoading();\r\n          }}\r\n        >\r\n          remove\r\n        </Button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderTitle = () => {\r\n    return <p>{TiTlePopup}</p>;\r\n  };\r\nconsole.log(\"Get Data Loading: \"+isLoadingStudent)\r\n\r\nconsole.log(\"Create Loading: \"+createMutation.isLoading)\r\nconsole.log(\"Delete Loading: \"+deleteMutation.isLoading)\r\n\r\n  return (\r\n    <>\r\n      {/* {isLoadingStudent ? (\r\n        <div>Loading...</div>\r\n      ) : isErrorStudent ? (\r\n        <div>An error while fetching posts</div>\r\n      ) : ( */}\r\n      <div>\r\n        <div className=\"main__title\">\r\n          <h1>Manage Data Student</h1>\r\n        </div>\r\n\r\n        <div className=\"main__Add\"></div>\r\n        <div className=\"main__body\">\r\n          <DataGrid\r\n            id=\"dataGrid\"\r\n            dataSource={dataStudent || []}\r\n            remoteOperations={true}\r\n            ref={gridRef}\r\n            onRowRemoving={onRowRemoving}\r\n            // onSaving={onSaving}\r\n            onInitNewRow={onInitRow}\r\n          >\r\n            <LoadPanel\r\n            id=\"dataGrid\"\r\n              position=\"right\"\r\n              shadingColor=\"rgba(0,0,0,1)\"\r\n              visible={isLoadingStudent||createMutation.isLoading||deleteMutation.isLoading}\r\n              showIndicator={true}\r\n              shading={true}\r\n              showPane={true}\r\n             \r\n            />\r\n            <Scrolling rowRenderingMode=\"virtual\"></Scrolling>\r\n            <Paging defaultPageSize={5} />\r\n            <Pager\r\n              visible={true}\r\n              allowedPageSizes={allowedPageSizes}\r\n              displayMode=\"compact\"\r\n            />\r\n            <Editing mode=\"popup\" useIcons={true}>\r\n              <Popup\r\n                showTitle={true}\r\n                width={700}\r\n                height={725}\r\n                visible={isShowing}\r\n                titleRender={renderTitle}\r\n                onShown={onShown}\r\n                onShowing={onShowing}\r\n                // Customize Popup\r\n                contentRender={renderContent}\r\n              >\r\n                <ToolbarItem />\r\n              </Popup>\r\n              <TextField label=\"Student\"></TextField>\r\n            </Editing>\r\n            {/* Create Column include Add Remove Update */}\r\n            <Column cellRender={renderButton} dataField=\"\" />\r\n            <Column dataField=\"nameStudent\" dataType=\"string\" />\r\n            <Column dataField=\"phoneStudent\" dataType=\"string\" />\r\n            <Column\r\n              dataField=\"dateOfBirth\"\r\n              dataType=\"date\"\r\n              format=\"dd/MM/yyyy\"\r\n            />\r\n            <Column\r\n              dataField=\"createDate\"\r\n              dataType=\"date\"\r\n              visible={false}\r\n              defaultSortOrder=\"asc\"\r\n            />\r\n            <Column dataField=\"scoreStudent\" dataType=\"number\" />\r\n            <Toolbar>\r\n              <Item>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  onClick={() => gridRef.current?.instance?.addRow()}\r\n                >\r\n                  add\r\n                </Button>\r\n              </Item>\r\n            </Toolbar>\r\n          </DataGrid>\r\n        </div>\r\n\r\n        {/* ///React Hook Form + Material Setup */}\r\n      </div>\r\n      {/* )} */}\r\n    </>\r\n  );\r\n};\r\n//Create content customize Form\r\n\r\nexport default PopUpStudent;\r\n"]},"metadata":{},"sourceType":"module"}